{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25","program":"/home/haruka/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","--cfg","feature=\"winapi\"","-C","metadata=55071f8d0a32d166","-C","extra-filename=-55071f8d0a32d166","--out-dir","/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps","-L","dependency=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps","--extern","bytes=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/libbytes-9e4b97e3651e8045.rmeta","--extern","futures_core=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/libfutures_core-75bc8f79ab711f00.rmeta","--extern","iovec=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/libiovec-3c2077efc8398880.rmeta","--extern","lazy_static=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/liblazy_static-2e96fad95f41f0a7.rmeta","--extern","libc=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/liblibc-2f90450774fd0d00.rmeta","--extern","memchr=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/libmemchr-59bfabb1681d912f.rmeta","--extern","mio=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/libmio-9a91c2b8a96acb08.rmeta","--extern","mio_uds=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/libmio_uds-0d8799a8e3278870.rmeta","--extern","pin_project_lite=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/libpin_project_lite-f3a9852a131c8404.rmeta","--extern","signal_hook_registry=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/libsignal_hook_registry-254aababe3e74ce6.rmeta","--extern","slab=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/libslab-ec281b2dbb801bdd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/haruka/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/libtokio-55071f8d0a32d166.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[14909239305197802273,5254047380937819999]},"crate_root":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src","external_crates":[{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/try_join.rs","num":18,"id":{"name":"pin_project_lite","disambiguator":[4089665462361901570,9798006769497655440]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","num":19,"id":{"name":"bytes","disambiguator":[14956966648981104942,17113147421149821887]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","num":20,"id":{"name":"futures_core","disambiguator":[14794381589893115215,4763590013069579193]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":21,"id":{"name":"mio","disambiguator":[7790581131918548185,1593968094143004453]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":22,"id":{"name":"net2","disambiguator":[3888527484992745458,8536090330403666449]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","num":23,"id":{"name":"libc","disambiguator":[2692399340708257232,3313042538143333194]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":24,"id":{"name":"cfg_if","disambiguator":[9015421078749522011,4315844557797051765]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","num":25,"id":{"name":"iovec","disambiguator":[7061340026164815584,17739555340033718532]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","num":26,"id":{"name":"slab","disambiguator":[12314209455201404546,12853708085438978694]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":27,"id":{"name":"log","disambiguator":[5025637977821184229,5769085142782101583]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/platform.rs","num":28,"id":{"name":"cfg_if","disambiguator":[17405709527175409947,1096695995382631820]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","num":29,"id":{"name":"lazy_static","disambiguator":[2470383162066340162,6700700590454652848]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","num":30,"id":{"name":"mio_uds","disambiguator":[13985159188726115695,13901233618007913271]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","num":31,"id":{"name":"memchr","disambiguator":[14065984754148341751,3050617661830808584]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","num":32,"id":{"name":"signal_hook_registry","disambiguator":[15577782723857508619,17064667696786997933]}}],"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":0,"byte_end":15866,"line_start":1,"line_end":437,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":9131},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":30992,"byte_end":30998,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":32460},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":31018,"byte_end":31021,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":2,"index":34965},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":31042,"byte_end":31046,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31150,"byte_end":31160,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":884},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31162,"byte_end":31171,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31205,"byte_end":31212,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45170,"byte_end":45182,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45227,"byte_end":45236,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45281,"byte_end":45290,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45337,"byte_end":45347,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2704},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45499,"byte_end":45504,"line_start":201,"line_end":201,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":7125},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45506,"byte_end":45515,"line_start":201,"line_end":201,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":2702},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45517,"byte_end":45523,"line_start":201,"line_end":201,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":1,"index":7202},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45525,"byte_end":45533,"line_start":201,"line_end":201,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1190},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45630,"byte_end":45641,"line_start":207,"line_end":207,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1194},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45692,"byte_end":45704,"line_start":210,"line_end":210,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1317},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45936,"byte_end":45941,"line_start":226,"line_end":226,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1311},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45943,"byte_end":45951,"line_start":226,"line_end":226,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1314},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45953,"byte_end":45962,"line_start":226,"line_end":226,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1319},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46015,"byte_end":46019,"line_start":229,"line_end":229,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2159},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46075,"byte_end":46079,"line_start":233,"line_end":233,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1711},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46081,"byte_end":46087,"line_start":233,"line_end":233,"column_start":15,"column_end":21},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2181},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46089,"byte_end":46094,"line_start":233,"line_end":233,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2420},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46096,"byte_end":46102,"line_start":233,"line_end":233,"column_start":30,"column_end":36},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2435},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46104,"byte_end":46108,"line_start":233,"line_end":233,"column_start":38,"column_end":42},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2053},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46110,"byte_end":46125,"line_start":233,"line_end":233,"column_start":44,"column_end":59},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2061},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46127,"byte_end":46139,"line_start":233,"line_end":233,"column_start":61,"column_end":73},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":1398},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46141,"byte_end":46153,"line_start":233,"line_end":233,"column_start":75,"column_end":87},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2113},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46155,"byte_end":46168,"line_start":233,"line_end":233,"column_start":89,"column_end":102},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":10077},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46178,"byte_end":46187,"line_start":234,"line_end":234,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":10050},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46189,"byte_end":46198,"line_start":234,"line_end":234,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":10000},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46200,"byte_end":46209,"line_start":234,"line_end":234,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2190},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46211,"byte_end":46223,"line_start":234,"line_end":234,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2163},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46225,"byte_end":46229,"line_start":234,"line_end":234,"column_start":56,"column_end":60},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2179},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46231,"byte_end":46236,"line_start":234,"line_end":234,"column_start":62,"column_end":67},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9912},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46238,"byte_end":46243,"line_start":234,"line_end":234,"column_start":69,"column_end":74},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2421},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46245,"byte_end":46251,"line_start":234,"line_end":234,"column_start":76,"column_end":82},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2433},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46253,"byte_end":46257,"line_start":234,"line_end":234,"column_start":84,"column_end":88},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9078},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46259,"byte_end":46264,"line_start":234,"line_end":234,"column_start":90,"column_end":95},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":8949},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46266,"byte_end":46270,"line_start":234,"line_end":234,"column_start":97,"column_end":101},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2451},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46321,"byte_end":46334,"line_start":238,"line_end":238,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":9031},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46336,"byte_end":46348,"line_start":238,"line_end":238,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":2485},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46374,"byte_end":46387,"line_start":239,"line_end":239,"column_start":24,"column_end":37},"alias_span":null,"name":"reader_stream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":8989},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":46389,"byte_end":46401,"line_start":239,"line_end":239,"column_start":39,"column_end":51},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":177}},{"kind":"Use","ref_id":{"krate":0,"index":324},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72848,"byte_end":72861,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":2939},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":8938781,"byte_end":8938789,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2672}},{"kind":"Use","ref_id":{"krate":0,"index":2945},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":8938819,"byte_end":8938827,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2672}},{"kind":"Use","ref_id":{"krate":0,"index":2952},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":8938829,"byte_end":8938838,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2672}},{"kind":"Use","ref_id":{"krate":0,"index":2959},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":8938881,"byte_end":8938894,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":2672}},{"kind":"Use","ref_id":{"krate":0,"index":2963},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":8938896,"byte_end":8938910,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":2672}},{"kind":"Use","ref_id":{"krate":0,"index":2968},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":8938912,"byte_end":8938924,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2672}},{"kind":"Use","ref_id":{"krate":0,"index":2969},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":8938912,"byte_end":8938924,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2829}},{"kind":"Use","ref_id":{"krate":0,"index":2937},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72992,"byte_end":73003,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":2974},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73030,"byte_end":73039,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":3112},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":8999108,"byte_end":8999116,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":3117},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":8999118,"byte_end":8999130,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":3118},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":8999118,"byte_end":8999130,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3102}},{"kind":"Use","ref_id":{"krate":0,"index":3107},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":8999132,"byte_end":8999140,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":2976}},{"kind":"Use","ref_id":{"krate":0,"index":3105},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73097,"byte_end":73106,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":3515},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":9021720,"byte_end":9021728,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":3124}},{"kind":"Use","ref_id":{"krate":0,"index":3522},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":9021730,"byte_end":9021738,"line_start":7,"line_end":7,"column_start":27,"column_end":35},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":3124}},{"kind":"Use","ref_id":{"krate":0,"index":3534},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":9021763,"byte_end":9021776,"line_start":8,"line_end":8,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedRecvHalf","value":"","parent":{"krate":0,"index":3124}},{"kind":"Use","ref_id":{"krate":0,"index":3529},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":9021778,"byte_end":9021791,"line_start":8,"line_end":8,"column_start":38,"column_end":51},"alias_span":null,"name":"OwnedSendHalf","value":"","parent":{"krate":0,"index":3124}},{"kind":"Use","ref_id":{"krate":0,"index":3538},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":9021793,"byte_end":9021805,"line_start":8,"line_end":8,"column_start":53,"column_end":65},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3124}},{"kind":"Use","ref_id":{"krate":0,"index":3539},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":9021793,"byte_end":9021805,"line_start":8,"line_end":8,"column_start":53,"column_end":65},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3282}},{"kind":"Use","ref_id":{"krate":0,"index":3544},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":9021299,"byte_end":9021307,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":3123}},{"kind":"Use","ref_id":{"krate":0,"index":3552},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":9021402,"byte_end":9021410,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3123}},{"kind":"Use","ref_id":{"krate":0,"index":3559},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":9021412,"byte_end":9021421,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3123}},{"kind":"Use","ref_id":{"krate":0,"index":3566},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":9021464,"byte_end":9021477,"line_start":15,"line_end":15,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3123}},{"kind":"Use","ref_id":{"krate":0,"index":3570},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":9021479,"byte_end":9021493,"line_start":15,"line_end":15,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3123}},{"kind":"Use","ref_id":{"krate":0,"index":3575},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":9021495,"byte_end":9021507,"line_start":15,"line_end":15,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3123}},{"kind":"Use","ref_id":{"krate":0,"index":3576},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":9021495,"byte_end":9021507,"line_start":15,"line_end":15,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3415}},{"kind":"Use","ref_id":{"krate":0,"index":3583},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":9021596,"byte_end":9021601,"line_start":21,"line_end":21,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":3123}},{"kind":"Use","ref_id":{"krate":0,"index":3513},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73176,"byte_end":73188,"line_start":46,"line_end":46,"column_start":37,"column_end":49},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":3550},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73218,"byte_end":73230,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":3581},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73258,"byte_end":73268,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":313}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106381,"byte_end":106383,"line_start":16,"line_end":16,"column_start":16,"column_end":18},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106392,"byte_end":106404,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106406,"byte_end":106415,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106417,"byte_end":106427,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":2053},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106492,"byte_end":106507,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":2061},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106514,"byte_end":106526,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":1398},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106533,"byte_end":106545,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":2113},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106552,"byte_end":106565,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":564}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114096,"byte_end":114103,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":570}},{"kind":"Use","ref_id":{"krate":0,"index":4337},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114188,"byte_end":114194,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":570}},{"kind":"Use","ref_id":{"krate":0,"index":668},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114196,"byte_end":114211,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":570}},{"kind":"Use","ref_id":{"krate":0,"index":4428},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138917,"byte_end":9138923,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":4423}},{"kind":"Use","ref_id":{"krate":0,"index":4682},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9175827,"byte_end":9175837,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":4604}},{"kind":"Use","ref_id":{"krate":0,"index":4774},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9175867,"byte_end":9175872,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":4604}},{"kind":"Use","ref_id":{"krate":0,"index":5214},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9175874,"byte_end":9175879,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":4604}},{"kind":"Use","ref_id":{"krate":0,"index":4875},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176045,"byte_end":9176049,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":4604}},{"kind":"Use","ref_id":{"krate":0,"index":5221},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176051,"byte_end":9176055,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":4604}},{"kind":"Use","ref_id":{"krate":0,"index":4965},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176165,"byte_end":9176169,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":4604}},{"kind":"Use","ref_id":{"krate":0,"index":5235},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176171,"byte_end":9176175,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":4604}},{"kind":"Use","ref_id":{"krate":0,"index":4988},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176210,"byte_end":9176217,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":4604}},{"kind":"Use","ref_id":{"krate":0,"index":5241},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176219,"byte_end":9176226,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":4604}},{"kind":"Use","ref_id":{"krate":0,"index":5248},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176266,"byte_end":9176275,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":4604}},{"kind":"Use","ref_id":{"krate":20,"index":68},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176567,"byte_end":9176573,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":4604}},{"kind":"Use","ref_id":{"krate":0,"index":4257},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9447066,"byte_end":9447075,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":6191}},{"kind":"Use","ref_id":{"krate":0,"index":4259},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9447077,"byte_end":9447087,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":6191}},{"kind":"Use","ref_id":{"krate":0,"index":6208},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9447125,"byte_end":9447130,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":6191}},{"kind":"Use","ref_id":{"krate":0,"index":6210},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9447175,"byte_end":9447184,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":6191}},{"kind":"Use","ref_id":{"krate":0,"index":6370},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9447239,"byte_end":9447250,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":6191}},{"kind":"Use","ref_id":{"krate":0,"index":6361},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9447252,"byte_end":9447260,"line_start":238,"line_end":238,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":6191}},{"kind":"Use","ref_id":{"krate":0,"index":6313},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9447308,"byte_end":9447316,"line_start":241,"line_end":241,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":6191}},{"kind":"Use","ref_id":{"krate":0,"index":6208},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14601,"byte_end":14606,"line_start":390,"line_end":390,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6878},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480981,"byte_end":9480991,"line_start":101,"line_end":101,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":0,"index":6477},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481021,"byte_end":9481030,"line_start":104,"line_end":104,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":0,"index":6476},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481032,"byte_end":9481043,"line_start":104,"line_end":104,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":0,"index":6920},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481045,"byte_end":9481050,"line_start":104,"line_end":104,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":0,"index":6979},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481104,"byte_end":9481109,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":0,"index":6999},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481148,"byte_end":9481155,"line_start":112,"line_end":112,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":0,"index":6737},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481191,"byte_end":9481199,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":0,"index":6738},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481201,"byte_end":9481212,"line_start":115,"line_end":115,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":0,"index":7022},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481214,"byte_end":9481222,"line_start":115,"line_end":115,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":0,"index":6765},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481272,"byte_end":9481279,"line_start":119,"line_end":119,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":0,"index":6767},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481281,"byte_end":9481291,"line_start":119,"line_end":119,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":0,"index":7027},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481293,"byte_end":9481300,"line_start":119,"line_end":119,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":0,"index":7414},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481302,"byte_end":9481309,"line_start":119,"line_end":119,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":0,"index":7049},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481368,"byte_end":9481376,"line_start":123,"line_end":123,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":0,"index":7366},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481378,"byte_end":9481386,"line_start":123,"line_end":123,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":6385}},{"kind":"Use","ref_id":{"krate":2,"index":34835},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9481495,"byte_end":9481503,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":6385}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":0,"byte_end":15866,"line_start":1,"line_end":437,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":83},{"krate":0,"index":177},{"krate":0,"index":313},{"krate":0,"index":378},{"krate":0,"index":514},{"krate":0,"index":564},{"krate":0,"index":570},{"krate":0,"index":746},{"krate":0,"index":4423},{"krate":0,"index":4604},{"krate":0,"index":5293},{"krate":0,"index":6191},{"krate":0,"index":6192},{"krate":0,"index":6385},{"krate":0,"index":765}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main, clippy :: match_like_matches_macro, clippy\n        :: stable_sort_primitive)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":56,"byte_end":241,"line_start":2,"line_end":8,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":242,"byte_end":348,"line_start":9,"line_end":14,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":557,"byte_end":629,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":630,"byte_end":633,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":634,"byte_end":714,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":715,"byte_end":787,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":788,"byte_end":824,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":825,"byte_end":828,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":829,"byte_end":896,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":897,"byte_end":977,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":978,"byte_end":1001,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1002,"byte_end":1089,"line_start":31,"line_end":31,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1090,"byte_end":1163,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1164,"byte_end":1242,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1243,"byte_end":1323,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1324,"byte_end":1374,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1375,"byte_end":1378,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1379,"byte_end":1435,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1436,"byte_end":1439,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1440,"byte_end":1472,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1473,"byte_end":1496,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1497,"byte_end":1520,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1521,"byte_end":1547,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1548,"byte_end":1569,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1570,"byte_end":1589,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1590,"byte_end":1619,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1620,"byte_end":1647,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1648,"byte_end":1667,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1668,"byte_end":1697,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1698,"byte_end":1744,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1745,"byte_end":1748,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1749,"byte_end":1770,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1771,"byte_end":1774,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1775,"byte_end":1854,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1855,"byte_end":1928,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":1929,"byte_end":2008,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2009,"byte_end":2024,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2025,"byte_end":2028,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2029,"byte_end":2101,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2102,"byte_end":2139,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2140,"byte_end":2143,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2144,"byte_end":2155,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2156,"byte_end":2208,"line_start":62,"line_end":62,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2209,"byte_end":2216,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2217,"byte_end":2220,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2221,"byte_end":2241,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2242,"byte_end":2245,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2246,"byte_end":2327,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2328,"byte_end":2406,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2407,"byte_end":2487,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2488,"byte_end":2565,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2566,"byte_end":2649,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2650,"byte_end":2727,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2728,"byte_end":2815,"line_start":73,"line_end":73,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2816,"byte_end":2897,"line_start":74,"line_end":74,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2898,"byte_end":2907,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2908,"byte_end":2911,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2912,"byte_end":2977,"line_start":77,"line_end":77,"column_start":1,"column_end":66}},{"value":"/ - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":2978,"byte_end":3060,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3061,"byte_end":3143,"line_start":79,"line_end":79,"column_start":1,"column_end":83}},{"value":"/ - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3144,"byte_end":3193,"line_start":80,"line_end":80,"column_start":1,"column_end":50}},{"value":"/ - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3194,"byte_end":3247,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3248,"byte_end":3299,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3300,"byte_end":3360,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3361,"byte_end":3451,"line_start":84,"line_end":84,"column_start":1,"column_end":91}},{"value":"/ - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3452,"byte_end":3501,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3502,"byte_end":3551,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/ - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3552,"byte_end":3602,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3603,"byte_end":3680,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ the built in timer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3681,"byte_end":3704,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3705,"byte_end":3753,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3754,"byte_end":3823,"line_start":91,"line_end":91,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3824,"byte_end":3870,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/ - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3871,"byte_end":3952,"line_start":93,"line_end":93,"column_start":1,"column_end":82}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":3953,"byte_end":4003,"line_start":94,"line_end":94,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4004,"byte_end":4042,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4043,"byte_end":4098,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4099,"byte_end":4177,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4178,"byte_end":4242,"line_start":98,"line_end":98,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4243,"byte_end":4246,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4247,"byte_end":4329,"line_start":100,"line_end":100,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4330,"byte_end":4352,"line_start":101,"line_end":101,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4353,"byte_end":4356,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4357,"byte_end":4382,"line_start":103,"line_end":103,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4383,"byte_end":4386,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4387,"byte_end":4455,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4456,"byte_end":4519,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"/ dependencies. They are not included in `full`:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4520,"byte_end":4570,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4571,"byte_end":4574,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4575,"byte_end":4654,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4655,"byte_end":4732,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4733,"byte_end":4766,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4767,"byte_end":4770,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4771,"byte_end":4868,"line_start":113,"line_end":113,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4869,"byte_end":4872,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4873,"byte_end":4903,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4904,"byte_end":4907,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4908,"byte_end":4989,"line_start":117,"line_end":117,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":4990,"byte_end":5075,"line_start":118,"line_end":118,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5076,"byte_end":5160,"line_start":119,"line_end":119,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5161,"byte_end":5191,"line_start":120,"line_end":120,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5192,"byte_end":5195,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5196,"byte_end":5212,"line_start":122,"line_end":122,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5213,"byte_end":5216,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5217,"byte_end":5283,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5284,"byte_end":5287,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5288,"byte_end":5299,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5300,"byte_end":5352,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5353,"byte_end":5360,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5361,"byte_end":5364,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5365,"byte_end":5392,"line_start":130,"line_end":130,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5393,"byte_end":5396,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5397,"byte_end":5476,"line_start":132,"line_end":132,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5477,"byte_end":5559,"line_start":133,"line_end":133,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5560,"byte_end":5641,"line_start":134,"line_end":134,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5642,"byte_end":5677,"line_start":135,"line_end":135,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5678,"byte_end":5681,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5682,"byte_end":5698,"line_start":137,"line_end":137,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5699,"byte_end":5702,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5703,"byte_end":5785,"line_start":139,"line_end":139,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5786,"byte_end":5836,"line_start":140,"line_end":140,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5837,"byte_end":5840,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5841,"byte_end":5852,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5853,"byte_end":5915,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5916,"byte_end":5923,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5924,"byte_end":5927,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5928,"byte_end":5953,"line_start":146,"line_end":146,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5954,"byte_end":5957,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":5958,"byte_end":6034,"line_start":148,"line_end":148,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6035,"byte_end":6118,"line_start":149,"line_end":149,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6119,"byte_end":6162,"line_start":150,"line_end":150,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6163,"byte_end":6166,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6167,"byte_end":6246,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6247,"byte_end":6330,"line_start":153,"line_end":153,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6331,"byte_end":6409,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6410,"byte_end":6429,"line_start":155,"line_end":155,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6430,"byte_end":6433,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6434,"byte_end":6512,"line_start":157,"line_end":157,"column_start":1,"column_end":79}},{"value":"/ is enabled.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6513,"byte_end":6528,"line_start":158,"line_end":158,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6529,"byte_end":6532,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6533,"byte_end":6576,"line_start":160,"line_end":160,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6577,"byte_end":6609,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6610,"byte_end":6645,"line_start":162,"line_end":162,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6646,"byte_end":6689,"line_start":163,"line_end":163,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6690,"byte_end":6743,"line_start":164,"line_end":164,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6744,"byte_end":6747,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6748,"byte_end":6826,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6827,"byte_end":6883,"line_start":167,"line_end":167,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6884,"byte_end":6887,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6888,"byte_end":6961,"line_start":169,"line_end":169,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6962,"byte_end":6982,"line_start":170,"line_end":170,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":6983,"byte_end":7058,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7059,"byte_end":7071,"line_start":172,"line_end":172,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7072,"byte_end":7152,"line_start":173,"line_end":173,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7153,"byte_end":7183,"line_start":174,"line_end":174,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7184,"byte_end":7187,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7188,"byte_end":7264,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7265,"byte_end":7277,"line_start":177,"line_end":177,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7278,"byte_end":7281,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7282,"byte_end":7314,"line_start":179,"line_end":179,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7315,"byte_end":7348,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7349,"byte_end":7386,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7387,"byte_end":7424,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7425,"byte_end":7456,"line_start":183,"line_end":183,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7457,"byte_end":7490,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7491,"byte_end":7494,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7495,"byte_end":7566,"line_start":186,"line_end":186,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7567,"byte_end":7647,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7648,"byte_end":7736,"line_start":188,"line_end":188,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7737,"byte_end":7761,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7762,"byte_end":7765,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7766,"byte_end":7841,"line_start":191,"line_end":191,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7842,"byte_end":7845,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7846,"byte_end":7878,"line_start":193,"line_end":193,"column_start":1,"column_end":33}},{"value":"/ [delay]: crate::time::delay_for()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7879,"byte_end":7916,"line_start":194,"line_end":194,"column_start":1,"column_end":38}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7917,"byte_end":7956,"line_start":195,"line_end":195,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7957,"byte_end":7994,"line_start":196,"line_end":196,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7995,"byte_end":7998,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":7999,"byte_end":8077,"line_start":198,"line_end":198,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8078,"byte_end":8162,"line_start":199,"line_end":199,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8163,"byte_end":8235,"line_start":200,"line_end":200,"column_start":1,"column_end":73}},{"value":"/ required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8236,"byte_end":8313,"line_start":201,"line_end":201,"column_start":1,"column_end":78}},{"value":"/ managing runtimes.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8314,"byte_end":8336,"line_start":202,"line_end":202,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8337,"byte_end":8340,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8341,"byte_end":8420,"line_start":204,"line_end":204,"column_start":1,"column_end":80}},{"value":"/ enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8421,"byte_end":8499,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/ scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8500,"byte_end":8568,"line_start":206,"line_end":206,"column_start":1,"column_end":69}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8569,"byte_end":8647,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8648,"byte_end":8718,"line_start":208,"line_end":208,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8719,"byte_end":8722,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8723,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8750,"byte_end":8788,"line_start":211,"line_end":211,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8789,"byte_end":8829,"line_start":212,"line_end":212,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8830,"byte_end":8870,"line_start":213,"line_end":213,"column_start":1,"column_end":41}},{"value":"/ [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8871,"byte_end":8920,"line_start":214,"line_end":214,"column_start":1,"column_end":50}},{"value":"/ [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8921,"byte_end":8977,"line_start":215,"line_end":215,"column_start":1,"column_end":57}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":8978,"byte_end":9033,"line_start":216,"line_end":216,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9034,"byte_end":9037,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9038,"byte_end":9078,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9079,"byte_end":9082,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9083,"byte_end":9162,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9163,"byte_end":9240,"line_start":221,"line_end":221,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9241,"byte_end":9321,"line_start":222,"line_end":222,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9322,"byte_end":9396,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9397,"byte_end":9476,"line_start":224,"line_end":224,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9477,"byte_end":9554,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9555,"byte_end":9628,"line_start":226,"line_end":226,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9629,"byte_end":9709,"line_start":227,"line_end":227,"column_start":1,"column_end":81}},{"value":"/ block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9710,"byte_end":9788,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"/ out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9789,"byte_end":9867,"line_start":229,"line_end":229,"column_start":1,"column_end":79}},{"value":"/ on the number of blocking threads is very large. These limits can be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9868,"byte_end":9940,"line_start":230,"line_end":230,"column_start":1,"column_end":73}},{"value":"/ configured on the [`Builder`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9941,"byte_end":9975,"line_start":231,"line_end":231,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9976,"byte_end":9979,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":9980,"byte_end":10057,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10058,"byte_end":10061,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10062,"byte_end":10102,"line_start":235,"line_end":235,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10103,"byte_end":10156,"line_start":236,"line_end":236,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10157,"byte_end":10160,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10161,"byte_end":10168,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10169,"byte_end":10187,"line_start":239,"line_end":239,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10188,"byte_end":10209,"line_start":240,"line_end":240,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10210,"byte_end":10254,"line_start":241,"line_end":241,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10255,"byte_end":10258,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10259,"byte_end":10319,"line_start":243,"line_end":243,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10320,"byte_end":10372,"line_start":244,"line_end":244,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10373,"byte_end":10408,"line_start":245,"line_end":245,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10409,"byte_end":10420,"line_start":246,"line_end":246,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10421,"byte_end":10424,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10425,"byte_end":10480,"line_start":248,"line_end":248,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10481,"byte_end":10556,"line_start":249,"line_end":249,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10557,"byte_end":10574,"line_start":250,"line_end":250,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10575,"byte_end":10612,"line_start":251,"line_end":251,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10613,"byte_end":10618,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10619,"byte_end":10626,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10627,"byte_end":10630,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10631,"byte_end":10709,"line_start":255,"line_end":255,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10710,"byte_end":10786,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10787,"byte_end":10863,"line_start":257,"line_end":257,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10864,"byte_end":10888,"line_start":258,"line_end":258,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10889,"byte_end":10892,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10893,"byte_end":10927,"line_start":260,"line_end":260,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10928,"byte_end":10965,"line_start":261,"line_end":261,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10966,"byte_end":10969,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10970,"byte_end":10992,"line_start":263,"line_end":263,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10993,"byte_end":10996,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":10997,"byte_end":11076,"line_start":265,"line_end":265,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11077,"byte_end":11124,"line_start":266,"line_end":266,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11125,"byte_end":11128,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11129,"byte_end":11208,"line_start":268,"line_end":268,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11209,"byte_end":11289,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11290,"byte_end":11370,"line_start":270,"line_end":270,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11371,"byte_end":11442,"line_start":271,"line_end":271,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11443,"byte_end":11523,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"/ also provides utilities for library authors implementing I/O resources.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11524,"byte_end":11599,"line_start":273,"line_end":273,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11600,"byte_end":11603,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11604,"byte_end":11684,"line_start":275,"line_end":275,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11685,"byte_end":11745,"line_start":276,"line_end":276,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11746,"byte_end":11749,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11750,"byte_end":11829,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11830,"byte_end":11899,"line_start":279,"line_end":279,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11900,"byte_end":11977,"line_start":280,"line_end":280,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":11978,"byte_end":12034,"line_start":281,"line_end":281,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12035,"byte_end":12115,"line_start":282,"line_end":282,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12116,"byte_end":12161,"line_start":283,"line_end":283,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12162,"byte_end":12241,"line_start":284,"line_end":284,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12242,"byte_end":12276,"line_start":285,"line_end":285,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12277,"byte_end":12280,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12281,"byte_end":12309,"line_start":287,"line_end":287,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12310,"byte_end":12349,"line_start":288,"line_end":288,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12350,"byte_end":12391,"line_start":289,"line_end":289,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12392,"byte_end":12437,"line_start":290,"line_end":290,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12438,"byte_end":12462,"line_start":291,"line_end":291,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12463,"byte_end":12493,"line_start":292,"line_end":292,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12494,"byte_end":12520,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::udp","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12521,"byte_end":12547,"line_start":294,"line_end":294,"column_start":1,"column_end":27}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12548,"byte_end":12575,"line_start":295,"line_end":295,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12576,"byte_end":12604,"line_start":296,"line_end":296,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12605,"byte_end":12629,"line_start":297,"line_end":297,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12630,"byte_end":12666,"line_start":298,"line_end":298,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12667,"byte_end":12705,"line_start":299,"line_end":299,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12706,"byte_end":12709,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12710,"byte_end":12724,"line_start":301,"line_end":301,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12725,"byte_end":12728,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12729,"byte_end":12758,"line_start":303,"line_end":303,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12759,"byte_end":12762,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12763,"byte_end":12776,"line_start":305,"line_end":305,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12777,"byte_end":12809,"line_start":306,"line_end":306,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12810,"byte_end":12836,"line_start":307,"line_end":307,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12837,"byte_end":12840,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12841,"byte_end":12859,"line_start":309,"line_end":309,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12860,"byte_end":12923,"line_start":310,"line_end":310,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12924,"byte_end":12994,"line_start":311,"line_end":311,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12995,"byte_end":12998,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":12999,"byte_end":13013,"line_start":313,"line_end":313,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13014,"byte_end":13073,"line_start":314,"line_end":314,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13074,"byte_end":13077,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13078,"byte_end":13115,"line_start":316,"line_end":316,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13116,"byte_end":13156,"line_start":317,"line_end":317,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13157,"byte_end":13160,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13161,"byte_end":13241,"line_start":319,"line_end":319,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13242,"byte_end":13264,"line_start":320,"line_end":320,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13265,"byte_end":13328,"line_start":321,"line_end":321,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13329,"byte_end":13369,"line_start":322,"line_end":322,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13370,"byte_end":13420,"line_start":323,"line_end":323,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13421,"byte_end":13456,"line_start":324,"line_end":324,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13457,"byte_end":13492,"line_start":325,"line_end":325,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13493,"byte_end":13576,"line_start":326,"line_end":326,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13577,"byte_end":13612,"line_start":327,"line_end":327,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13613,"byte_end":13638,"line_start":328,"line_end":328,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13639,"byte_end":13661,"line_start":329,"line_end":329,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13662,"byte_end":13665,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13666,"byte_end":13708,"line_start":331,"line_end":331,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13709,"byte_end":13781,"line_start":332,"line_end":332,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13782,"byte_end":13860,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13861,"byte_end":13892,"line_start":334,"line_end":334,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13893,"byte_end":13914,"line_start":335,"line_end":335,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13915,"byte_end":13932,"line_start":336,"line_end":336,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13933,"byte_end":13948,"line_start":337,"line_end":337,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13949,"byte_end":13958,"line_start":338,"line_end":338,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13959,"byte_end":13964,"line_start":339,"line_end":339,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":13965,"byte_end":13972,"line_start":340,"line_end":340,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14161,"byte_end":14173,"line_start":346,"line_end":346,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/mod.rs","byte_start":15903,"byte_end":15923,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":79},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":176}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31049,"byte_end":31085,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/ Asynchronous values.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/mod.rs","byte_start":31087,"byte_end":31111,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":886},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31576,"byte_end":31582,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31541,"byte_end":31571,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":889},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31636,"byte_end":31640,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31593,"byte_end":31631,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":892},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31802,"byte_end":31806,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31659,"byte_end":31725,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31730,"byte_end":31797,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":884},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31512,"byte_end":31521,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":892}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31448,"byte_end":31485,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31969,"byte_end":31979,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31924,"byte_end":31961,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32382,"byte_end":32392,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32098,"byte_end":32183,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32188,"byte_end":32259,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32264,"byte_end":32337,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32342,"byte_end":32370,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32770,"byte_end":32781,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32649,"byte_end":32716,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32721,"byte_end":32744,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32749,"byte_end":32758,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":33993,"byte_end":33999,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":115}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":33941,"byte_end":33981,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34129,"byte_end":34136,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34050,"byte_end":34121,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":897},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34901,"byte_end":34906,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34672,"byte_end":34713,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34714,"byte_end":34717,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34718,"byte_end":34795,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34864,"byte_end":34889,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":979},{"krate":0,"index":1076},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1163},{"krate":0,"index":1199},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37661,"byte_end":37738,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37739,"byte_end":37742,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37743,"byte_end":37814,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37815,"byte_end":37895,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37896,"byte_end":37970,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37971,"byte_end":37974,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":37975,"byte_end":38005,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38006,"byte_end":38009,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38010,"byte_end":38090,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38091,"byte_end":38168,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38169,"byte_end":38246,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38247,"byte_end":38327,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38328,"byte_end":38406,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38407,"byte_end":38472,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38473,"byte_end":38476,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38477,"byte_end":38549,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38550,"byte_end":38617,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38618,"byte_end":38697,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38698,"byte_end":38772,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38773,"byte_end":38847,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38848,"byte_end":38865,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38866,"byte_end":38869,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38870,"byte_end":38934,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":38935,"byte_end":39010,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39011,"byte_end":39086,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39087,"byte_end":39164,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39165,"byte_end":39168,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39169,"byte_end":39245,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39246,"byte_end":39321,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39322,"byte_end":39402,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39403,"byte_end":39474,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39475,"byte_end":39544,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39545,"byte_end":39548,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39549,"byte_end":39621,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39622,"byte_end":39702,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39703,"byte_end":39756,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39757,"byte_end":39760,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39761,"byte_end":39774,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39775,"byte_end":39815,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39816,"byte_end":39840,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39841,"byte_end":39844,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39845,"byte_end":39863,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39864,"byte_end":39903,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39904,"byte_end":39953,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39954,"byte_end":39987,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39988,"byte_end":39991,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":39992,"byte_end":40022,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40023,"byte_end":40066,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40067,"byte_end":40070,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40071,"byte_end":40121,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40122,"byte_end":40136,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40137,"byte_end":40142,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40143,"byte_end":40150,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40151,"byte_end":40154,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40155,"byte_end":40184,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40185,"byte_end":40225,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40226,"byte_end":40262,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40263,"byte_end":40304,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40305,"byte_end":40308,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40309,"byte_end":40344,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40345,"byte_end":40348,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40349,"byte_end":40430,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40431,"byte_end":40505,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40506,"byte_end":40584,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40585,"byte_end":40629,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40630,"byte_end":40633,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40634,"byte_end":40704,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40705,"byte_end":40783,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40784,"byte_end":40862,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40863,"byte_end":40940,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40941,"byte_end":40944,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":40945,"byte_end":41020,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41021,"byte_end":41059,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41060,"byte_end":41063,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41064,"byte_end":41077,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41078,"byte_end":41132,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41133,"byte_end":41157,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41158,"byte_end":41161,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41162,"byte_end":41180,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41181,"byte_end":41220,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41221,"byte_end":41266,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41267,"byte_end":41310,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41311,"byte_end":41350,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41351,"byte_end":41354,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41355,"byte_end":41389,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41390,"byte_end":41435,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41436,"byte_end":41439,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41440,"byte_end":41471,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41472,"byte_end":41486,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41487,"byte_end":41492,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41493,"byte_end":41500,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41501,"byte_end":41504,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41505,"byte_end":41586,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41587,"byte_end":41665,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41666,"byte_end":41728,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41729,"byte_end":41732,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41733,"byte_end":41746,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41747,"byte_end":41799,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41800,"byte_end":41824,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41825,"byte_end":41828,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41829,"byte_end":41847,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41848,"byte_end":41887,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41888,"byte_end":41935,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41936,"byte_end":41945,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41946,"byte_end":41993,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41994,"byte_end":41997,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":41998,"byte_end":42040,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42041,"byte_end":42082,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42083,"byte_end":42086,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42087,"byte_end":42147,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42148,"byte_end":42182,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42183,"byte_end":42186,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42187,"byte_end":42277,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42278,"byte_end":42281,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42282,"byte_end":42296,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42297,"byte_end":42302,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42303,"byte_end":42310,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42311,"byte_end":42314,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42315,"byte_end":42360,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42361,"byte_end":42403,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42404,"byte_end":42449,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42450,"byte_end":42489,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42490,"byte_end":42529,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42530,"byte_end":42533,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42534,"byte_end":42578,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42579,"byte_end":42582,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42583,"byte_end":42665,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42666,"byte_end":42745,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42746,"byte_end":42820,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42821,"byte_end":42894,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42895,"byte_end":42955,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42956,"byte_end":42959,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":42960,"byte_end":43001,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43002,"byte_end":43005,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43006,"byte_end":43074,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43075,"byte_end":43144,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43145,"byte_end":43211,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43212,"byte_end":43275,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43276,"byte_end":43343,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43344,"byte_end":43413,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43414,"byte_end":43484,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43485,"byte_end":43563,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43564,"byte_end":43589,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43590,"byte_end":43593,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43594,"byte_end":43670,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43671,"byte_end":43674,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43675,"byte_end":43706,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43707,"byte_end":43710,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43711,"byte_end":43791,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43792,"byte_end":43868,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43869,"byte_end":43916,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43917,"byte_end":43920,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43921,"byte_end":43994,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":43995,"byte_end":44071,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44072,"byte_end":44148,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44149,"byte_end":44152,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44153,"byte_end":44174,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44175,"byte_end":44198,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44199,"byte_end":44221,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44222,"byte_end":44225,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44226,"byte_end":44248,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44249,"byte_end":44252,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44253,"byte_end":44329,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44330,"byte_end":44377,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44378,"byte_end":44381,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44382,"byte_end":44416,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44417,"byte_end":44453,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44454,"byte_end":44494,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44495,"byte_end":44537,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.3/tokio_util/codec/index.html","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44538,"byte_end":44611,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44612,"byte_end":44695,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.3/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44696,"byte_end":44779,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44780,"byte_end":44807,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44808,"byte_end":44841,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44842,"byte_end":44869,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44870,"byte_end":44897,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44898,"byte_end":44929,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":44930,"byte_end":45000,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45001,"byte_end":45038,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/mod.rs","byte_start":45039,"byte_end":45068,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47533,"byte_end":47545,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":46856,"byte_end":46887,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":46888,"byte_end":46891,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":46892,"byte_end":46964,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":46965,"byte_end":47043,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47044,"byte_end":47130,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47131,"byte_end":47208,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47209,"byte_end":47220,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47221,"byte_end":47224,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47225,"byte_end":47293,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47294,"byte_end":47318,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47319,"byte_end":47322,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47323,"byte_end":47365,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47366,"byte_end":47416,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47417,"byte_end":47470,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47471,"byte_end":47522,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48643,"byte_end":48656,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47563,"byte_end":47648,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47653,"byte_end":47694,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47699,"byte_end":47702,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47707,"byte_end":47754,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47759,"byte_end":47762,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47767,"byte_end":47826,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47831,"byte_end":47889,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47894,"byte_end":47975,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47980,"byte_end":48006,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48011,"byte_end":48014,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48019,"byte_end":48090,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48095,"byte_end":48157,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48162,"byte_end":48233,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48238,"byte_end":48319,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48324,"byte_end":48400,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48405,"byte_end":48456,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48461,"byte_end":48464,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48469,"byte_end":48540,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48545,"byte_end":48548,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48553,"byte_end":48592,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48597,"byte_end":48635,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49559,"byte_end":49566,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48734,"byte_end":48808,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48813,"byte_end":48880,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48885,"byte_end":48888,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48893,"byte_end":48964,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":48969,"byte_end":49038,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49043,"byte_end":49117,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49122,"byte_end":49199,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49204,"byte_end":49274,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49279,"byte_end":49332,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49337,"byte_end":49340,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49345,"byte_end":49417,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49422,"byte_end":49444,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49449,"byte_end":49452,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49457,"byte_end":49496,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":49501,"byte_end":49551,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":215},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52800,"byte_end":52809,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51219,"byte_end":51249,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51250,"byte_end":51253,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51254,"byte_end":51333,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51334,"byte_end":51408,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51409,"byte_end":51488,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51489,"byte_end":51566,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51567,"byte_end":51578,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51579,"byte_end":51582,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51583,"byte_end":51660,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51661,"byte_end":51679,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51680,"byte_end":51683,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51684,"byte_end":51760,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51761,"byte_end":51837,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51838,"byte_end":51857,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51858,"byte_end":51861,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51862,"byte_end":51927,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":51928,"byte_end":52008,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52009,"byte_end":52088,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52089,"byte_end":52162,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52163,"byte_end":52236,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52237,"byte_end":52258,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52259,"byte_end":52262,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52263,"byte_end":52347,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52348,"byte_end":52372,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52373,"byte_end":52376,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52377,"byte_end":52450,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52451,"byte_end":52530,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52531,"byte_end":52534,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52535,"byte_end":52600,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52601,"byte_end":52622,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52623,"byte_end":52626,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52627,"byte_end":52666,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52667,"byte_end":52703,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52704,"byte_end":52743,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52744,"byte_end":52789,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54453,"byte_end":54481,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"pub unsafe fn prepare_uninitialized_buffer(&Self, &mut [MaybeUninit<u8>])\n-> bool","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52816,"byte_end":52890,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52895,"byte_end":52944,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52949,"byte_end":52952,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":52957,"byte_end":53030,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53035,"byte_end":53106,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53111,"byte_end":53185,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53190,"byte_end":53266,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53271,"byte_end":53309,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53314,"byte_end":53317,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53322,"byte_end":53398,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53403,"byte_end":53477,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53482,"byte_end":53559,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53564,"byte_end":53596,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53601,"byte_end":53604,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53609,"byte_end":53682,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53687,"byte_end":53755,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53760,"byte_end":53816,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53821,"byte_end":53856,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53861,"byte_end":53864,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53869,"byte_end":53945,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":53950,"byte_end":54025,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54030,"byte_end":54107,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54112,"byte_end":54130,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54135,"byte_end":54138,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54143,"byte_end":54194,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54199,"byte_end":54202,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54207,"byte_end":54219,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54224,"byte_end":54227,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54232,"byte_end":54304,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54309,"byte_end":54340,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54345,"byte_end":54348,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54353,"byte_end":54384,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: method@Self::poll_read_buf","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54389,"byte_end":54438,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54994,"byte_end":55003,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54624,"byte_end":54677,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54682,"byte_end":54685,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54690,"byte_end":54748,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54753,"byte_end":54756,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54761,"byte_end":54820,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54825,"byte_end":54883,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54888,"byte_end":54955,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":54960,"byte_end":54986,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55464,"byte_end":55477,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"pub fn poll_read_buf<B: BufMut>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where Self: Sized","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55128,"byte_end":55204,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55209,"byte_end":55238,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55243,"byte_end":55246,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55251,"byte_end":55326,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55331,"byte_end":55407,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":55412,"byte_end":55456,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":246},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58632,"byte_end":58641,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58150,"byte_end":58180,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58181,"byte_end":58184,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58185,"byte_end":58259,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58260,"byte_end":58330,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58331,"byte_end":58400,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58401,"byte_end":58404,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58405,"byte_end":58470,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58471,"byte_end":58492,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58493,"byte_end":58496,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58497,"byte_end":58533,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58534,"byte_end":58575,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58576,"byte_end":58621,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58979,"byte_end":58989,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, &mut Context, SeekFrom)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58648,"byte_end":58705,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58710,"byte_end":58713,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58718,"byte_end":58791,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58796,"byte_end":58822,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58827,"byte_end":58830,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58835,"byte_end":58910,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":58915,"byte_end":58971,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59572,"byte_end":59585,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59115,"byte_end":59158,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59163,"byte_end":59166,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59171,"byte_end":59220,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59225,"byte_end":59295,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59300,"byte_end":59361,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59366,"byte_end":59369,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59374,"byte_end":59386,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59391,"byte_end":59394,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59399,"byte_end":59455,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59460,"byte_end":59463,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59468,"byte_end":59480,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59485,"byte_end":59488,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":59493,"byte_end":59564,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63088,"byte_end":63098,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61225,"byte_end":61257,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61258,"byte_end":61261,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61262,"byte_end":61344,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61345,"byte_end":61420,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61421,"byte_end":61488,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61489,"byte_end":61492,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61493,"byte_end":61573,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61574,"byte_end":61592,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61593,"byte_end":61596,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61597,"byte_end":61668,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61669,"byte_end":61683,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61684,"byte_end":61687,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61688,"byte_end":61756,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61757,"byte_end":61837,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61838,"byte_end":61917,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61918,"byte_end":61991,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":61992,"byte_end":62065,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62066,"byte_end":62087,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62088,"byte_end":62091,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62092,"byte_end":62176,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62177,"byte_end":62201,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62202,"byte_end":62205,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62206,"byte_end":62288,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62289,"byte_end":62372,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62373,"byte_end":62376,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62377,"byte_end":62461,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62462,"byte_end":62546,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62547,"byte_end":62625,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62626,"byte_end":62705,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62706,"byte_end":62767,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62768,"byte_end":62771,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62772,"byte_end":62838,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62839,"byte_end":62861,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62862,"byte_end":62865,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62866,"byte_end":62904,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62905,"byte_end":62949,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62950,"byte_end":62989,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":62990,"byte_end":63029,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63030,"byte_end":63077,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63482,"byte_end":63492,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63105,"byte_end":63159,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63164,"byte_end":63167,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63172,"byte_end":63233,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63238,"byte_end":63241,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63246,"byte_end":63308,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63313,"byte_end":63371,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63376,"byte_end":63443,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63448,"byte_end":63474,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64033,"byte_end":64043,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63620,"byte_end":63691,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63696,"byte_end":63718,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63723,"byte_end":63726,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63731,"byte_end":63777,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63782,"byte_end":63785,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63790,"byte_end":63854,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63859,"byte_end":63917,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63922,"byte_end":63990,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":63995,"byte_end":64025,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67329,"byte_end":67342,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64125,"byte_end":64199,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64204,"byte_end":64252,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64257,"byte_end":64260,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64265,"byte_end":64336,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64341,"byte_end":64417,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64422,"byte_end":64498,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64503,"byte_end":64578,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64583,"byte_end":64654,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64659,"byte_end":64735,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64740,"byte_end":64768,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64773,"byte_end":64776,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64781,"byte_end":64842,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64847,"byte_end":64918,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":64923,"byte_end":64995,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65000,"byte_end":65075,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65080,"byte_end":65153,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65158,"byte_end":65233,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65238,"byte_end":65310,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65315,"byte_end":65326,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65331,"byte_end":65334,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65339,"byte_end":65413,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65418,"byte_end":65490,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65495,"byte_end":65564,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65569,"byte_end":65637,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65642,"byte_end":65703,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65708,"byte_end":65711,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65716,"byte_end":65734,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65739,"byte_end":65742,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65747,"byte_end":65817,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65822,"byte_end":65825,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65830,"byte_end":65893,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65898,"byte_end":65967,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":65972,"byte_end":66047,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66052,"byte_end":66125,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66130,"byte_end":66181,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66186,"byte_end":66189,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66194,"byte_end":66264,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66269,"byte_end":66344,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66349,"byte_end":66421,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66426,"byte_end":66496,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66501,"byte_end":66576,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66581,"byte_end":66584,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66589,"byte_end":66670,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66675,"byte_end":66750,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66755,"byte_end":66822,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66827,"byte_end":66830,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66835,"byte_end":66847,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66852,"byte_end":66855,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66860,"byte_end":66931,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":66936,"byte_end":67002,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67007,"byte_end":67081,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67086,"byte_end":67150,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67155,"byte_end":67194,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67199,"byte_end":67202,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67207,"byte_end":67219,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67224,"byte_end":67227,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67232,"byte_end":67307,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67312,"byte_end":67321,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67630,"byte_end":67644,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"pub fn poll_write_buf<B: Buf>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<Result<usize, io::Error>> where Self: Sized","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67424,"byte_end":67498,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67503,"byte_end":67506,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67511,"byte_end":67585,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":67590,"byte_end":67622,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1190},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8730020,"byte_end":8730031,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19308,"byte_end":19337,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732277,"byte_end":8732280,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"pub fn new(E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8731855,"byte_end":8731923,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8731928,"byte_end":8731931,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8731936,"byte_end":8731948,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8731953,"byte_end":8731956,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8731961,"byte_end":8732021,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732026,"byte_end":8732029,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732034,"byte_end":8732104,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732109,"byte_end":8732182,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732187,"byte_end":8732265,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733484,"byte_end":8733498,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"pub fn new_with_ready(E, mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732380,"byte_end":8732474,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732479,"byte_end":8732573,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732578,"byte_end":8732673,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732678,"byte_end":8732772,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732777,"byte_end":8732805,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732810,"byte_end":8732813,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732818,"byte_end":8732855,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732860,"byte_end":8732863,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732868,"byte_end":8732879,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732884,"byte_end":8732901,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732906,"byte_end":8732937,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732942,"byte_end":8732987,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8732992,"byte_end":8733046,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733051,"byte_end":8733103,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733108,"byte_end":8733118,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733123,"byte_end":8733130,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733135,"byte_end":8733138,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733143,"byte_end":8733155,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733160,"byte_end":8733163,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733168,"byte_end":8733228,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733233,"byte_end":8733236,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733241,"byte_end":8733311,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733316,"byte_end":8733389,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733394,"byte_end":8733472,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733976,"byte_end":8733983,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733862,"byte_end":8733936,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8733941,"byte_end":8733964,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734159,"byte_end":8734166,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734044,"byte_end":8734119,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734124,"byte_end":8734147,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734702,"byte_end":8734712,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734235,"byte_end":8734284,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734289,"byte_end":8734292,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734297,"byte_end":8734371,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734376,"byte_end":8734451,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734456,"byte_end":8734459,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734464,"byte_end":8734539,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734544,"byte_end":8734620,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734625,"byte_end":8734690,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735869,"byte_end":8735884,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context, mio::Ready)\n-> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734860,"byte_end":8734911,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734916,"byte_end":8734919,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8734924,"byte_end":8734997,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735002,"byte_end":8735073,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735078,"byte_end":8735153,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735158,"byte_end":8735165,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735170,"byte_end":8735173,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735178,"byte_end":8735254,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735259,"byte_end":8735325,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735330,"byte_end":8735333,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735338,"byte_end":8735411,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735416,"byte_end":8735460,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735465,"byte_end":8735468,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: method@Self::clear_read_ready","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735473,"byte_end":8735528,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735533,"byte_end":8735536,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735541,"byte_end":8735553,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735558,"byte_end":8735561,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735566,"byte_end":8735594,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735599,"byte_end":8735602,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735607,"byte_end":8735639,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735644,"byte_end":8735688,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735693,"byte_end":8735696,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735701,"byte_end":8735714,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735719,"byte_end":8735722,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735727,"byte_end":8735800,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8735805,"byte_end":8735857,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736860,"byte_end":8736876,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"pub fn clear_read_ready(&Self, &mut Context, mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736261,"byte_end":8736337,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736342,"byte_end":8736406,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736411,"byte_end":8736414,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736419,"byte_end":8736481,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736486,"byte_end":8736557,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736562,"byte_end":8736565,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736570,"byte_end":8736645,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736650,"byte_end":8736682,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736687,"byte_end":8736690,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736695,"byte_end":8736707,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736712,"byte_end":8736715,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736720,"byte_end":8736748,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736753,"byte_end":8736756,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736761,"byte_end":8736799,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8736804,"byte_end":8736848,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738316,"byte_end":8738332,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737401,"byte_end":8737453,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737458,"byte_end":8737461,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737466,"byte_end":8737535,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737540,"byte_end":8737583,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737588,"byte_end":8737591,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737596,"byte_end":8737664,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737669,"byte_end":8737744,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737749,"byte_end":8737752,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737757,"byte_end":8737831,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737836,"byte_end":8737881,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737886,"byte_end":8737889,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: method@Self::clear_write_ready","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737894,"byte_end":8737951,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737956,"byte_end":8737959,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737964,"byte_end":8737976,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737981,"byte_end":8737984,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8737989,"byte_end":8738017,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738022,"byte_end":8738025,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738030,"byte_end":8738087,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738092,"byte_end":8738136,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738141,"byte_end":8738144,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738149,"byte_end":8738162,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738167,"byte_end":8738170,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738175,"byte_end":8738248,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738253,"byte_end":8738304,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8739181,"byte_end":8739198,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"pub fn clear_write_ready(&Self, &mut Context) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738608,"byte_end":8738685,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738690,"byte_end":8738755,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738760,"byte_end":8738763,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738768,"byte_end":8738844,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738849,"byte_end":8738894,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738899,"byte_end":8738902,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738907,"byte_end":8738982,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8738987,"byte_end":8739061,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8739066,"byte_end":8739069,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8739074,"byte_end":8739086,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8739091,"byte_end":8739094,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8739099,"byte_end":8739169,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1194},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743440,"byte_end":8743452,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19308,"byte_end":19337,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744144,"byte_end":8744147,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"pub fn new<T>(&T) -> io::Result<Registration> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743572,"byte_end":8743628,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743633,"byte_end":8743636,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743641,"byte_end":8743653,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743658,"byte_end":8743661,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743666,"byte_end":8743718,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743723,"byte_end":8743782,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743787,"byte_end":8743790,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743795,"byte_end":8743798,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743803,"byte_end":8743815,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743820,"byte_end":8743823,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743828,"byte_end":8743888,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743893,"byte_end":8743896,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743901,"byte_end":8743971,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743976,"byte_end":8744049,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744054,"byte_end":8744132,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745550,"byte_end":8745564,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"pub fn new_with_ready<T>(&T, mio::Ready) -> io::Result<Registration> where\nT: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744294,"byte_end":8744385,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744390,"byte_end":8744484,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744489,"byte_end":8744583,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744588,"byte_end":8744683,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744688,"byte_end":8744709,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744714,"byte_end":8744717,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744722,"byte_end":8744759,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744764,"byte_end":8744767,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744772,"byte_end":8744783,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744788,"byte_end":8744805,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744810,"byte_end":8744841,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744846,"byte_end":8744891,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744896,"byte_end":8744950,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8744955,"byte_end":8745007,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745012,"byte_end":8745022,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745027,"byte_end":8745034,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745039,"byte_end":8745042,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745047,"byte_end":8745059,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745064,"byte_end":8745067,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745072,"byte_end":8745124,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745129,"byte_end":8745188,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745193,"byte_end":8745196,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745201,"byte_end":8745204,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745209,"byte_end":8745221,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745226,"byte_end":8745229,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745234,"byte_end":8745294,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745299,"byte_end":8745302,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745307,"byte_end":8745377,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745382,"byte_end":8745455,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8745460,"byte_end":8745538,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746799,"byte_end":8746809,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"pub fn deregister<T>(&mut Self, &T) -> io::Result<()> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746023,"byte_end":8746095,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746100,"byte_end":8746103,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746108,"byte_end":8746184,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746189,"byte_end":8746217,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746222,"byte_end":8746225,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746230,"byte_end":8746305,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746310,"byte_end":8746386,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746391,"byte_end":8746456,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746461,"byte_end":8746464,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746469,"byte_end":8746481,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746486,"byte_end":8746489,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746494,"byte_end":8746566,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746571,"byte_end":8746647,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746652,"byte_end":8746725,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746730,"byte_end":8746733,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8746738,"byte_end":8746787,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8748360,"byte_end":8748375,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747112,"byte_end":8747177,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747182,"byte_end":8747185,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747190,"byte_end":8747264,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747269,"byte_end":8747342,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747347,"byte_end":8747397,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747402,"byte_end":8747405,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747410,"byte_end":8747483,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747488,"byte_end":8747563,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747568,"byte_end":8747604,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747609,"byte_end":8747612,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747617,"byte_end":8747635,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747640,"byte_end":8747643,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747648,"byte_end":8747693,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747698,"byte_end":8747701,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747706,"byte_end":8747781,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747786,"byte_end":8747847,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747852,"byte_end":8747855,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747860,"byte_end":8747935,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747940,"byte_end":8747987,"line_start":164,"line_end":164,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8747992,"byte_end":8747995,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8748000,"byte_end":8748076,"line_start":166,"line_end":166,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8748081,"byte_end":8748154,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8748159,"byte_end":8748162,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8748167,"byte_end":8748240,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8748245,"byte_end":8748248,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8748253,"byte_end":8748265,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8748270,"byte_end":8748273,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8748278,"byte_end":8748348,"line_start":173,"line_end":173,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749216,"byte_end":8749231,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"pub fn take_read_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8748855,"byte_end":8748900,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8748905,"byte_end":8748908,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8748913,"byte_end":8748985,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8748990,"byte_end":8749065,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749070,"byte_end":8749138,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749143,"byte_end":8749146,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749151,"byte_end":8749204,"line_start":197,"line_end":197,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8750585,"byte_end":8750601,"line_start":230,"line_end":230,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749333,"byte_end":8749399,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749404,"byte_end":8749407,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749412,"byte_end":8749487,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749492,"byte_end":8749566,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749571,"byte_end":8749621,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749626,"byte_end":8749629,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749634,"byte_end":8749707,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749712,"byte_end":8749787,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749792,"byte_end":8749828,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749833,"byte_end":8749836,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749841,"byte_end":8749859,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749864,"byte_end":8749867,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749872,"byte_end":8749917,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749922,"byte_end":8749925,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8749930,"byte_end":8750005,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8750010,"byte_end":8750071,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8750076,"byte_end":8750079,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8750084,"byte_end":8750159,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8750164,"byte_end":8750212,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8750217,"byte_end":8750220,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8750225,"byte_end":8750301,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This could represent a permanent internal error for example.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8750306,"byte_end":8750379,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8750384,"byte_end":8750387,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [edge-triggered]: struct@mio::Poll#edge-triggered-and-level-triggered","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8750392,"byte_end":8750465,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8750470,"byte_end":8750473,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8750478,"byte_end":8750490,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8750495,"byte_end":8750498,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8750503,"byte_end":8750573,"line_start":229,"line_end":229,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8751448,"byte_end":8751464,"line_start":254,"line_end":254,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"pub fn take_write_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8751082,"byte_end":8751129,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8751134,"byte_end":8751137,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8751142,"byte_end":8751215,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8751220,"byte_end":8751295,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8751300,"byte_end":8751368,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8751373,"byte_end":8751376,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8751381,"byte_end":8751436,"line_start":253,"line_end":253,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1311},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8755327,"byte_end":8755335,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1313}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1314},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8755464,"byte_end":8755473,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1316}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1317},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8755787,"byte_end":8755792,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8756418,"byte_end":8756428,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8756315,"byte_end":8756390,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8756395,"byte_end":8756406,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8756835,"byte_end":8756842,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8756511,"byte_end":8756560,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8756565,"byte_end":8756568,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8756573,"byte_end":8756585,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8756590,"byte_end":8756593,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8756598,"byte_end":8756672,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8756677,"byte_end":8756727,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8756732,"byte_end":8756796,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8756801,"byte_end":8756823,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8757343,"byte_end":8757353,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8757241,"byte_end":8757315,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8757320,"byte_end":8757331,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1319},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":8760590,"byte_end":8760594,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1322},{"krate":0,"index":1323}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":8760427,"byte_end":8760493,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":8760511,"byte_end":8760578,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":2053},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":8763898,"byte_end":8763913,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2054},{"krate":0,"index":2056},{"krate":0,"index":2058},{"krate":0,"index":2059}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":8766613,"byte_end":8766623,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2053},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":8769514,"byte_end":8769523,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2053},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":8770923,"byte_end":8770928,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2053},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":8772778,"byte_end":8772783,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2053},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2061},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8774962,"byte_end":8774974,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2062},{"krate":0,"index":2064},{"krate":0,"index":2066},{"krate":0,"index":2069},{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2082},{"krate":0,"index":2084},{"krate":0,"index":2086},{"krate":0,"index":2088},{"krate":0,"index":2090},{"krate":0,"index":2092},{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2102},{"krate":0,"index":2104},{"krate":0,"index":2106},{"krate":0,"index":2108},{"krate":0,"index":2110},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2075}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8776094,"byte_end":8776099,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8778928,"byte_end":8778932,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8781234,"byte_end":8781242,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8783139,"byte_end":8783149,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8784586,"byte_end":8784593,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8785882,"byte_end":8785889,"line_start":362,"line_end":362,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8787220,"byte_end":8787228,"line_start":400,"line_end":400,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8788568,"byte_end":8788576,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8789857,"byte_end":8789865,"line_start":475,"line_end":475,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8791160,"byte_end":8791168,"line_start":513,"line_end":513,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8792531,"byte_end":8792539,"line_start":552,"line_end":552,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8793832,"byte_end":8793840,"line_start":589,"line_end":589,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8795300,"byte_end":8795309,"line_start":629,"line_end":629,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8796703,"byte_end":8796712,"line_start":669,"line_end":669,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8798059,"byte_end":8798070,"line_start":707,"line_end":707,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8799431,"byte_end":8799442,"line_start":745,"line_end":745,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8800743,"byte_end":8800754,"line_start":782,"line_end":782,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8802066,"byte_end":8802077,"line_start":820,"line_end":820,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8803458,"byte_end":8803469,"line_start":859,"line_end":859,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8804763,"byte_end":8804774,"line_start":896,"line_end":896,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8806252,"byte_end":8806264,"line_start":936,"line_end":936,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8807658,"byte_end":8807670,"line_start":976,"line_end":976,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8809329,"byte_end":8809340,"line_start":1024,"line_end":1024,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8810895,"byte_end":8810909,"line_start":1071,"line_end":1071,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8812201,"byte_end":8812205,"line_start":1109,"line_end":1109,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2061},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1398},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813247,"byte_end":8813259,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":1399}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812472,"byte_end":8812545,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812546,"byte_end":8812549,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812550,"byte_end":8812621,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812622,"byte_end":8812625,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812626,"byte_end":8812640,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812641,"byte_end":8812644,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812645,"byte_end":8812652,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812653,"byte_end":8812689,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812690,"byte_end":8812716,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812717,"byte_end":8812720,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812721,"byte_end":8812739,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812740,"byte_end":8812779,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812780,"byte_end":8812829,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812830,"byte_end":8812833,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812834,"byte_end":8812887,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812888,"byte_end":8812935,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812936,"byte_end":8812939,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812940,"byte_end":8812969,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8812970,"byte_end":8813015,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813016,"byte_end":8813041,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813042,"byte_end":8813074,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813075,"byte_end":8813078,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813079,"byte_end":8813093,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813094,"byte_end":8813099,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813100,"byte_end":8813107,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813108,"byte_end":8813111,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813112,"byte_end":8813171,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813172,"byte_end":8813175,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813176,"byte_end":8813204,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813205,"byte_end":8813236,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813976,"byte_end":8813980,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813277,"byte_end":8813346,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813351,"byte_end":8813404,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813409,"byte_end":8813412,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813417,"byte_end":8813494,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813499,"byte_end":8813521,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813526,"byte_end":8813529,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813534,"byte_end":8813548,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813553,"byte_end":8813556,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813561,"byte_end":8813574,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813579,"byte_end":8813603,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813608,"byte_end":8813634,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813639,"byte_end":8813642,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813647,"byte_end":8813673,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813678,"byte_end":8813681,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813686,"byte_end":8813731,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813736,"byte_end":8813784,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813789,"byte_end":8813830,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813835,"byte_end":8813838,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813843,"byte_end":8813880,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813885,"byte_end":8813927,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813932,"byte_end":8813944,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813949,"byte_end":8813956,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813961,"byte_end":8813968,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2113},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8816183,"byte_end":8816196,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2116},{"krate":0,"index":2119},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2133},{"krate":0,"index":2135},{"krate":0,"index":2137},{"krate":0,"index":2139},{"krate":0,"index":2141},{"krate":0,"index":2143},{"krate":0,"index":2145},{"krate":0,"index":2147},{"krate":0,"index":2149},{"krate":0,"index":2151},{"krate":0,"index":2153},{"krate":0,"index":2155},{"krate":0,"index":2157},{"krate":0,"index":2121},{"krate":0,"index":2122}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8818038,"byte_end":8818043,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8820845,"byte_end":8820854,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8822196,"byte_end":8822205,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8823605,"byte_end":8823613,"line_start":271,"line_end":271,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8824874,"byte_end":8824882,"line_start":308,"line_end":308,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8826197,"byte_end":8826206,"line_start":346,"line_end":346,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8827519,"byte_end":8827528,"line_start":384,"line_end":384,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8828868,"byte_end":8828877,"line_start":422,"line_end":422,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8830212,"byte_end":8830221,"line_start":460,"line_end":460,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8831598,"byte_end":8831607,"line_start":498,"line_end":498,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8832994,"byte_end":8833003,"line_start":536,"line_end":536,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2139},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8834458,"byte_end":8834468,"line_start":576,"line_end":576,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8835858,"byte_end":8835868,"line_start":616,"line_end":616,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8837200,"byte_end":8837212,"line_start":655,"line_end":655,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2145},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8838539,"byte_end":8838551,"line_start":693,"line_end":693,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8839905,"byte_end":8839917,"line_start":731,"line_end":731,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8841266,"byte_end":8841278,"line_start":769,"line_end":769,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8842669,"byte_end":8842681,"line_start":807,"line_end":807,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8844082,"byte_end":8844094,"line_start":845,"line_end":845,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2155},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8845561,"byte_end":8845574,"line_start":885,"line_end":885,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8846976,"byte_end":8846989,"line_start":925,"line_end":925,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8848009,"byte_end":8848014,"line_start":958,"line_end":958,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8849304,"byte_end":8849312,"line_start":997,"line_end":997,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10077},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8850721,"byte_end":8850730,"line_start":29,"line_end":29,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":10079},{"krate":0,"index":10080},{"krate":0,"index":10081},{"krate":0,"index":10082}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8851066,"byte_end":8851069,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8850924,"byte_end":8851016,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8851021,"byte_end":8851054,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8851231,"byte_end":8851244,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8851154,"byte_end":8851219,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8851920,"byte_end":8851927,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8851783,"byte_end":8851829,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8851834,"byte_end":8851837,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8851842,"byte_end":8851908,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852119,"byte_end":8852126,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8851974,"byte_end":8852028,"line_start":72,"line_end":72,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852033,"byte_end":8852036,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852041,"byte_end":8852107,"line_start":74,"line_end":74,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852337,"byte_end":8852348,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852185,"byte_end":8852246,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852251,"byte_end":8852254,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852259,"byte_end":8852325,"line_start":81,"line_end":81,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852579,"byte_end":8852589,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852428,"byte_end":8852491,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852496,"byte_end":8852499,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852504,"byte_end":8852567,"line_start":88,"line_end":88,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852793,"byte_end":8852799,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852633,"byte_end":8852689,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852694,"byte_end":8852697,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8852702,"byte_end":8852781,"line_start":95,"line_end":95,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10050},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8857045,"byte_end":8857054,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":10052}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8857333,"byte_end":8857336,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8857179,"byte_end":8857236,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8857241,"byte_end":8857244,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8857249,"byte_end":8857321,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8857668,"byte_end":8857681,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8857468,"byte_end":8857553,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8857558,"byte_end":8857571,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8857576,"byte_end":8857579,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8857584,"byte_end":8857656,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858138,"byte_end":8858145,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8857993,"byte_end":8858043,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858048,"byte_end":8858051,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858056,"byte_end":8858126,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858365,"byte_end":8858372,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858212,"byte_end":8858270,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858275,"byte_end":8858278,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858283,"byte_end":8858353,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858607,"byte_end":8858618,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858447,"byte_end":8858512,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858517,"byte_end":8858520,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858525,"byte_end":8858595,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858882,"byte_end":8858892,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858727,"byte_end":8858794,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858799,"byte_end":8858802,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8858807,"byte_end":8858870,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10000},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8862711,"byte_end":8862720,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":10002},{"krate":0,"index":10003},{"krate":0,"index":10004}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8863028,"byte_end":8863031,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8862886,"byte_end":8862978,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8862983,"byte_end":8863016,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8863193,"byte_end":8863206,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8863116,"byte_end":8863181,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864288,"byte_end":8864295,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864230,"byte_end":8864276,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864486,"byte_end":8864493,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864342,"byte_end":8864396,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864401,"byte_end":8864404,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864409,"byte_end":8864474,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864703,"byte_end":8864714,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864552,"byte_end":8864613,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864618,"byte_end":8864621,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864626,"byte_end":8864691,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1559},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864945,"byte_end":8864955,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864794,"byte_end":8864857,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864862,"byte_end":8864865,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864870,"byte_end":8864933,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8865067,"byte_end":8865073,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8864999,"byte_end":8865055,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":9951},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8867706,"byte_end":8867711,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9954},{"krate":0,"index":9955},{"krate":0,"index":9956}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868152,"byte_end":8868159,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868078,"byte_end":8868140,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868491,"byte_end":8868498,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868228,"byte_end":8868298,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868303,"byte_end":8868306,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868311,"byte_end":8868384,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868389,"byte_end":8868462,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868467,"byte_end":8868479,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868857,"byte_end":8868868,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868587,"byte_end":8868664,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868669,"byte_end":8868672,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868677,"byte_end":8868750,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868755,"byte_end":8868828,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868833,"byte_end":8868845,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8869065,"byte_end":8869075,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868997,"byte_end":8869053,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2163},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":8871651,"byte_end":8871655,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":8871568,"byte_end":8871635,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2159},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":8872920,"byte_end":8872924,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"pub fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W) -> Copy where\nR: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2179},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":8875681,"byte_end":8875686,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2180}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2181},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":8876365,"byte_end":8876370,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2182},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/flush.rs","byte_start":8877587,"byte_end":8877592,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2185}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9912},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8878708,"byte_end":8878713,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":9914},{"krate":0,"index":9915},{"krate":0,"index":9916},{"krate":0,"index":9917}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879560,"byte_end":8879569,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879070,"byte_end":8879110,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879115,"byte_end":8879118,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879123,"byte_end":8879137,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879142,"byte_end":8879145,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879150,"byte_end":8879157,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879162,"byte_end":8879196,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879201,"byte_end":8879236,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879241,"byte_end":8879244,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879249,"byte_end":8879332,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879337,"byte_end":8879377,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879382,"byte_end":8879385,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879390,"byte_end":8879443,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879448,"byte_end":8879491,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879496,"byte_end":8879501,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879506,"byte_end":8879518,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879523,"byte_end":8879530,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879535,"byte_end":8879542,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879796,"byte_end":8879803,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879729,"byte_end":8879784,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879922,"byte_end":8879929,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879863,"byte_end":8879910,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8880216,"byte_end":8880226,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879981,"byte_end":8880042,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8880047,"byte_end":8880050,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8880055,"byte_end":8880118,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8880123,"byte_end":8880204,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8880345,"byte_end":8880359,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2190},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882488,"byte_end":8882500,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":2191},{"krate":0,"index":2192}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8881700,"byte_end":8881759,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8881760,"byte_end":8881763,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8881764,"byte_end":8881843,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8881844,"byte_end":8881920,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8881921,"byte_end":8881983,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8881984,"byte_end":8881987,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8881988,"byte_end":8882001,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882002,"byte_end":8882005,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882006,"byte_end":8882013,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882014,"byte_end":8882058,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882059,"byte_end":8882110,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882111,"byte_end":8882168,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882169,"byte_end":8882172,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882173,"byte_end":8882210,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882211,"byte_end":8882214,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882215,"byte_end":8882242,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882243,"byte_end":8882282,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882283,"byte_end":8882313,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882314,"byte_end":8882317,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882318,"byte_end":8882355,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882356,"byte_end":8882359,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882360,"byte_end":8882399,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882400,"byte_end":8882430,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882431,"byte_end":8882443,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882444,"byte_end":8882451,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8882452,"byte_end":8882459,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1711},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8883797,"byte_end":8883803,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8883563,"byte_end":8883646,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8883647,"byte_end":8883650,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8883651,"byte_end":8883725,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8883726,"byte_end":8883789,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2203},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read.rs","byte_start":8888732,"byte_end":8888736,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2207}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read.rs","byte_start":8888649,"byte_end":8888716,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2212},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_buf.rs","byte_start":8889799,"byte_end":8889806,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2216},{"krate":0,"index":2217}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_buf.rs","byte_start":8889716,"byte_end":8889783,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2223},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_exact.rs","byte_start":8891055,"byte_end":8891064,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_exact.rs","byte_start":8890972,"byte_end":8891039,"line_start":31,"line_end":31,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":9870},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895388,"byte_end":8895394,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":9872}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9837},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895410,"byte_end":8895416,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":9839}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9792},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895432,"byte_end":8895439,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":9794},{"krate":0,"index":9795},{"krate":0,"index":9797}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9747},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895464,"byte_end":8895471,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":9749},{"krate":0,"index":9750},{"krate":0,"index":9752}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9702},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895496,"byte_end":8895503,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":9704},{"krate":0,"index":9705},{"krate":0,"index":9707}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9657},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895528,"byte_end":8895536,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":9659},{"krate":0,"index":9660},{"krate":0,"index":9662}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9612},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895564,"byte_end":8895571,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":9614},{"krate":0,"index":9615},{"krate":0,"index":9617}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9567},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895596,"byte_end":8895603,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":9569},{"krate":0,"index":9570},{"krate":0,"index":9572}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9522},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895628,"byte_end":8895635,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":9524},{"krate":0,"index":9525},{"krate":0,"index":9527}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9477},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895660,"byte_end":8895668,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":9479},{"krate":0,"index":9480},{"krate":0,"index":9482}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9432},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895696,"byte_end":8895705,"line_start":125,"line_end":125,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":9434},{"krate":0,"index":9435},{"krate":0,"index":9437}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9387},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895733,"byte_end":8895742,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":9389},{"krate":0,"index":9390},{"krate":0,"index":9392}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9342},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895770,"byte_end":8895779,"line_start":127,"line_end":127,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":9344},{"krate":0,"index":9345},{"krate":0,"index":9347}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9297},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895807,"byte_end":8895817,"line_start":128,"line_end":128,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":9299},{"krate":0,"index":9300},{"krate":0,"index":9302}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9252},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895848,"byte_end":8895857,"line_start":130,"line_end":130,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":9254},{"krate":0,"index":9255},{"krate":0,"index":9257}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9207},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895885,"byte_end":8895894,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":9209},{"krate":0,"index":9210},{"krate":0,"index":9212}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9162},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895922,"byte_end":8895931,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":9164},{"krate":0,"index":9165},{"krate":0,"index":9167}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9117},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_int.rs","byte_start":8895959,"byte_end":8895969,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":9119},{"krate":0,"index":9120},{"krate":0,"index":9122}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2377},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_line.rs","byte_start":8896419,"byte_end":8896427,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_line.rs","byte_start":8896336,"byte_end":8896403,"line_start":14,"line_end":14,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2388},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_end.rs","byte_start":8900382,"byte_end":8900391,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_end.rs","byte_start":8900252,"byte_end":8900319,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2398},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_string.rs","byte_start":8906526,"byte_end":8906538,"line_start":14,"line_end":14,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_string.rs","byte_start":8906443,"byte_end":8906510,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2409},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","byte_start":8909303,"byte_end":8909312,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","byte_start":8909220,"byte_end":8909287,"line_start":13,"line_end":13,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2421},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/repeat.rs","byte_start":8911758,"byte_end":8911764,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2422}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2420},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/repeat.rs","byte_start":8912450,"byte_end":8912456,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2425},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/shutdown.rs","byte_start":8913405,"byte_end":8913413,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":2428}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2433},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":8914585,"byte_end":8914589,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2434}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2435},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":8915430,"byte_end":8915434,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9078},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8916679,"byte_end":8916684,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":9080},{"krate":0,"index":9081},{"krate":0,"index":9082},{"krate":0,"index":9083}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917545,"byte_end":8917557,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917033,"byte_end":8917076,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917081,"byte_end":8917084,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917089,"byte_end":8917103,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917108,"byte_end":8917111,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917116,"byte_end":8917123,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917128,"byte_end":8917162,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917167,"byte_end":8917202,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917207,"byte_end":8917210,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917215,"byte_end":8917298,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917303,"byte_end":8917350,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917355,"byte_end":8917358,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917363,"byte_end":8917425,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917430,"byte_end":8917476,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917481,"byte_end":8917486,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917491,"byte_end":8917503,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917508,"byte_end":8917515,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917520,"byte_end":8917527,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917795,"byte_end":8917812,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9031},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8930606,"byte_end":8930618,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":9034},{"krate":0,"index":9035}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2451},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931894,"byte_end":8931907,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"pub fn stream_reader<S, B>(S) -> StreamReader<S, B> where S: Stream<Item =\nResult<B, io::Error>>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8930695,"byte_end":8930775,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8930776,"byte_end":8930779,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8930780,"byte_end":8930793,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8930794,"byte_end":8930797,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8930798,"byte_end":8930805,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8930806,"byte_end":8930827,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8930828,"byte_end":8930877,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8930878,"byte_end":8930898,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8930899,"byte_end":8930945,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8930946,"byte_end":8930949,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8930950,"byte_end":8930990,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8930991,"byte_end":8931033,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931034,"byte_end":8931080,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931081,"byte_end":8931127,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931128,"byte_end":8931176,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931177,"byte_end":8931184,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931185,"byte_end":8931188,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931189,"byte_end":8931223,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931224,"byte_end":8931265,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931266,"byte_end":8931269,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931270,"byte_end":8931309,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931310,"byte_end":8931335,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931336,"byte_end":8931373,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931374,"byte_end":8931411,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931412,"byte_end":8931415,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931416,"byte_end":8931458,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931459,"byte_end":8931505,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931506,"byte_end":8931543,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931544,"byte_end":8931547,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931548,"byte_end":8931575,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931576,"byte_end":8931622,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931623,"byte_end":8931665,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931666,"byte_end":8931669,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931670,"byte_end":8931705,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931706,"byte_end":8931752,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931753,"byte_end":8931756,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931757,"byte_end":8931769,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931770,"byte_end":8931777,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8931778,"byte_end":8931785,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8989},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8936296,"byte_end":8936308,"line_start":25,"line_end":25,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::util::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":8991},{"krate":0,"index":8992}],"decl_id":null,"docs":" Convert an [`AsyncRead`] implementor into a\n [`Stream`] of Result<[`Bytes`], std::io::Error>.\n After first error it will stop.\n Additionally, this stream is fused: after it returns None at some\n moment, it is guaranteed that further `next()`, `poll_next()` and\n similar functions will instantly return None.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2485},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937453,"byte_end":8937466,"line_start":63,"line_end":63,"column_start":8,"column_end":21},"name":"reader_stream","qualname":"::io::util::reader_stream::reader_stream","value":"pub fn reader_stream<R>(R) -> ReaderStream<R> where R: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] implementor into a\n [`Stream`] of Result<[`Bytes`], std::io::Error>.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] implementor into a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8936781,"byte_end":8936828,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`Stream`] of Result<[`Bytes`], std::io::Error>.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8936829,"byte_end":8936881,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8936882,"byte_end":8936885,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8936886,"byte_end":8936899,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8936900,"byte_end":8936903,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8936904,"byte_end":8936911,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8936912,"byte_end":8936932,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8936933,"byte_end":8936979,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8936980,"byte_end":8937013,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937014,"byte_end":8937017,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let data: &[u8] = b\"hello, world!\";","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937018,"byte_end":8937057,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/ let mut stream = tokio::io::reader_stream(data);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937058,"byte_end":8937110,"line_start":50,"line_end":50,"column_start":1,"column_end":53}},{"value":"/ let mut stream_contents = Vec::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937111,"byte_end":8937152,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/ while let Some(chunk) = stream.next().await {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937153,"byte_end":8937202,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/    stream_contents.extend_from_slice(chunk?.as_ref());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937203,"byte_end":8937261,"line_start":53,"line_end":53,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937262,"byte_end":8937267,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(stream_contents, data);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937268,"byte_end":8937306,"line_start":55,"line_end":55,"column_start":1,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937307,"byte_end":8937319,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937320,"byte_end":8937327,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937328,"byte_end":8937335,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937336,"byte_end":8937339,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937340,"byte_end":8937379,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/ [`Stream`]: crate::stream::Stream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937380,"byte_end":8937417,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/ [`Bytes`]: bytes::Bytes","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937418,"byte_end":8937445,"line_start":62,"line_end":62,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8949},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8919407,"byte_end":8919411,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8951},{"krate":0,"index":8952}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920001,"byte_end":8920006,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8919698,"byte_end":8919751,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8919756,"byte_end":8919802,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8919807,"byte_end":8919810,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8919815,"byte_end":8919825,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8919830,"byte_end":8919833,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8919838,"byte_end":8919915,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8919920,"byte_end":8919989,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920325,"byte_end":8920334,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920054,"byte_end":8920125,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920130,"byte_end":8920204,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920209,"byte_end":8920284,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920289,"byte_end":8920313,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920457,"byte_end":8920464,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920399,"byte_end":8920445,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920756,"byte_end":8920763,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920511,"byte_end":8920565,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920570,"byte_end":8920573,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920578,"byte_end":8920651,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920656,"byte_end":8920728,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920733,"byte_end":8920744,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8921074,"byte_end":8921085,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920822,"byte_end":8920883,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920888,"byte_end":8920891,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920896,"byte_end":8920969,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8920974,"byte_end":8921046,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8921051,"byte_end":8921062,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1980},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8921231,"byte_end":8921241,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8921165,"byte_end":8921219,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2495},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write.rs","byte_start":8923171,"byte_end":8923176,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":2498},{"krate":0,"index":2499}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write.rs","byte_start":8923088,"byte_end":8923155,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2504},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_all.rs","byte_start":8924072,"byte_end":8924080,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":2507},{"krate":0,"index":2508}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_all.rs","byte_start":8923989,"byte_end":8924056,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2513},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_buf.rs","byte_start":8925463,"byte_end":8925471,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":2517},{"krate":0,"index":2518}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":19874,"byte_end":19901,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_buf.rs","byte_start":8925380,"byte_end":8925447,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8903},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929352,"byte_end":8929359,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":8905},{"krate":0,"index":8906}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8866},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929375,"byte_end":8929382,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":8868},{"krate":0,"index":8869}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8821},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929398,"byte_end":8929406,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":8823},{"krate":0,"index":8824},{"krate":0,"index":8826}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8776},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929431,"byte_end":8929439,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":8778},{"krate":0,"index":8779},{"krate":0,"index":8781}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8731},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929464,"byte_end":8929472,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":8733},{"krate":0,"index":8734},{"krate":0,"index":8736}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8686},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929497,"byte_end":8929506,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":8688},{"krate":0,"index":8689},{"krate":0,"index":8691}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8641},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929534,"byte_end":8929542,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":8643},{"krate":0,"index":8644},{"krate":0,"index":8646}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8596},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929567,"byte_end":8929575,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":8598},{"krate":0,"index":8599},{"krate":0,"index":8601}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8551},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929600,"byte_end":8929608,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":8553},{"krate":0,"index":8554},{"krate":0,"index":8556}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8506},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929633,"byte_end":8929642,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":8508},{"krate":0,"index":8509},{"krate":0,"index":8511}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8461},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929670,"byte_end":8929680,"line_start":124,"line_end":124,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":8463},{"krate":0,"index":8464},{"krate":0,"index":8466}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8416},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929708,"byte_end":8929718,"line_start":125,"line_end":125,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":8418},{"krate":0,"index":8419},{"krate":0,"index":8421}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8371},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929746,"byte_end":8929756,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":8373},{"krate":0,"index":8374},{"krate":0,"index":8376}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8326},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929784,"byte_end":8929795,"line_start":127,"line_end":127,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":8328},{"krate":0,"index":8329},{"krate":0,"index":8331}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8281},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929826,"byte_end":8929836,"line_start":129,"line_end":129,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":8283},{"krate":0,"index":8284},{"krate":0,"index":8286}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8236},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929864,"byte_end":8929874,"line_start":130,"line_end":130,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":8238},{"krate":0,"index":8239},{"krate":0,"index":8241}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8191},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929902,"byte_end":8929912,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":8193},{"krate":0,"index":8194},{"krate":0,"index":8196}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8146},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_int.rs","byte_start":8929940,"byte_end":8929951,"line_start":132,"line_end":132,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":8148},{"krate":0,"index":8149},{"krate":0,"index":8151}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":313},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":377},{"krate":0,"index":2672},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2976},{"krate":0,"index":3104},{"krate":0,"index":3123},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3512}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":71949,"byte_end":71967,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":71969,"byte_end":72007,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72008,"byte_end":72011,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72012,"byte_end":72095,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72096,"byte_end":72161,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72162,"byte_end":72165,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72166,"byte_end":72184,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72185,"byte_end":72188,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72189,"byte_end":72277,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72278,"byte_end":72347,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72348,"byte_end":72436,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72437,"byte_end":72495,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72496,"byte_end":72559,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72560,"byte_end":72625,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72627,"byte_end":72630,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72631,"byte_end":72663,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72664,"byte_end":72692,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72693,"byte_end":72721,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72722,"byte_end":72756,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72757,"byte_end":72787,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72788,"byte_end":72822,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":324},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74079,"byte_end":74092,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73391,"byte_end":73468,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73469,"byte_end":73472,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73473,"byte_end":73482,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73483,"byte_end":73486,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73487,"byte_end":73564,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73565,"byte_end":73636,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73637,"byte_end":73664,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73665,"byte_end":73668,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73669,"byte_end":73682,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73683,"byte_end":73686,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73687,"byte_end":73764,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73765,"byte_end":73837,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73838,"byte_end":73907,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73908,"byte_end":73911,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73912,"byte_end":73991,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":73992,"byte_end":74068,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":373},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80099,"byte_end":80116,"line_start":250,"line_end":250,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":374},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80132,"byte_end":80136,"line_start":251,"line_end":251,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":375},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80197,"byte_end":80203,"line_start":252,"line_end":252,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":80275,"byte_end":80290,"line_start":254,"line_end":254,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> Self::Future","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2672},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2829},{"krate":0,"index":11246},{"krate":0,"index":2830},{"krate":0,"index":2934}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/mod.rs","byte_start":8938662,"byte_end":8938683,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2937},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941283,"byte_end":8941294,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":2938}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8943263,"byte_end":8943267,"line_start":132,"line_end":132,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941377,"byte_end":8941453,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941458,"byte_end":8941461,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941466,"byte_end":8941527,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941532,"byte_end":8941535,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941540,"byte_end":8941615,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941620,"byte_end":8941696,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941701,"byte_end":8941712,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941717,"byte_end":8941720,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941725,"byte_end":8941800,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`dns`** feature","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941805,"byte_end":8941879,"line_start":84,"line_end":84,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941884,"byte_end":8941961,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941966,"byte_end":8941969,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941974,"byte_end":8942050,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942055,"byte_end":8942128,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942133,"byte_end":8942206,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942211,"byte_end":8942263,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942268,"byte_end":8942271,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942276,"byte_end":8942339,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942344,"byte_end":8942347,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942352,"byte_end":8942406,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942411,"byte_end":8942414,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942419,"byte_end":8942433,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942438,"byte_end":8942441,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942446,"byte_end":8942459,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942464,"byte_end":8942496,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942501,"byte_end":8942504,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942509,"byte_end":8942525,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942530,"byte_end":8942533,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942538,"byte_end":8942556,"line_start":103,"line_end":103,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942561,"byte_end":8942600,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942605,"byte_end":8942671,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942676,"byte_end":8942679,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942684,"byte_end":8942711,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942716,"byte_end":8942719,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942724,"byte_end":8942751,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942756,"byte_end":8942770,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942775,"byte_end":8942780,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942785,"byte_end":8942792,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942797,"byte_end":8942800,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942805,"byte_end":8942835,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942840,"byte_end":8942843,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942848,"byte_end":8942861,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942866,"byte_end":8942898,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942903,"byte_end":8942930,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942935,"byte_end":8942938,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942943,"byte_end":8942959,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942964,"byte_end":8942967,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942972,"byte_end":8942990,"line_start":122,"line_end":122,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8942995,"byte_end":8943034,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind((Ipv4Addr::new(127, 0, 0, 1), 2345)).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8943039,"byte_end":8943124,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8943129,"byte_end":8943132,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8943137,"byte_end":8943164,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8943169,"byte_end":8943172,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8943177,"byte_end":8943204,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8943209,"byte_end":8943223,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8943228,"byte_end":8943233,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8943238,"byte_end":8943245,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2696},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944839,"byte_end":8944845,"line_start":184,"line_end":184,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8943980,"byte_end":8944037,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944042,"byte_end":8944045,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944050,"byte_end":8944125,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944130,"byte_end":8944200,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944205,"byte_end":8944234,"line_start":161,"line_end":161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944239,"byte_end":8944242,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944247,"byte_end":8944294,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944299,"byte_end":8944302,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944307,"byte_end":8944321,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944326,"byte_end":8944329,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944334,"byte_end":8944347,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944352,"byte_end":8944384,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944389,"byte_end":8944392,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944397,"byte_end":8944413,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944418,"byte_end":8944421,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944426,"byte_end":8944444,"line_start":172,"line_end":172,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944449,"byte_end":8944488,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944493,"byte_end":8944563,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944568,"byte_end":8944571,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944576,"byte_end":8944615,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944620,"byte_end":8944690,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944695,"byte_end":8944758,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944763,"byte_end":8944772,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944777,"byte_end":8944780,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944785,"byte_end":8944799,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944804,"byte_end":8944809,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944814,"byte_end":8944821,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2700},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8945172,"byte_end":8945183,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8944958,"byte_end":8945021,"line_start":188,"line_end":188,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8945026,"byte_end":8945029,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8945034,"byte_end":8945106,"line_start":190,"line_end":190,"column_start":5,"column_end":77}},{"value":"/ the current task will be notified by a waker.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8945111,"byte_end":8945160,"line_start":191,"line_end":191,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948045,"byte_end":8948053,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946030,"byte_end":8946102,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946107,"byte_end":8946110,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946115,"byte_end":8946185,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946190,"byte_end":8946266,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946271,"byte_end":8946315,"line_start":224,"line_end":224,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946320,"byte_end":8946323,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946328,"byte_end":8946403,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946408,"byte_end":8946484,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946489,"byte_end":8946554,"line_start":228,"line_end":228,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946559,"byte_end":8946614,"line_start":229,"line_end":229,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946619,"byte_end":8946622,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946627,"byte_end":8946698,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946703,"byte_end":8946778,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946783,"byte_end":8946822,"line_start":233,"line_end":233,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946827,"byte_end":8946830,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946835,"byte_end":8946898,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946903,"byte_end":8946906,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946911,"byte_end":8946984,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8946989,"byte_end":8947020,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947025,"byte_end":8947028,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947033,"byte_end":8947106,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947111,"byte_end":8947186,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947191,"byte_end":8947264,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947269,"byte_end":8947296,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947301,"byte_end":8947304,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947309,"byte_end":8947323,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947328,"byte_end":8947331,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947336,"byte_end":8947354,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947359,"byte_end":8947385,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947390,"byte_end":8947422,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947427,"byte_end":8947430,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947435,"byte_end":8947453,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947458,"byte_end":8947509,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947514,"byte_end":8947585,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947590,"byte_end":8947650,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947655,"byte_end":8947669,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947674,"byte_end":8947679,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947684,"byte_end":8947691,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947696,"byte_end":8947699,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947704,"byte_end":8947716,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947721,"byte_end":8947724,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947729,"byte_end":8947789,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947794,"byte_end":8947797,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947802,"byte_end":8947872,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947877,"byte_end":8947950,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8947955,"byte_end":8948033,"line_start":265,"line_end":265,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949137,"byte_end":8949147,"line_start":300,"line_end":300,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948411,"byte_end":8948472,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948477,"byte_end":8948480,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948485,"byte_end":8948558,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948563,"byte_end":8948597,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948602,"byte_end":8948605,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948610,"byte_end":8948624,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948629,"byte_end":8948632,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948637,"byte_end":8948655,"line_start":284,"line_end":284,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948660,"byte_end":8948692,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948697,"byte_end":8948700,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948705,"byte_end":8948721,"line_start":287,"line_end":287,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948726,"byte_end":8948781,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948786,"byte_end":8948789,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948794,"byte_end":8948812,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948817,"byte_end":8948856,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948861,"byte_end":8948927,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948932,"byte_end":8948935,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948940,"byte_end":8948982,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8948987,"byte_end":8949076,"line_start":295,"line_end":295,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949081,"byte_end":8949084,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949089,"byte_end":8949103,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949108,"byte_end":8949113,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949118,"byte_end":8949125,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950578,"byte_end":8950586,"line_start":340,"line_end":340,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949233,"byte_end":8949307,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949312,"byte_end":8949315,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949320,"byte_end":8949382,"line_start":306,"line_end":306,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949387,"byte_end":8949390,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949395,"byte_end":8949471,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949476,"byte_end":8949545,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949550,"byte_end":8949579,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949584,"byte_end":8949587,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949592,"byte_end":8949604,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949609,"byte_end":8949612,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949617,"byte_end":8949692,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949697,"byte_end":8949772,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949777,"byte_end":8949851,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949856,"byte_end":8949931,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949936,"byte_end":8949944,"line_start":318,"line_end":318,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949949,"byte_end":8949952,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949957,"byte_end":8949971,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949976,"byte_end":8949979,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8949984,"byte_end":8949997,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950002,"byte_end":8950055,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950060,"byte_end":8950063,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950068,"byte_end":8950086,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950091,"byte_end":8950112,"line_start":326,"line_end":326,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950117,"byte_end":8950195,"line_start":327,"line_end":327,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950200,"byte_end":8950247,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950252,"byte_end":8950255,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950260,"byte_end":8950316,"line_start":330,"line_end":330,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950321,"byte_end":8950347,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950352,"byte_end":8950383,"line_start":332,"line_end":332,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950388,"byte_end":8950432,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950437,"byte_end":8950454,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950459,"byte_end":8950512,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950517,"byte_end":8950530,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950535,"byte_end":8950544,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950549,"byte_end":8950554,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950559,"byte_end":8950566,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951272,"byte_end":8951275,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950655,"byte_end":8950713,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950718,"byte_end":8950721,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950726,"byte_end":8950786,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950791,"byte_end":8950794,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950799,"byte_end":8950836,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950841,"byte_end":8950844,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950849,"byte_end":8950863,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950868,"byte_end":8950871,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950876,"byte_end":8950889,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950894,"byte_end":8950926,"line_start":353,"line_end":353,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950931,"byte_end":8950934,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950939,"byte_end":8950955,"line_start":355,"line_end":355,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950960,"byte_end":8950963,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950968,"byte_end":8950986,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8950991,"byte_end":8951030,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951035,"byte_end":8951097,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951102,"byte_end":8951105,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951110,"byte_end":8951167,"line_start":361,"line_end":361,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951172,"byte_end":8951212,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951217,"byte_end":8951220,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951225,"byte_end":8951238,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951243,"byte_end":8951248,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951253,"byte_end":8951260,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951914,"byte_end":8951921,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951347,"byte_end":8951405,"line_start":371,"line_end":371,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951410,"byte_end":8951413,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951418,"byte_end":8951494,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951499,"byte_end":8951520,"line_start":374,"line_end":374,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951525,"byte_end":8951528,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951533,"byte_end":8951547,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951552,"byte_end":8951555,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951560,"byte_end":8951573,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951578,"byte_end":8951610,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951615,"byte_end":8951618,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951623,"byte_end":8951639,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951644,"byte_end":8951647,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951652,"byte_end":8951670,"line_start":383,"line_end":383,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951675,"byte_end":8951714,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951719,"byte_end":8951782,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951787,"byte_end":8951790,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951795,"byte_end":8951853,"line_start":387,"line_end":387,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951858,"byte_end":8951861,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951866,"byte_end":8951880,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951885,"byte_end":8951890,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8951895,"byte_end":8951902,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2939},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":8954194,"byte_end":8954202,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":2941}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":8953992,"byte_end":8954068,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":8954069,"byte_end":8954116,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":8954117,"byte_end":8954165,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":8954617,"byte_end":8954628,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":8954380,"byte_end":8954453,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":8954458,"byte_end":8954473,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":8954478,"byte_end":8954481,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":8954486,"byte_end":8954555,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":8954560,"byte_end":8954605,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2945},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956196,"byte_end":8956204,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8955779,"byte_end":8955843,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8955844,"byte_end":8955847,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8955848,"byte_end":8955936,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8955937,"byte_end":8956014,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956015,"byte_end":8956018,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956019,"byte_end":8956047,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956048,"byte_end":8956081,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956082,"byte_end":8956133,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956134,"byte_end":8956167,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2952},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956902,"byte_end":8956911,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956226,"byte_end":8956291,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956292,"byte_end":8956295,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956296,"byte_end":8956382,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956383,"byte_end":8956435,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956436,"byte_end":8956439,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956440,"byte_end":8956521,"line_start":39,"line_end":39,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956522,"byte_end":8956607,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956608,"byte_end":8956611,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956612,"byte_end":8956640,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956641,"byte_end":8956674,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956675,"byte_end":8956722,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956723,"byte_end":8956785,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956786,"byte_end":8956839,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8956840,"byte_end":8956873,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957968,"byte_end":8957977,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957085,"byte_end":8957159,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957164,"byte_end":8957237,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957242,"byte_end":8957256,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957261,"byte_end":8957264,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957269,"byte_end":8957342,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957347,"byte_end":8957350,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957355,"byte_end":8957369,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957374,"byte_end":8957377,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957382,"byte_end":8957395,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957400,"byte_end":8957418,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957423,"byte_end":8957453,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957458,"byte_end":8957461,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957466,"byte_end":8957499,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957504,"byte_end":8957507,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957512,"byte_end":8957530,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957535,"byte_end":8957574,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957579,"byte_end":8957648,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957653,"byte_end":8957701,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957706,"byte_end":8957736,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957741,"byte_end":8957744,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957749,"byte_end":8957771,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957776,"byte_end":8957821,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957826,"byte_end":8957844,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957849,"byte_end":8957852,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957857,"byte_end":8957871,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957876,"byte_end":8957881,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957886,"byte_end":8957893,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957898,"byte_end":8957901,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957906,"byte_end":8957956,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2758},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959394,"byte_end":8959398,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958102,"byte_end":8958172,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958177,"byte_end":8958246,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958251,"byte_end":8958290,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958295,"byte_end":8958298,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958303,"byte_end":8958371,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958376,"byte_end":8958379,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958384,"byte_end":8958424,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958429,"byte_end":8958432,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958437,"byte_end":8958451,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958456,"byte_end":8958459,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958464,"byte_end":8958477,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958482,"byte_end":8958512,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958517,"byte_end":8958543,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958548,"byte_end":8958574,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958579,"byte_end":8958582,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958587,"byte_end":8958605,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958610,"byte_end":8958661,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958666,"byte_end":8958694,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958699,"byte_end":8958768,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958773,"byte_end":8958821,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958826,"byte_end":8958829,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958834,"byte_end":8958863,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958868,"byte_end":8958897,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958902,"byte_end":8958905,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958910,"byte_end":8958937,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958942,"byte_end":8958989,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8958994,"byte_end":8958997,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959002,"byte_end":8959026,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959031,"byte_end":8959090,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959095,"byte_end":8959134,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959139,"byte_end":8959142,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959147,"byte_end":8959161,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959166,"byte_end":8959171,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959176,"byte_end":8959183,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959188,"byte_end":8959191,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959196,"byte_end":8959261,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959266,"byte_end":8959269,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959274,"byte_end":8959320,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959325,"byte_end":8959376,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2959},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962000,"byte_end":8962013,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":2960}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8961565,"byte_end":8961631,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8961632,"byte_end":8961635,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8961636,"byte_end":8961723,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8961724,"byte_end":8961808,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8961809,"byte_end":8961812,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8961813,"byte_end":8961841,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8961842,"byte_end":8961885,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8961886,"byte_end":8961937,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8961938,"byte_end":8961971,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2963},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962823,"byte_end":8962837,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":2964},{"krate":0,"index":2965}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962046,"byte_end":8962113,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962114,"byte_end":8962117,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962118,"byte_end":8962205,"line_start":40,"line_end":40,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962206,"byte_end":8962283,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962284,"byte_end":8962341,"line_start":42,"line_end":42,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962342,"byte_end":8962345,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962346,"byte_end":8962432,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962433,"byte_end":8962518,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962519,"byte_end":8962522,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962523,"byte_end":8962551,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962552,"byte_end":8962595,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962596,"byte_end":8962643,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962644,"byte_end":8962706,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962707,"byte_end":8962760,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8962761,"byte_end":8962794,"line_start":52,"line_end":52,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2968},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8963802,"byte_end":8963814,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8963670,"byte_end":8963752,"line_start":85,"line_end":85,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8963753,"byte_end":8963773,"line_start":86,"line_end":86,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2970},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8963815,"byte_end":8963832,"line_start":88,"line_end":88,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":2968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2971},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8963834,"byte_end":8963852,"line_start":88,"line_end":88,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":2968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964398,"byte_end":8964405,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964135,"byte_end":8964204,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964209,"byte_end":8964273,"line_start":103,"line_end":103,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964278,"byte_end":8964330,"line_start":104,"line_end":104,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964335,"byte_end":8964338,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964343,"byte_end":8964386,"line_start":106,"line_end":106,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965396,"byte_end":8965405,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964512,"byte_end":8964586,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964591,"byte_end":8964664,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964669,"byte_end":8964683,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964688,"byte_end":8964691,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964696,"byte_end":8964769,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964774,"byte_end":8964777,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964782,"byte_end":8964796,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964801,"byte_end":8964804,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964809,"byte_end":8964822,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964827,"byte_end":8964845,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964850,"byte_end":8964880,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964885,"byte_end":8964888,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964893,"byte_end":8964926,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964931,"byte_end":8964934,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964939,"byte_end":8964957,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964962,"byte_end":8965001,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965006,"byte_end":8965071,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965076,"byte_end":8965129,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965134,"byte_end":8965164,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965169,"byte_end":8965172,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965177,"byte_end":8965199,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965204,"byte_end":8965249,"line_start":132,"line_end":132,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965254,"byte_end":8965272,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965277,"byte_end":8965280,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965285,"byte_end":8965299,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965304,"byte_end":8965309,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965314,"byte_end":8965321,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965326,"byte_end":8965329,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965334,"byte_end":8965384,"line_start":139,"line_end":139,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966827,"byte_end":8966831,"line_start":183,"line_end":183,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965534,"byte_end":8965604,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965609,"byte_end":8965678,"line_start":145,"line_end":145,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965683,"byte_end":8965722,"line_start":146,"line_end":146,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965727,"byte_end":8965730,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965735,"byte_end":8965803,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965808,"byte_end":8965811,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965816,"byte_end":8965856,"line_start":150,"line_end":150,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965861,"byte_end":8965864,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965869,"byte_end":8965883,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965888,"byte_end":8965891,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965896,"byte_end":8965909,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965914,"byte_end":8965944,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965949,"byte_end":8965975,"line_start":156,"line_end":156,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8965980,"byte_end":8966006,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966011,"byte_end":8966014,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966019,"byte_end":8966037,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966042,"byte_end":8966093,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966098,"byte_end":8966126,"line_start":161,"line_end":161,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966131,"byte_end":8966196,"line_start":162,"line_end":162,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966201,"byte_end":8966254,"line_start":163,"line_end":163,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966259,"byte_end":8966262,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966267,"byte_end":8966296,"line_start":165,"line_end":165,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966301,"byte_end":8966330,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966335,"byte_end":8966338,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966343,"byte_end":8966370,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966375,"byte_end":8966422,"line_start":169,"line_end":169,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966427,"byte_end":8966430,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966435,"byte_end":8966459,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966464,"byte_end":8966523,"line_start":172,"line_end":172,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966528,"byte_end":8966567,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966572,"byte_end":8966575,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966580,"byte_end":8966594,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966599,"byte_end":8966604,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966609,"byte_end":8966616,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966621,"byte_end":8966624,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966629,"byte_end":8966694,"line_start":179,"line_end":179,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966699,"byte_end":8966702,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966707,"byte_end":8966753,"line_start":181,"line_end":181,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966758,"byte_end":8966809,"line_start":182,"line_end":182,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8967564,"byte_end":8967571,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8967301,"byte_end":8967370,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8967375,"byte_end":8967439,"line_start":204,"line_end":204,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8967444,"byte_end":8967496,"line_start":205,"line_end":205,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8967501,"byte_end":8967504,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8967509,"byte_end":8967552,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2813},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8967876,"byte_end":8967882,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8967677,"byte_end":8967749,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8967754,"byte_end":8967823,"line_start":213,"line_end":213,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8967828,"byte_end":8967864,"line_start":214,"line_end":214,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2974},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8971290,"byte_end":8971299,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":2975}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22609,"byte_end":22632,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8973380,"byte_end":8973387,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8971378,"byte_end":8971422,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8971427,"byte_end":8971430,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8971435,"byte_end":8971509,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8971514,"byte_end":8971583,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`dns`** feature is enabled,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8971588,"byte_end":8971664,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8971669,"byte_end":8971734,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8971739,"byte_end":8971742,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8971747,"byte_end":8971823,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8971828,"byte_end":8971897,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8971902,"byte_end":8971978,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8971983,"byte_end":8972042,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972047,"byte_end":8972050,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972055,"byte_end":8972109,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972114,"byte_end":8972117,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972122,"byte_end":8972136,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972141,"byte_end":8972144,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972149,"byte_end":8972162,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972167,"byte_end":8972197,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972202,"byte_end":8972228,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972233,"byte_end":8972259,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972264,"byte_end":8972267,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972272,"byte_end":8972290,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972295,"byte_end":8972346,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972351,"byte_end":8972379,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972384,"byte_end":8972453,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972458,"byte_end":8972461,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972466,"byte_end":8972493,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972498,"byte_end":8972547,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972552,"byte_end":8972555,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972560,"byte_end":8972574,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972579,"byte_end":8972584,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972589,"byte_end":8972596,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972601,"byte_end":8972604,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Without the `dns` feature:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972609,"byte_end":8972639,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972644,"byte_end":8972647,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972652,"byte_end":8972665,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972670,"byte_end":8972700,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972705,"byte_end":8972731,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972736,"byte_end":8972762,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972767,"byte_end":8972794,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972799,"byte_end":8972802,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972807,"byte_end":8972825,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972830,"byte_end":8972881,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972886,"byte_end":8972914,"line_start":107,"line_end":107,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect((Ipv4Addr::new(127, 0, 0, 1), 8080)).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8972919,"byte_end":8973007,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8973012,"byte_end":8973015,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8973020,"byte_end":8973047,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8973052,"byte_end":8973101,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8973106,"byte_end":8973109,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8973114,"byte_end":8973128,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8973133,"byte_end":8973138,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8973143,"byte_end":8973150,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8973155,"byte_end":8973158,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8973163,"byte_end":8973234,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8973239,"byte_end":8973242,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8973247,"byte_end":8973304,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8973309,"byte_end":8973362,"line_start":120,"line_end":120,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975820,"byte_end":8975828,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8974853,"byte_end":8974910,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8974915,"byte_end":8974918,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8974923,"byte_end":8974998,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975003,"byte_end":8975076,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975081,"byte_end":8975084,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975089,"byte_end":8975103,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975108,"byte_end":8975111,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975116,"byte_end":8975134,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975139,"byte_end":8975165,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975170,"byte_end":8975200,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975205,"byte_end":8975208,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975213,"byte_end":8975231,"line_start":177,"line_end":177,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975236,"byte_end":8975287,"line_start":178,"line_end":178,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975292,"byte_end":8975366,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975371,"byte_end":8975425,"line_start":180,"line_end":180,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975430,"byte_end":8975444,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975449,"byte_end":8975454,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975459,"byte_end":8975466,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975471,"byte_end":8975474,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975479,"byte_end":8975491,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975496,"byte_end":8975499,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975504,"byte_end":8975564,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975569,"byte_end":8975572,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975577,"byte_end":8975647,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975652,"byte_end":8975725,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8975730,"byte_end":8975808,"line_start":191,"line_end":191,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2875},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8976225,"byte_end":8976236,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"pub async fn connect_std<'_>(net::TcpStream, &'_ SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977384,"byte_end":8977394,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8976985,"byte_end":8977044,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977049,"byte_end":8977052,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977057,"byte_end":8977071,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977076,"byte_end":8977079,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977084,"byte_end":8977097,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977102,"byte_end":8977132,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977137,"byte_end":8977140,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977145,"byte_end":8977209,"line_start":229,"line_end":229,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977214,"byte_end":8977275,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977280,"byte_end":8977283,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977288,"byte_end":8977331,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977336,"byte_end":8977348,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977353,"byte_end":8977360,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977365,"byte_end":8977372,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977883,"byte_end":8977892,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977480,"byte_end":8977544,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977549,"byte_end":8977552,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977557,"byte_end":8977571,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977576,"byte_end":8977579,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977584,"byte_end":8977597,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977602,"byte_end":8977632,"line_start":245,"line_end":245,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977637,"byte_end":8977640,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977645,"byte_end":8977709,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977714,"byte_end":8977775,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977780,"byte_end":8977783,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977788,"byte_end":8977830,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977835,"byte_end":8977847,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977852,"byte_end":8977859,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977864,"byte_end":8977871,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8979050,"byte_end":8979059,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8977977,"byte_end":8978052,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978057,"byte_end":8978130,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978135,"byte_end":8978149,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978154,"byte_end":8978157,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978162,"byte_end":8978180,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978185,"byte_end":8978188,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978193,"byte_end":8978218,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978223,"byte_end":8978226,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978231,"byte_end":8978282,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978287,"byte_end":8978370,"line_start":267,"line_end":267,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978375,"byte_end":8978430,"line_start":268,"line_end":268,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978435,"byte_end":8978438,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978443,"byte_end":8978455,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978460,"byte_end":8978463,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978468,"byte_end":8978543,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978548,"byte_end":8978551,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978556,"byte_end":8978570,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978575,"byte_end":8978578,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978583,"byte_end":8978596,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978601,"byte_end":8978619,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978624,"byte_end":8978654,"line_start":278,"line_end":278,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978659,"byte_end":8978662,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978667,"byte_end":8978700,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978705,"byte_end":8978708,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978713,"byte_end":8978731,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978736,"byte_end":8978775,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978780,"byte_end":8978849,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978854,"byte_end":8978884,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978889,"byte_end":8978892,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978897,"byte_end":8978919,"line_start":287,"line_end":287,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978924,"byte_end":8978966,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978971,"byte_end":8978989,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8978994,"byte_end":8978997,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8979002,"byte_end":8979016,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8979021,"byte_end":8979026,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8979031,"byte_end":8979038,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2883},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980971,"byte_end":8980975,"line_start":352,"line_end":352,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8979720,"byte_end":8979790,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8979795,"byte_end":8979864,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8979869,"byte_end":8979908,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8979913,"byte_end":8979916,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8979921,"byte_end":8979995,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980000,"byte_end":8980060,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980065,"byte_end":8980068,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980073,"byte_end":8980087,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980092,"byte_end":8980095,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980100,"byte_end":8980113,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980118,"byte_end":8980148,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980153,"byte_end":8980179,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980184,"byte_end":8980210,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980215,"byte_end":8980218,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980223,"byte_end":8980241,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980246,"byte_end":8980297,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980302,"byte_end":8980330,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980335,"byte_end":8980404,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980409,"byte_end":8980412,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980417,"byte_end":8980446,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980451,"byte_end":8980480,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980485,"byte_end":8980488,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980493,"byte_end":8980520,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980525,"byte_end":8980569,"line_start":338,"line_end":338,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980574,"byte_end":8980577,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980582,"byte_end":8980606,"line_start":340,"line_end":340,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980611,"byte_end":8980667,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980672,"byte_end":8980711,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980716,"byte_end":8980719,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980724,"byte_end":8980738,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980743,"byte_end":8980748,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980753,"byte_end":8980760,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980765,"byte_end":8980768,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980773,"byte_end":8980838,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980843,"byte_end":8980846,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980851,"byte_end":8980897,"line_start":350,"line_end":350,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8980902,"byte_end":8980953,"line_start":351,"line_end":351,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981844,"byte_end":8981852,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981089,"byte_end":8981155,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981160,"byte_end":8981163,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981168,"byte_end":8981240,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981245,"byte_end":8981314,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981319,"byte_end":8981352,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981357,"byte_end":8981360,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981365,"byte_end":8981379,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981384,"byte_end":8981387,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981392,"byte_end":8981405,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981410,"byte_end":8981440,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981445,"byte_end":8981471,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981476,"byte_end":8981503,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981508,"byte_end":8981511,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981516,"byte_end":8981534,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981539,"byte_end":8981590,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981595,"byte_end":8981623,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981628,"byte_end":8981693,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981698,"byte_end":8981701,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981706,"byte_end":8981736,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981741,"byte_end":8981783,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981788,"byte_end":8981791,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981796,"byte_end":8981810,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981815,"byte_end":8981820,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981825,"byte_end":8981832,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982478,"byte_end":8982485,"line_start":402,"line_end":402,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8981946,"byte_end":8982008,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982013,"byte_end":8982016,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982021,"byte_end":8982085,"line_start":386,"line_end":386,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982090,"byte_end":8982093,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982098,"byte_end":8982141,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982146,"byte_end":8982149,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982154,"byte_end":8982168,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982173,"byte_end":8982176,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982181,"byte_end":8982194,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982199,"byte_end":8982229,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982234,"byte_end":8982237,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982242,"byte_end":8982306,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982311,"byte_end":8982372,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982377,"byte_end":8982380,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982385,"byte_end":8982425,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982430,"byte_end":8982442,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982447,"byte_end":8982454,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982459,"byte_end":8982466,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983292,"byte_end":8983303,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982562,"byte_end":8982624,"line_start":406,"line_end":406,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982629,"byte_end":8982632,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982637,"byte_end":8982706,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982711,"byte_end":8982784,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982789,"byte_end":8982862,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982867,"byte_end":8982942,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982947,"byte_end":8982965,"line_start":412,"line_end":412,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982970,"byte_end":8982973,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982978,"byte_end":8982992,"line_start":414,"line_end":414,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8982997,"byte_end":8983000,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983005,"byte_end":8983018,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983023,"byte_end":8983053,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983058,"byte_end":8983061,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983066,"byte_end":8983130,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983135,"byte_end":8983196,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983201,"byte_end":8983204,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983209,"byte_end":8983239,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983244,"byte_end":8983256,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983261,"byte_end":8983268,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983273,"byte_end":8983280,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983970,"byte_end":8983986,"line_start":448,"line_end":448,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983404,"byte_end":8983464,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983469,"byte_end":8983472,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983477,"byte_end":8983550,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983555,"byte_end":8983558,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983563,"byte_end":8983624,"line_start":434,"line_end":434,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983629,"byte_end":8983632,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983637,"byte_end":8983651,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983656,"byte_end":8983659,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983664,"byte_end":8983677,"line_start":438,"line_end":438,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983682,"byte_end":8983712,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983717,"byte_end":8983720,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983725,"byte_end":8983789,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983794,"byte_end":8983855,"line_start":442,"line_end":442,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983860,"byte_end":8983863,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983868,"byte_end":8983917,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983922,"byte_end":8983934,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983939,"byte_end":8983946,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8983951,"byte_end":8983958,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2891},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984578,"byte_end":8984598,"line_start":469,"line_end":469,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984073,"byte_end":8984133,"line_start":452,"line_end":452,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984138,"byte_end":8984141,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984146,"byte_end":8984218,"line_start":454,"line_end":454,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984223,"byte_end":8984243,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984248,"byte_end":8984251,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984256,"byte_end":8984270,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984275,"byte_end":8984278,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984283,"byte_end":8984296,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984301,"byte_end":8984331,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984336,"byte_end":8984339,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984344,"byte_end":8984408,"line_start":462,"line_end":462,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984413,"byte_end":8984474,"line_start":463,"line_end":463,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984479,"byte_end":8984482,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984487,"byte_end":8984525,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984530,"byte_end":8984542,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984547,"byte_end":8984554,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984559,"byte_end":8984566,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2892},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985269,"byte_end":8985285,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984703,"byte_end":8984763,"line_start":473,"line_end":473,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984768,"byte_end":8984771,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984776,"byte_end":8984849,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984854,"byte_end":8984857,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984862,"byte_end":8984923,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984928,"byte_end":8984931,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984936,"byte_end":8984950,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984955,"byte_end":8984958,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984963,"byte_end":8984976,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8984981,"byte_end":8985011,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985016,"byte_end":8985019,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985024,"byte_end":8985088,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985093,"byte_end":8985154,"line_start":485,"line_end":485,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985159,"byte_end":8985162,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985167,"byte_end":8985216,"line_start":487,"line_end":487,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985221,"byte_end":8985233,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985238,"byte_end":8985245,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985250,"byte_end":8985257,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2893},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985874,"byte_end":8985894,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985372,"byte_end":8985432,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985437,"byte_end":8985440,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985445,"byte_end":8985519,"line_start":497,"line_end":497,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985524,"byte_end":8985539,"line_start":498,"line_end":498,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985544,"byte_end":8985547,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985552,"byte_end":8985566,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985571,"byte_end":8985574,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985579,"byte_end":8985592,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985597,"byte_end":8985627,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985632,"byte_end":8985635,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985640,"byte_end":8985704,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985709,"byte_end":8985770,"line_start":506,"line_end":506,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985775,"byte_end":8985778,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985783,"byte_end":8985821,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985826,"byte_end":8985838,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985843,"byte_end":8985850,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985855,"byte_end":8985862,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2894},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986596,"byte_end":8986605,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"pub fn keepalive(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8985999,"byte_end":8986075,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986080,"byte_end":8986118,"line_start":517,"line_end":517,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986123,"byte_end":8986126,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986131,"byte_end":8986197,"line_start":519,"line_end":519,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986202,"byte_end":8986205,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986210,"byte_end":8986257,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986262,"byte_end":8986265,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986270,"byte_end":8986284,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986289,"byte_end":8986292,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986297,"byte_end":8986310,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986315,"byte_end":8986345,"line_start":526,"line_end":526,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986350,"byte_end":8986353,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986358,"byte_end":8986422,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986427,"byte_end":8986488,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986493,"byte_end":8986496,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986501,"byte_end":8986543,"line_start":531,"line_end":531,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986548,"byte_end":8986560,"line_start":532,"line_end":532,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986565,"byte_end":8986572,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986577,"byte_end":8986584,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2895},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987636,"byte_end":8987649,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"pub fn set_keepalive(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986696,"byte_end":8986770,"line_start":539,"line_end":539,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986775,"byte_end":8986778,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986783,"byte_end":8986850,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986855,"byte_end":8986929,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8986934,"byte_end":8986996,"line_start":543,"line_end":543,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987001,"byte_end":8987004,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987009,"byte_end":8987083,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987088,"byte_end":8987163,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987168,"byte_end":8987192,"line_start":547,"line_end":547,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987197,"byte_end":8987200,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987205,"byte_end":8987268,"line_start":549,"line_end":549,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987273,"byte_end":8987307,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987312,"byte_end":8987315,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987320,"byte_end":8987334,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987339,"byte_end":8987342,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987347,"byte_end":8987360,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987365,"byte_end":8987395,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987400,"byte_end":8987403,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987408,"byte_end":8987472,"line_start":557,"line_end":557,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987477,"byte_end":8987538,"line_start":558,"line_end":558,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987543,"byte_end":8987546,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987551,"byte_end":8987583,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987588,"byte_end":8987600,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987605,"byte_end":8987612,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987617,"byte_end":8987624,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988280,"byte_end":8988283,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987768,"byte_end":8987826,"line_start":568,"line_end":568,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987831,"byte_end":8987834,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987839,"byte_end":8987899,"line_start":570,"line_end":570,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987904,"byte_end":8987907,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987912,"byte_end":8987947,"line_start":572,"line_end":572,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987952,"byte_end":8987955,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987960,"byte_end":8987974,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987979,"byte_end":8987982,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8987987,"byte_end":8988000,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988005,"byte_end":8988035,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988040,"byte_end":8988043,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988048,"byte_end":8988112,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988117,"byte_end":8988178,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988183,"byte_end":8988186,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988191,"byte_end":8988227,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988232,"byte_end":8988244,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988249,"byte_end":8988256,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988261,"byte_end":8988268,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988850,"byte_end":8988857,"line_start":607,"line_end":607,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988355,"byte_end":8988413,"line_start":590,"line_end":590,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988418,"byte_end":8988421,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988426,"byte_end":8988502,"line_start":592,"line_end":592,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988507,"byte_end":8988528,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988533,"byte_end":8988536,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988541,"byte_end":8988555,"line_start":595,"line_end":595,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988560,"byte_end":8988563,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988568,"byte_end":8988581,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988586,"byte_end":8988616,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988621,"byte_end":8988624,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988629,"byte_end":8988693,"line_start":600,"line_end":600,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988698,"byte_end":8988759,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988764,"byte_end":8988767,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988772,"byte_end":8988797,"line_start":603,"line_end":603,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988802,"byte_end":8988814,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988819,"byte_end":8988826,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988831,"byte_end":8988838,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2898},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989499,"byte_end":8989505,"line_start":630,"line_end":630,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8988945,"byte_end":8989017,"line_start":611,"line_end":611,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989022,"byte_end":8989033,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989038,"byte_end":8989041,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989046,"byte_end":8989109,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989114,"byte_end":8989117,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989122,"byte_end":8989163,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989168,"byte_end":8989171,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989176,"byte_end":8989190,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989195,"byte_end":8989198,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989203,"byte_end":8989216,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989221,"byte_end":8989251,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989256,"byte_end":8989259,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989264,"byte_end":8989328,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989333,"byte_end":8989394,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989399,"byte_end":8989402,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989407,"byte_end":8989446,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989451,"byte_end":8989463,"line_start":627,"line_end":627,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989468,"byte_end":8989475,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989480,"byte_end":8989487,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2899},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990447,"byte_end":8990457,"line_start":658,"line_end":658,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989593,"byte_end":8989663,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989668,"byte_end":8989679,"line_start":635,"line_end":635,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989684,"byte_end":8989687,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989692,"byte_end":8989767,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989772,"byte_end":8989835,"line_start":638,"line_end":638,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989840,"byte_end":8989911,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989916,"byte_end":8989933,"line_start":640,"line_end":640,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989938,"byte_end":8989941,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8989946,"byte_end":8990019,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990024,"byte_end":8990100,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990105,"byte_end":8990121,"line_start":644,"line_end":644,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990126,"byte_end":8990129,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990134,"byte_end":8990148,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990153,"byte_end":8990156,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990161,"byte_end":8990174,"line_start":648,"line_end":648,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990179,"byte_end":8990209,"line_start":649,"line_end":649,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990214,"byte_end":8990217,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990222,"byte_end":8990286,"line_start":651,"line_end":651,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990291,"byte_end":8990352,"line_start":652,"line_end":652,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990357,"byte_end":8990360,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990365,"byte_end":8990394,"line_start":654,"line_end":654,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990399,"byte_end":8990411,"line_start":655,"line_end":655,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990416,"byte_end":8990423,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990428,"byte_end":8990435,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2900},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991075,"byte_end":8991080,"line_start":672,"line_end":672,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990698,"byte_end":8990734,"line_start":664,"line_end":664,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990739,"byte_end":8990816,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990821,"byte_end":8990867,"line_start":666,"line_end":666,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990872,"byte_end":8990875,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990880,"byte_end":8990959,"line_start":668,"line_end":668,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8990964,"byte_end":8991007,"line_start":669,"line_end":669,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991012,"byte_end":8991015,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991020,"byte_end":8991063,"line_start":671,"line_end":671,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2902},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991736,"byte_end":8991746,"line_start":687,"line_end":687,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991165,"byte_end":8991242,"line_start":676,"line_end":676,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991247,"byte_end":8991293,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991298,"byte_end":8991301,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991306,"byte_end":8991384,"line_start":679,"line_end":679,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991389,"byte_end":8991437,"line_start":680,"line_end":680,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991442,"byte_end":8991445,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991450,"byte_end":8991528,"line_start":682,"line_end":682,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown(Write)`] on the `TcpStream`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991533,"byte_end":8991614,"line_start":683,"line_end":683,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991619,"byte_end":8991622,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991627,"byte_end":8991660,"line_start":685,"line_end":685,"column_start":5,"column_end":38}},{"value":"/ [`shutdown(Write)`]: fn@crate::net::TcpStream::shutdown","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8991665,"byte_end":8991724,"line_start":686,"line_end":686,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":2976},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","parent":null,"children":[{"krate":0,"index":2977},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":11360},{"krate":0,"index":3103}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23445,"byte_end":23468,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"/ UDP utility types.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/mod.rs","byte_start":8998999,"byte_end":8999021,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3105},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":8999477,"byte_end":8999486,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3106}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23445,"byte_end":23468,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":8999684,"byte_end":8999688,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":8999565,"byte_end":8999637,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":8999642,"byte_end":8999666,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001391,"byte_end":9001399,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9000523,"byte_end":9000595,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9000600,"byte_end":9000603,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9000608,"byte_end":9000681,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9000686,"byte_end":9000761,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9000766,"byte_end":9000813,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9000818,"byte_end":9000821,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9000826,"byte_end":9000899,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9000904,"byte_end":9000979,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9000984,"byte_end":9001037,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001042,"byte_end":9001045,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001050,"byte_end":9001062,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001067,"byte_end":9001070,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001075,"byte_end":9001135,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001140,"byte_end":9001143,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001148,"byte_end":9001218,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001223,"byte_end":9001296,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001301,"byte_end":9001379,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001783,"byte_end":9001788,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"pub fn split(Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001591,"byte_end":9001668,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001673,"byte_end":9001746,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001751,"byte_end":9001771,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001923,"byte_end":9001933,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9001852,"byte_end":9001911,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9002205,"byte_end":9002212,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9002019,"byte_end":9002093,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9002098,"byte_end":9002171,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9002176,"byte_end":9002187,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003149,"byte_end":9003153,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9002746,"byte_end":9002844,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9002849,"byte_end":9002920,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9002925,"byte_end":9002928,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9002933,"byte_end":9003016,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003021,"byte_end":9003081,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003086,"byte_end":9003089,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003094,"byte_end":9003131,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003659,"byte_end":9003667,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003263,"byte_end":9003334,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003339,"byte_end":9003353,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003358,"byte_end":9003361,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003366,"byte_end":9003379,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003384,"byte_end":9003387,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ If successfull, the number of bytes sent is returned. Users","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003392,"byte_end":9003455,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ should ensure that when the remote cannot receive, the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003460,"byte_end":9003518,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003523,"byte_end":9003573,"line_start":126,"line_end":126,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003578,"byte_end":9003581,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9003586,"byte_end":9003647,"line_start":128,"line_end":128,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9004374,"byte_end":9004383,"line_start":144,"line_end":144,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3018},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9005401,"byte_end":9005405,"line_start":168,"line_end":168,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9004761,"byte_end":9004840,"line_start":156,"line_end":156,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9004845,"byte_end":9004929,"line_start":157,"line_end":157,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9004934,"byte_end":9004966,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9004971,"byte_end":9004974,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9004979,"byte_end":9005060,"line_start":160,"line_end":160,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9005065,"byte_end":9005148,"line_start":161,"line_end":161,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9005153,"byte_end":9005187,"line_start":162,"line_end":162,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9005192,"byte_end":9005195,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9005200,"byte_end":9005283,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9005288,"byte_end":9005333,"line_start":165,"line_end":165,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9005338,"byte_end":9005341,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9005346,"byte_end":9005383,"line_start":167,"line_end":167,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3022},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9005545,"byte_end":9005554,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9006273,"byte_end":9006280,"line_start":190,"line_end":190,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ mut Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9005982,"byte_end":9006054,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9006059,"byte_end":9006130,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9006135,"byte_end":9006138,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9006143,"byte_end":9006219,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9006224,"byte_end":9006255,"line_start":189,"line_end":189,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3028},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9007176,"byte_end":9007187,"line_start":213,"line_end":213,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9006698,"byte_end":9006754,"line_start":202,"line_end":202,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9006759,"byte_end":9006762,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9006767,"byte_end":9006780,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9006785,"byte_end":9006788,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If successfull, the future resolves to the number of bytes sent.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9006793,"byte_end":9006861,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9006866,"byte_end":9006869,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9006874,"byte_end":9006938,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9006943,"byte_end":9007017,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9007022,"byte_end":9007090,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9007095,"byte_end":9007098,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9007103,"byte_end":9007164,"line_start":212,"line_end":212,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9007363,"byte_end":9007375,"line_start":219,"line_end":219,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], &SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3030},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9008214,"byte_end":9008223,"line_start":242,"line_end":242,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9007824,"byte_end":9007903,"line_start":236,"line_end":236,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9007908,"byte_end":9007975,"line_start":237,"line_end":237,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9007980,"byte_end":9007983,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9007988,"byte_end":9008066,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9008071,"byte_end":9008149,"line_start":240,"line_end":240,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9008154,"byte_end":9008196,"line_start":241,"line_end":241,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9008382,"byte_end":9008396,"line_start":247,"line_end":247,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut [u8])\n-> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3035},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009098,"byte_end":9009107,"line_start":268,"line_end":268,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9008881,"byte_end":9008945,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9008950,"byte_end":9008953,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9008958,"byte_end":9009024,"line_start":265,"line_end":265,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009029,"byte_end":9009032,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009037,"byte_end":9009086,"line_start":267,"line_end":267,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3036},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009363,"byte_end":9009376,"line_start":276,"line_end":276,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009186,"byte_end":9009250,"line_start":272,"line_end":272,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009255,"byte_end":9009258,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009263,"byte_end":9009334,"line_start":274,"line_end":274,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009339,"byte_end":9009351,"line_start":275,"line_end":275,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009715,"byte_end":9009732,"line_start":285,"line_end":285,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009469,"byte_end":9009538,"line_start":280,"line_end":280,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009543,"byte_end":9009546,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009551,"byte_end":9009625,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009630,"byte_end":9009633,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009638,"byte_end":9009703,"line_start":284,"line_end":284,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010072,"byte_end":9010093,"line_start":296,"line_end":296,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009819,"byte_end":9009888,"line_start":289,"line_end":289,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009893,"byte_end":9009896,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009901,"byte_end":9009975,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009980,"byte_end":9009983,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9009988,"byte_end":9009998,"line_start":293,"line_end":293,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010003,"byte_end":9010006,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010011,"byte_end":9010060,"line_start":295,"line_end":295,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010436,"byte_end":9010452,"line_start":305,"line_end":305,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010194,"byte_end":9010262,"line_start":300,"line_end":300,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010267,"byte_end":9010270,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010275,"byte_end":9010348,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010353,"byte_end":9010356,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010361,"byte_end":9010424,"line_start":304,"line_end":304,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3040},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010931,"byte_end":9010951,"line_start":318,"line_end":318,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010537,"byte_end":9010605,"line_start":309,"line_end":309,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010610,"byte_end":9010613,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010618,"byte_end":9010688,"line_start":311,"line_end":311,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010693,"byte_end":9010767,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010772,"byte_end":9010834,"line_start":313,"line_end":313,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010839,"byte_end":9010842,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010847,"byte_end":9010857,"line_start":315,"line_end":315,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010862,"byte_end":9010865,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9010870,"byte_end":9010919,"line_start":317,"line_end":317,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011300,"byte_end":9011317,"line_start":327,"line_end":327,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011052,"byte_end":9011123,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011128,"byte_end":9011131,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011136,"byte_end":9011210,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011215,"byte_end":9011218,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011223,"byte_end":9011288,"line_start":326,"line_end":326,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3042},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011661,"byte_end":9011682,"line_start":338,"line_end":338,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011404,"byte_end":9011475,"line_start":331,"line_end":331,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011480,"byte_end":9011483,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011488,"byte_end":9011564,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011569,"byte_end":9011572,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011577,"byte_end":9011587,"line_start":335,"line_end":335,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011592,"byte_end":9011595,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011600,"byte_end":9011649,"line_start":337,"line_end":337,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3043},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011976,"byte_end":9011979,"line_start":347,"line_end":347,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011783,"byte_end":9011841,"line_start":342,"line_end":342,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011846,"byte_end":9011849,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011854,"byte_end":9011914,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011919,"byte_end":9011922,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9011927,"byte_end":9011964,"line_start":346,"line_end":346,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012236,"byte_end":9012243,"line_start":355,"line_end":355,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012051,"byte_end":9012109,"line_start":351,"line_end":351,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012114,"byte_end":9012117,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012122,"byte_end":9012198,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012203,"byte_end":9012224,"line_start":354,"line_end":354,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3045},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012761,"byte_end":9012778,"line_start":366,"line_end":366,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012331,"byte_end":9012389,"line_start":359,"line_end":359,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012394,"byte_end":9012397,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012402,"byte_end":9012476,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012481,"byte_end":9012554,"line_start":362,"line_end":362,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012559,"byte_end":9012631,"line_start":363,"line_end":363,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012636,"byte_end":9012706,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012711,"byte_end":9012749,"line_start":365,"line_end":365,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3046},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013243,"byte_end":9013260,"line_start":375,"line_end":375,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012927,"byte_end":9012987,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9012992,"byte_end":9012995,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013000,"byte_end":9013074,"line_start":372,"line_end":372,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013079,"byte_end":9013152,"line_start":373,"line_end":373,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013157,"byte_end":9013231,"line_start":374,"line_end":374,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013627,"byte_end":9013645,"line_start":384,"line_end":384,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013403,"byte_end":9013462,"line_start":379,"line_end":379,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013467,"byte_end":9013470,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013475,"byte_end":9013545,"line_start":381,"line_end":381,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013550,"byte_end":9013553,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013558,"byte_end":9013615,"line_start":383,"line_end":383,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9014021,"byte_end":9014039,"line_start":393,"line_end":393,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013795,"byte_end":9013856,"line_start":388,"line_end":388,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013861,"byte_end":9013864,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013869,"byte_end":9013939,"line_start":390,"line_end":390,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013944,"byte_end":9013947,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9013952,"byte_end":9014009,"line_start":392,"line_end":392,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3107},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9016674,"byte_end":9016682,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9016486,"byte_end":9016545,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9016546,"byte_end":9016549,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](method@Self::send_to) or [`send`](method@Self::send) to send","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9016550,"byte_end":9016630,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ datagrams.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9016631,"byte_end":9016645,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3112},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9016896,"byte_end":9016904,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9016701,"byte_end":9016760,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9016761,"byte_end":9016764,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](method@Self::recv_from) or [`recv`](method@Self::recv) to receive","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9016765,"byte_end":9016852,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ datagrams.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9016853,"byte_end":9016867,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3117},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9017251,"byte_end":9017263,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9017117,"byte_end":9017199,"line_start":45,"line_end":45,"column_start":1,"column_end":83}},{"value":"/ not be `reunite`d.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9017200,"byte_end":9017222,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3119},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9017264,"byte_end":9017276,"line_start":48,"line_end":48,"column_start":25,"column_end":37},"name":"0","qualname":"::net::udp::split::ReuniteError::0","value":"net::udp::split::SendHalf","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3120},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9017278,"byte_end":9017290,"line_start":48,"line_end":48,"column_start":39,"column_end":51},"name":"1","qualname":"::net::udp::split::ReuniteError::1","value":"net::udp::split::RecvHalf","parent":{"krate":0,"index":3117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9018300,"byte_end":9018307,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"pub fn reunite(Self, SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9018085,"byte_end":9018156,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9018161,"byte_end":9018227,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9018232,"byte_end":9018288,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9018798,"byte_end":9018807,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9018408,"byte_end":9018487,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9018492,"byte_end":9018559,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9018564,"byte_end":9018567,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9018572,"byte_end":9018650,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9018655,"byte_end":9018733,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9018738,"byte_end":9018780,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019587,"byte_end":9019591,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9018942,"byte_end":9019021,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019026,"byte_end":9019110,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019115,"byte_end":9019147,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019152,"byte_end":9019155,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019160,"byte_end":9019241,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019246,"byte_end":9019329,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019334,"byte_end":9019368,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019373,"byte_end":9019376,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019381,"byte_end":9019464,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019469,"byte_end":9019514,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019519,"byte_end":9019522,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019527,"byte_end":9019569,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019940,"byte_end":9019947,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"pub fn reunite(Self, RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019725,"byte_end":9019796,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019801,"byte_end":9019867,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019872,"byte_end":9019928,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9020339,"byte_end":9020346,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<'_, '_, '_>(&'_ mut Self, &'_ [u8], &'_ SocketAddr)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9020048,"byte_end":9020120,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9020125,"byte_end":9020196,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9020201,"byte_end":9020204,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9020209,"byte_end":9020285,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9020290,"byte_end":9020321,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3092},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9020898,"byte_end":9020902,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9020490,"byte_end":9020588,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9020593,"byte_end":9020664,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9020669,"byte_end":9020672,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9020677,"byte_end":9020760,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9020765,"byte_end":9020825,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9020830,"byte_end":9020833,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9020838,"byte_end":9020880,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":3123},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":3124},{"krate":0,"index":3283},{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":11538},{"krate":0,"index":3416},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3509}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}},{"value":"/ Unix domain socket utility types","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":9021210,"byte_end":9021246,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":3124},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"datagram","qualname":"::net::unix::datagram","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":3202},{"krate":0,"index":3232},{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":11440}],"decl_id":null,"docs":" Unix datagram types.\n","sig":null,"attributes":[{"value":"/ Unix datagram types.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/mod.rs","byte_start":9021604,"byte_end":9021628,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3513},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9022326,"byte_end":9022338,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::socket::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":3514}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3151},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9022495,"byte_end":9022499,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9022422,"byte_end":9022483,"line_start":23,"line_end":23,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3153},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9022962,"byte_end":9022966,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9022682,"byte_end":9022731,"line_start":32,"line_end":32,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9022736,"byte_end":9022739,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9022744,"byte_end":9022815,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9022820,"byte_end":9022890,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9022895,"byte_end":9022950,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3154},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9023792,"byte_end":9023800,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixDatagram` in the standard library and returns a\n nonblocking `UnixDatagram` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixDatagram` in the standard library and returns a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9023177,"byte_end":9023244,"line_start":45,"line_end":45,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixDatagram` from this crate.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9023249,"byte_end":9023296,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9023301,"byte_end":9023304,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The returned datagram will be associated with the given event loop","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9023309,"byte_end":9023379,"line_start":48,"line_end":48,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9023384,"byte_end":9023438,"line_start":49,"line_end":49,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9023443,"byte_end":9023446,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9023451,"byte_end":9023463,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9023468,"byte_end":9023471,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9023476,"byte_end":9023536,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9023541,"byte_end":9023544,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9023549,"byte_end":9023619,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9023624,"byte_end":9023697,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9023702,"byte_end":9023780,"line_start":57,"line_end":57,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3156},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9024251,"byte_end":9024258,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9024172,"byte_end":9024239,"line_start":69,"line_end":69,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3157},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9024611,"byte_end":9024618,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9024392,"byte_end":9024441,"line_start":75,"line_end":75,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9024446,"byte_end":9024449,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9024454,"byte_end":9024526,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9024531,"byte_end":9024599,"line_start":78,"line_end":78,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3159},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9024790,"byte_end":9024794,"line_start":84,"line_end":84,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9024722,"byte_end":9024772,"line_start":83,"line_end":83,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025638,"byte_end":9025646,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UnixDatagram>::try_send","value":"pub fn try_send(&mut Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9024909,"byte_end":9024964,"line_start":88,"line_end":88,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9024969,"byte_end":9024972,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9024977,"byte_end":9024984,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9024989,"byte_end":9025009,"line_start":91,"line_end":91,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025014,"byte_end":9025079,"line_start":92,"line_end":92,"column_start":5,"column_end":70}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025084,"byte_end":9025117,"line_start":93,"line_end":93,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025122,"byte_end":9025125,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"bytes\";","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025130,"byte_end":9025155,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/ // We use a socket pair so that they are assigned","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025160,"byte_end":9025213,"line_start":96,"line_end":96,"column_start":5,"column_end":58}},{"value":"/ // each other as a peer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025218,"byte_end":9025246,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/ let (mut first, mut second) = UnixDatagram::pair()?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025251,"byte_end":9025307,"line_start":98,"line_end":98,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025312,"byte_end":9025315,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let size = first.try_send(bytes)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025320,"byte_end":9025358,"line_start":100,"line_end":100,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(size, bytes.len());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025363,"byte_end":9025397,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025402,"byte_end":9025405,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = vec![0u8; 24];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025410,"byte_end":9025445,"line_start":103,"line_end":103,"column_start":5,"column_end":40}},{"value":"/ let size = second.try_recv(&mut buffer)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025450,"byte_end":9025495,"line_start":104,"line_end":104,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025500,"byte_end":9025503,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buffer.as_slice()[..size];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025508,"byte_end":9025551,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025556,"byte_end":9025585,"line_start":107,"line_end":107,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025590,"byte_end":9025602,"line_start":108,"line_end":108,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025607,"byte_end":9025614,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025619,"byte_end":9025626,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026870,"byte_end":9026881,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UnixDatagram>::try_send_to","value":"pub fn try_send_to<P>(&mut Self, &[u8], P) -> io::Result<usize> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025740,"byte_end":9025795,"line_start":115,"line_end":115,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025800,"byte_end":9025803,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025808,"byte_end":9025815,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025820,"byte_end":9025840,"line_start":118,"line_end":118,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025845,"byte_end":9025910,"line_start":119,"line_end":119,"column_start":5,"column_end":70}},{"value":"/ use {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025915,"byte_end":9025924,"line_start":120,"line_end":120,"column_start":5,"column_end":14}},{"value":"/     tokio::net::UnixDatagram,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025929,"byte_end":9025962,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/     tempfile::tempdir,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025967,"byte_end":9025993,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9025998,"byte_end":9026004,"line_start":123,"line_end":123,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026009,"byte_end":9026012,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"bytes\";","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026017,"byte_end":9026042,"line_start":125,"line_end":125,"column_start":5,"column_end":30}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026047,"byte_end":9026101,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026106,"byte_end":9026165,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir().unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026170,"byte_end":9026203,"line_start":128,"line_end":128,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026208,"byte_end":9026211,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let server_path = tmp.path().join(\"server\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026216,"byte_end":9026264,"line_start":130,"line_end":130,"column_start":5,"column_end":53}},{"value":"/ let mut server = UnixDatagram::bind(&server_path)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026269,"byte_end":9026324,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026329,"byte_end":9026332,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let client_path = tmp.path().join(\"client\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026337,"byte_end":9026385,"line_start":133,"line_end":133,"column_start":5,"column_end":53}},{"value":"/ let mut client = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026390,"byte_end":9026445,"line_start":134,"line_end":134,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026450,"byte_end":9026453,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let size = client.try_send_to(bytes, &server_path)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026458,"byte_end":9026514,"line_start":136,"line_end":136,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(size, bytes.len());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026519,"byte_end":9026553,"line_start":137,"line_end":137,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026558,"byte_end":9026561,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = vec![0u8; 24];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026566,"byte_end":9026601,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/ let (size, addr) = server.try_recv_from(&mut buffer)?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026606,"byte_end":9026664,"line_start":140,"line_end":140,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026669,"byte_end":9026672,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buffer.as_slice()[..size];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026677,"byte_end":9026720,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026725,"byte_end":9026754,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(addr.as_pathname().unwrap(), &client_path);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026759,"byte_end":9026817,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026822,"byte_end":9026834,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026839,"byte_end":9026846,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9026851,"byte_end":9026858,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3167},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9028118,"byte_end":9028122,"line_start":182,"line_end":182,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9028066,"byte_end":9028100,"line_start":181,"line_end":181,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9028313,"byte_end":9028321,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnixDatagram>::try_recv","value":"pub fn try_recv(&mut Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a datagram from the peer without waiting.\n","sig":null,"attributes":[{"value":"/ Try to receive a datagram from the peer without waiting.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9028241,"byte_end":9028301,"line_start":186,"line_end":186,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3173},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9028978,"byte_end":9028985,"line_start":208,"line_end":208,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9028906,"byte_end":9028960,"line_start":207,"line_end":207,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3179},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9029706,"byte_end":9029715,"line_start":233,"line_end":233,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9029654,"byte_end":9029688,"line_start":232,"line_end":232,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9029921,"byte_end":9029934,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UnixDatagram>::try_recv_from","value":"pub fn try_recv_from(&mut Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the socket without waiting.\n","sig":null,"attributes":[{"value":"/ Try to receive data from the socket without waiting.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9029853,"byte_end":9029909,"line_start":237,"line_end":237,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9030640,"byte_end":9030650,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9030569,"byte_end":9030628,"line_start":258,"line_end":258,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3186},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9030866,"byte_end":9030875,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9030736,"byte_end":9030782,"line_start":263,"line_end":263,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9030787,"byte_end":9030790,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9030795,"byte_end":9030854,"line_start":265,"line_end":265,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031019,"byte_end":9031029,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9030960,"byte_end":9031007,"line_start":270,"line_end":270,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3188},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031403,"byte_end":9031411,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031122,"byte_end":9031188,"line_start":275,"line_end":275,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031193,"byte_end":9031196,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031201,"byte_end":9031269,"line_start":277,"line_end":277,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031274,"byte_end":9031344,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031349,"byte_end":9031391,"line_start":279,"line_end":279,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032043,"byte_end":9032048,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixDatagram>::split","value":"pub fn split<'a>(&'a mut Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixDatagram` into a receive half and a send half, which can be used\n to receive and send the datagram concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031642,"byte_end":9031678,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/ Split a `UnixDatagram` into a receive half and a send half, which can be used","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031683,"byte_end":9031764,"line_start":287,"line_end":287,"column_start":5,"column_end":86}},{"value":"/ to receive and send the datagram concurrently.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031769,"byte_end":9031819,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031824,"byte_end":9031827,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031832,"byte_end":9031908,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ be moved into independently spawned tasks.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031913,"byte_end":9031959,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031964,"byte_end":9031967,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: fn@crate::net::UnixDatagram::into_split","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9031972,"byte_end":9032031,"line_start":293,"line_end":293,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3191},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032708,"byte_end":9032718,"line_start":309,"line_end":309,"column_start":12,"column_end":22},"name":"into_split","qualname":"<UnixDatagram>::into_split","value":"pub fn into_split(Self) -> (OwnedRecvHalf, OwnedSendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixDatagram` into a receive half and a send half, which can be used\n to receive and send the datagram concurrently.","sig":null,"attributes":[{"value":"/ Split a `UnixDatagram` into a receive half and a send half, which can be used","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032132,"byte_end":9032213,"line_start":298,"line_end":298,"column_start":5,"column_end":86}},{"value":"/ to receive and send the datagram concurrently.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032218,"byte_end":9032268,"line_start":299,"line_end":299,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032273,"byte_end":9032276,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032281,"byte_end":9032351,"line_start":301,"line_end":301,"column_start":5,"column_end":75}},{"value":"/ however this comes at the cost of a heap allocation.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032356,"byte_end":9032412,"line_start":302,"line_end":302,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032417,"byte_end":9032420,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032425,"byte_end":9032499,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/ datagram. This is equivalent to calling [`shutdown(Write)`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032504,"byte_end":9032568,"line_start":305,"line_end":305,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032573,"byte_end":9032576,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ [`split`]: fn@crate::net::UnixDatagram::split","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032581,"byte_end":9032630,"line_start":307,"line_end":307,"column_start":5,"column_end":54}},{"value":"/ [`shutdown(Write)`]:fn@crate::net::UnixDatagram::shutdown","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032635,"byte_end":9032696,"line_start":308,"line_end":308,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3515},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034333,"byte_end":9034341,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::unix::datagram::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed receive half of a [`UnixDatagram`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed receive half of a [`UnixDatagram`], created by [`split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034146,"byte_end":9034216,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034217,"byte_end":9034220,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034221,"byte_end":9034255,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"/ [`split`]: crate::net::UnixDatagram::split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034256,"byte_end":9034304,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3522},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034550,"byte_end":9034558,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::unix::datagram::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed send half of a [`UnixDatagram`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed send half of a [`UnixDatagram`], created by [`split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034366,"byte_end":9034433,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034434,"byte_end":9034437,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034438,"byte_end":9034472,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/ [`split`]: crate::net::UnixDatagram::split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034473,"byte_end":9034521,"line_start":23,"line_end":23,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034788,"byte_end":9034797,"line_start":33,"line_end":33,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034736,"byte_end":9034770,"line_start":32,"line_end":32,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3214},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034989,"byte_end":9034993,"line_start":38,"line_end":38,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034937,"byte_end":9034971,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3219},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9035208,"byte_end":9035215,"line_start":45,"line_end":45,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9035136,"byte_end":9035190,"line_start":44,"line_end":44,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9035480,"byte_end":9035484,"line_start":53,"line_end":53,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9035412,"byte_end":9035462,"line_start":52,"line_end":52,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3529},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9036699,"byte_end":9036712,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedSendHalf","qualname":"::net::unix::datagram::split_owned::OwnedSendHalf","value":"OwnedSendHalf {  }","parent":null,"children":[{"krate":0,"index":3530},{"krate":0,"index":3531}],"decl_id":null,"docs":" Owned send half of a [`UnixDatagram`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned send half of a [`UnixDatagram`], created by [`into_split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9036515,"byte_end":9036584,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9036585,"byte_end":9036588,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9036589,"byte_end":9036623,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9036624,"byte_end":9036670,"line_start":32,"line_end":32,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3534},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9036963,"byte_end":9036976,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"OwnedRecvHalf","qualname":"::net::unix::datagram::split_owned::OwnedRecvHalf","value":"OwnedRecvHalf {  }","parent":null,"children":[{"krate":0,"index":3535}],"decl_id":null,"docs":" Owned receive half of a [`UnixDatagram`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned receive half of a [`UnixDatagram`], created by [`into_split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9036776,"byte_end":9036848,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9036849,"byte_end":9036852,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9036853,"byte_end":9036887,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9036888,"byte_end":9036934,"line_start":42,"line_end":42,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3538},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9037146,"byte_end":9037158,"line_start":51,"line_end":51,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::unix::datagram::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9037012,"byte_end":9037094,"line_start":48,"line_end":48,"column_start":1,"column_end":83}},{"value":"/ not be `reunite`d.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9037095,"byte_end":9037117,"line_start":49,"line_end":49,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3540},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9037159,"byte_end":9037176,"line_start":51,"line_end":51,"column_start":25,"column_end":42},"name":"0","qualname":"::net::unix::datagram::split_owned::ReuniteError::0","value":"net::unix::datagram::split_owned::OwnedSendHalf","parent":{"krate":0,"index":3538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3541},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9037178,"byte_end":9037195,"line_start":51,"line_end":51,"column_start":44,"column_end":61},"name":"1","qualname":"::net::unix::datagram::split_owned::ReuniteError::1","value":"net::unix::datagram::split_owned::OwnedRecvHalf","parent":{"krate":0,"index":3538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038305,"byte_end":9038312,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedRecvHalf>::reunite","value":"pub fn reunite(Self, OwnedSendHalf) -> Result<UnixDatagram, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UnixDatagram` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UnixDatagram` back together and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038032,"byte_end":9038106,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038111,"byte_end":9038177,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038182,"byte_end":9038234,"line_start":80,"line_end":80,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038239,"byte_end":9038242,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038247,"byte_end":9038293,"line_start":82,"line_end":82,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038473,"byte_end":9038482,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<OwnedRecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038421,"byte_end":9038455,"line_start":87,"line_end":87,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3254},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038678,"byte_end":9038682,"line_start":93,"line_end":93,"column_start":18,"column_end":22},"name":"recv","qualname":"<OwnedRecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038626,"byte_end":9038660,"line_start":92,"line_end":92,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9039103,"byte_end":9039110,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedSendHalf>::reunite","value":"pub fn reunite(Self, OwnedRecvHalf) -> Result<UnixDatagram, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UnixDatagram` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UnixDatagram` back together and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038830,"byte_end":9038904,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038909,"byte_end":9038975,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038980,"byte_end":9039032,"line_start":101,"line_end":101,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9039037,"byte_end":9039040,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: UnixDatagram::into_split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9039045,"byte_end":9039091,"line_start":103,"line_end":103,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3260},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9039291,"byte_end":9039298,"line_start":109,"line_end":109,"column_start":18,"column_end":25},"name":"send_to","qualname":"<OwnedSendHalf>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9039219,"byte_end":9039273,"line_start":108,"line_end":108,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9039567,"byte_end":9039571,"line_start":117,"line_end":117,"column_start":18,"column_end":22},"name":"send","qualname":"<OwnedSendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9039499,"byte_end":9039549,"line_start":116,"line_end":116,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9039892,"byte_end":9039898,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSendHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the send half, but don't close the send half of the stream\n until the receive half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the send half, but don't close the send half of the stream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9039692,"byte_end":9039762,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/ until the receive half is dropped. If the read half has already been","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9039767,"byte_end":9039839,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9039844,"byte_end":9039880,"line_start":123,"line_end":123,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3544},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":9040591,"byte_end":9040599,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::unix::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3546}],"decl_id":null,"docs":" Stream of listeners\n","sig":null,"attributes":[{"value":"/ Stream of listeners","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":9040490,"byte_end":9040513,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":9040531,"byte_end":9040579,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3294},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":9041108,"byte_end":9041119,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<UnixStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `UnixStream` by polling inner `UnixListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `UnixStream` by polling inner `UnixListener` to accept","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":9040779,"byte_end":9040854,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ connection.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":9040859,"byte_end":9040874,"line_start":20,"line_end":20,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":9040879,"byte_end":9040882,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If `UnixListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":9040887,"byte_end":9040957,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ current task will be notified by a waker.  Otherwise `Poll::Ready` with","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":9040962,"byte_end":9041037,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `Result` containing `UnixStream` will be returned.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":9041042,"byte_end":9041096,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3550},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9043445,"byte_end":9043457,"line_start":49,"line_end":49,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":3551}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9043956,"byte_end":9043960,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9043541,"byte_end":9043602,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9043607,"byte_end":9043610,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9043615,"byte_end":9043627,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9043632,"byte_end":9043635,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9043640,"byte_end":9043700,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9043705,"byte_end":9043708,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9043713,"byte_end":9043783,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9043788,"byte_end":9043861,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9043866,"byte_end":9043944,"line_start":63,"line_end":63,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9044804,"byte_end":9044812,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixListener` in the standard library and returns a\n nonblocking `UnixListener` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixListener` in the standard library and returns a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9044189,"byte_end":9044256,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixListener` from this crate.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9044261,"byte_end":9044308,"line_start":74,"line_end":74,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9044313,"byte_end":9044316,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The returned listener will be associated with the given event loop","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9044321,"byte_end":9044391,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9044396,"byte_end":9044450,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9044455,"byte_end":9044458,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9044463,"byte_end":9044475,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9044480,"byte_end":9044483,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9044488,"byte_end":9044548,"line_start":81,"line_end":81,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9044553,"byte_end":9044556,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9044561,"byte_end":9044631,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9044636,"byte_end":9044709,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9044714,"byte_end":9044792,"line_start":85,"line_end":85,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3323},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9045099,"byte_end":9045109,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9045033,"byte_end":9045087,"line_start":92,"line_end":92,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3324},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9045254,"byte_end":9045264,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9045195,"byte_end":9045242,"line_start":97,"line_end":97,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3325},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9045430,"byte_end":9045436,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9045357,"byte_end":9045412,"line_start":102,"line_end":102,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9045764,"byte_end":9045775,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<UnixListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(UnixStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9045550,"byte_end":9045613,"line_start":107,"line_end":107,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9045618,"byte_end":9045621,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9045626,"byte_end":9045698,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ the current task will be notified by a waker.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9045703,"byte_end":9045752,"line_start":110,"line_end":110,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9048105,"byte_end":9048113,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9046741,"byte_end":9046815,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9046820,"byte_end":9046823,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that `UnixListener` also directly implements `Stream`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9046828,"byte_end":9046891,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9046896,"byte_end":9046899,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9046904,"byte_end":9046980,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9046985,"byte_end":9047054,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047059,"byte_end":9047088,"line_start":147,"line_end":147,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047093,"byte_end":9047096,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047101,"byte_end":9047113,"line_start":149,"line_end":149,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047118,"byte_end":9047121,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047126,"byte_end":9047201,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047206,"byte_end":9047281,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047286,"byte_end":9047360,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047365,"byte_end":9047440,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047445,"byte_end":9047453,"line_start":155,"line_end":155,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047458,"byte_end":9047461,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047466,"byte_end":9047480,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047485,"byte_end":9047488,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047493,"byte_end":9047506,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047511,"byte_end":9047544,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047549,"byte_end":9047582,"line_start":161,"line_end":161,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047587,"byte_end":9047590,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047595,"byte_end":9047613,"line_start":163,"line_end":163,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047618,"byte_end":9047639,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/     let mut listener = UnixListener::bind(\"/path/to/the/socket\").unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047644,"byte_end":9047722,"line_start":165,"line_end":165,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047727,"byte_end":9047774,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047779,"byte_end":9047782,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047787,"byte_end":9047843,"line_start":168,"line_end":168,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047848,"byte_end":9047874,"line_start":169,"line_end":169,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047879,"byte_end":9047910,"line_start":170,"line_end":170,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047915,"byte_end":9047959,"line_start":171,"line_end":171,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047964,"byte_end":9047981,"line_start":172,"line_end":172,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9047986,"byte_end":9048039,"line_start":173,"line_end":173,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9048044,"byte_end":9048057,"line_start":174,"line_end":174,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9048062,"byte_end":9048071,"line_start":175,"line_end":175,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9048076,"byte_end":9048081,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9048086,"byte_end":9048093,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3552},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050584,"byte_end":9050592,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050163,"byte_end":9050228,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050229,"byte_end":9050232,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050233,"byte_end":9050321,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050322,"byte_end":9050399,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050400,"byte_end":9050403,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050404,"byte_end":9050434,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050435,"byte_end":9050469,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050470,"byte_end":9050521,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050522,"byte_end":9050555,"line_start":28,"line_end":28,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3559},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9051302,"byte_end":9051311,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050615,"byte_end":9050681,"line_start":32,"line_end":32,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050682,"byte_end":9050685,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050686,"byte_end":9050772,"line_start":34,"line_end":34,"column_start":1,"column_end":87}},{"value":"/ shut down the UnixStream stream in the write direction.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050773,"byte_end":9050832,"line_start":35,"line_end":35,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050833,"byte_end":9050836,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050837,"byte_end":9050918,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9050919,"byte_end":9051004,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9051005,"byte_end":9051008,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9051009,"byte_end":9051039,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9051040,"byte_end":9051074,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9051075,"byte_end":9051122,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9051123,"byte_end":9051185,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9051186,"byte_end":9051239,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9051240,"byte_end":9051273,"line_start":45,"line_end":45,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3566},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053611,"byte_end":9053624,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::unix::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3567}],"decl_id":null,"docs":" Owned read half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053148,"byte_end":9053215,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053216,"byte_end":9053219,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053220,"byte_end":9053307,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053308,"byte_end":9053392,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053393,"byte_end":9053396,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053397,"byte_end":9053439,"line_start":27,"line_end":27,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053440,"byte_end":9053496,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053497,"byte_end":9053548,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053549,"byte_end":9053582,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3570},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9054458,"byte_end":9054472,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::unix::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3571},{"krate":0,"index":3572}],"decl_id":null,"docs":" Owned write half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053658,"byte_end":9053726,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053727,"byte_end":9053730,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053731,"byte_end":9053795,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/ [`poll_shutdown`] will shut down the stream in the write direction.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053796,"byte_end":9053867,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ Dropping the write half will also shut down the write half of the stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053868,"byte_end":9053945,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053946,"byte_end":9053949,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9053950,"byte_end":9054030,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ found on the [`AsyncWriteExt`] trait. Examples import this trait through","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9054031,"byte_end":9054107,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ [the prelude].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9054108,"byte_end":9054126,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9054127,"byte_end":9054130,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9054131,"byte_end":9054173,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9054174,"byte_end":9054230,"line_start":47,"line_end":47,"column_start":1,"column_end":57}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9054231,"byte_end":9054278,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9054279,"byte_end":9054341,"line_start":49,"line_end":49,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9054342,"byte_end":9054395,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9054396,"byte_end":9054429,"line_start":51,"line_end":51,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3575},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055441,"byte_end":9055453,"line_start":87,"line_end":87,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::unix::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055309,"byte_end":9055391,"line_start":84,"line_end":84,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055392,"byte_end":9055412,"line_start":85,"line_end":85,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3577},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055454,"byte_end":9055471,"line_start":87,"line_end":87,"column_start":25,"column_end":42},"name":"0","qualname":"::net::unix::split_owned::ReuniteError::0","value":"net::unix::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3578},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055473,"byte_end":9055491,"line_start":87,"line_end":87,"column_start":44,"column_end":62},"name":"1","qualname":"::net::unix::split_owned::ReuniteError::1","value":"net::unix::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9056051,"byte_end":9056058,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055774,"byte_end":9055844,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055849,"byte_end":9055913,"line_start":102,"line_end":102,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055918,"byte_end":9055970,"line_start":103,"line_end":103,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055975,"byte_end":9055978,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055983,"byte_end":9056039,"line_start":105,"line_end":105,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9056799,"byte_end":9056806,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9056522,"byte_end":9056592,"line_start":126,"line_end":126,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9056597,"byte_end":9056661,"line_start":127,"line_end":127,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9056666,"byte_end":9056718,"line_start":128,"line_end":128,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9056723,"byte_end":9056726,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9056731,"byte_end":9056787,"line_start":130,"line_end":130,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9057112,"byte_end":9057118,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9056913,"byte_end":9056985,"line_start":135,"line_end":135,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9056990,"byte_end":9057059,"line_start":136,"line_end":136,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9057064,"byte_end":9057100,"line_start":137,"line_end":137,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3581},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9059208,"byte_end":9059218,"line_start":24,"line_end":24,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":3582}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23638,"byte_end":23672,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3453},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9059540,"byte_end":9059547,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9059298,"byte_end":9059341,"line_start":30,"line_end":30,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9059346,"byte_end":9059349,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9059354,"byte_end":9059425,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9059430,"byte_end":9059506,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9059511,"byte_end":9059522,"line_start":34,"line_end":34,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3458},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060432,"byte_end":9060440,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixStream` in the standard library and returns a\n nonblocking `UnixStream` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixStream` in the standard library and returns a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9059823,"byte_end":9059888,"line_start":46,"line_end":46,"column_start":5,"column_end":70}},{"value":"/ nonblocking `UnixStream` from this crate.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9059893,"byte_end":9059938,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9059943,"byte_end":9059946,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be associated with the given event loop","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9059951,"byte_end":9060019,"line_start":49,"line_end":49,"column_start":5,"column_end":73}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060024,"byte_end":9060078,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060083,"byte_end":9060086,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060091,"byte_end":9060103,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060108,"byte_end":9060111,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060116,"byte_end":9060176,"line_start":54,"line_end":54,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060181,"byte_end":9060184,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060189,"byte_end":9060259,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060264,"byte_end":9060337,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060342,"byte_end":9060420,"line_start":58,"line_end":58,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3459},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060924,"byte_end":9060928,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060644,"byte_end":9060693,"line_start":66,"line_end":66,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060698,"byte_end":9060701,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060706,"byte_end":9060777,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060782,"byte_end":9060852,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9060857,"byte_end":9060912,"line_start":70,"line_end":70,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3461},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9061369,"byte_end":9061379,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9061289,"byte_end":9061357,"line_start":84,"line_end":84,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3462},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9061546,"byte_end":9061555,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9061465,"byte_end":9061534,"line_start":89,"line_end":89,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9061734,"byte_end":9061743,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"pub fn peer_cred(&Self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9061640,"byte_end":9061722,"line_start":94,"line_end":94,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3464},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9061879,"byte_end":9061889,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9061820,"byte_end":9061867,"line_start":99,"line_end":99,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062263,"byte_end":9062271,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9061982,"byte_end":9062048,"line_start":104,"line_end":104,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062053,"byte_end":9062056,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062061,"byte_end":9062129,"line_start":106,"line_end":106,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062134,"byte_end":9062204,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062209,"byte_end":9062251,"line_start":108,"line_end":108,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3466},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062874,"byte_end":9062879,"line_start":123,"line_end":123,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062502,"byte_end":9062538,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062543,"byte_end":9062620,"line_start":116,"line_end":116,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062625,"byte_end":9062671,"line_start":117,"line_end":117,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062676,"byte_end":9062679,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062684,"byte_end":9062763,"line_start":119,"line_end":119,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062768,"byte_end":9062811,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062816,"byte_end":9062819,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: Self::into_split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062824,"byte_end":9062862,"line_start":122,"line_end":122,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3468},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9063511,"byte_end":9063521,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"into_split","qualname":"<UnixStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9062964,"byte_end":9063042,"line_start":127,"line_end":127,"column_start":5,"column_end":83}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9063047,"byte_end":9063093,"line_start":128,"line_end":128,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9063098,"byte_end":9063101,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9063106,"byte_end":9063184,"line_start":130,"line_end":130,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9063189,"byte_end":9063237,"line_start":131,"line_end":131,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9063242,"byte_end":9063245,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9063250,"byte_end":9063324,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ stream. This is equivalent to calling [`shutdown(Write)`] on the `UnixStream`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9063329,"byte_end":9063411,"line_start":134,"line_end":134,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9063416,"byte_end":9063419,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ [`split`]: Self::split()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9063424,"byte_end":9063452,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/ [`shutdown(Write)`]: fn@Self::shutdown","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9063457,"byte_end":9063499,"line_start":137,"line_end":137,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3583},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":9067105,"byte_end":9067110,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred { uid, gid }","parent":null,"children":[{"krate":0,"index":3584},{"krate":0,"index":3585}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":9067014,"byte_end":9067042,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3584},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":9067158,"byte_end":9067161,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"name":"uid","qualname":"::net::unix::ucred::UCred::uid","value":"u32","parent":{"krate":0,"index":3583},"children":[],"decl_id":null,"docs":" UID (user ID) of the process\n","sig":null,"attributes":[{"value":"/ UID (user ID) of the process","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":9067117,"byte_end":9067149,"line_start":6,"line_end":6,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3585},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":9067216,"byte_end":9067219,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"gid","qualname":"::net::unix::ucred::UCred::gid","value":"u32","parent":{"krate":0,"index":3583},"children":[],"decl_id":null,"docs":" GID (group ID) of the process\n","sig":null,"attributes":[{"value":"/ GID (group ID) of the process","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/ucred.rs","byte_start":9067174,"byte_end":9067207,"line_start":8,"line_end":8,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":552},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":93907,"byte_end":93913,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":93844,"byte_end":93897,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":553},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":93966,"byte_end":93971,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":93928,"byte_end":93956,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":564},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":3704},{"krate":0,"index":3705},{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3708}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":105933,"byte_end":105951,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":105953,"byte_end":106000,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106001,"byte_end":106004,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106005,"byte_end":106081,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106082,"byte_end":106159,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106160,"byte_end":106212,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106213,"byte_end":106216,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106217,"byte_end":106224,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #![allow(warnings)]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106225,"byte_end":106250,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106251,"byte_end":106277,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106278,"byte_end":106285,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106286,"byte_end":106289,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/prelude.rs","byte_start":106290,"byte_end":106364,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":570},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":3719},{"krate":0,"index":3810},{"krate":0,"index":3811},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":691},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":4379},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":4380},{"krate":0,"index":4384},{"krate":0,"index":4386},{"krate":0,"index":4393},{"krate":0,"index":732},{"krate":0,"index":733}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106576,"byte_end":106598,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106599,"byte_end":106602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106603,"byte_end":106668,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ runtime support. In particular, the following runtime services are","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106669,"byte_end":106739,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ necessary:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106740,"byte_end":106754,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106755,"byte_end":106758,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106759,"byte_end":106837,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106838,"byte_end":106895,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106896,"byte_end":106966,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":106967,"byte_end":107039,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107040,"byte_end":107043,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107044,"byte_end":107124,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, most","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107125,"byte_end":107198,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107199,"byte_end":107273,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107274,"byte_end":107352,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the hood.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107353,"byte_end":107366,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107367,"byte_end":107370,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107371,"byte_end":107382,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107383,"byte_end":107386,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107387,"byte_end":107454,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107455,"byte_end":107458,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107459,"byte_end":107472,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107473,"byte_end":107505,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107506,"byte_end":107532,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107533,"byte_end":107536,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107537,"byte_end":107555,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107556,"byte_end":107619,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107620,"byte_end":107690,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107691,"byte_end":107694,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107695,"byte_end":107709,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107710,"byte_end":107769,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107770,"byte_end":107773,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107774,"byte_end":107811,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107812,"byte_end":107852,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107853,"byte_end":107856,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107857,"byte_end":107937,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107938,"byte_end":107960,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":107961,"byte_end":108024,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108025,"byte_end":108065,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108066,"byte_end":108116,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108117,"byte_end":108152,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108153,"byte_end":108188,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108189,"byte_end":108271,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108272,"byte_end":108307,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108308,"byte_end":108333,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108334,"byte_end":108356,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108357,"byte_end":108360,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108361,"byte_end":108403,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108404,"byte_end":108476,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108477,"byte_end":108554,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108555,"byte_end":108586,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108587,"byte_end":108608,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108609,"byte_end":108626,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108627,"byte_end":108642,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108643,"byte_end":108652,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108653,"byte_end":108658,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108659,"byte_end":108666,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108667,"byte_end":108670,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108671,"byte_end":108749,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108750,"byte_end":108828,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108829,"byte_end":108890,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108891,"byte_end":108894,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108895,"byte_end":108948,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108949,"byte_end":108952,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108953,"byte_end":108966,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":108967,"byte_end":108999,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109000,"byte_end":109026,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109027,"byte_end":109059,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109060,"byte_end":109063,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109064,"byte_end":109121,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109122,"byte_end":109151,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/     let mut rt = Runtime::new()?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109152,"byte_end":109189,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109190,"byte_end":109193,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109194,"byte_end":109224,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109225,"byte_end":109252,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109253,"byte_end":109327,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109328,"byte_end":109331,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109332,"byte_end":109350,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109351,"byte_end":109414,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109415,"byte_end":109418,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109419,"byte_end":109460,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109461,"byte_end":109505,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109506,"byte_end":109509,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109510,"byte_end":109594,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109595,"byte_end":109621,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109622,"byte_end":109689,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109690,"byte_end":109734,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109735,"byte_end":109789,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109790,"byte_end":109829,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109830,"byte_end":109869,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109870,"byte_end":109956,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109957,"byte_end":109996,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":109997,"byte_end":110026,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110027,"byte_end":110053,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110054,"byte_end":110057,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110058,"byte_end":110104,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110105,"byte_end":110181,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110182,"byte_end":110263,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110264,"byte_end":110299,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110300,"byte_end":110325,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110326,"byte_end":110347,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110348,"byte_end":110367,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110368,"byte_end":110381,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110382,"byte_end":110392,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110393,"byte_end":110398,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110399,"byte_end":110406,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110407,"byte_end":110410,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110411,"byte_end":110440,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110441,"byte_end":110444,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110445,"byte_end":110523,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110524,"byte_end":110600,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110601,"byte_end":110643,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110644,"byte_end":110647,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ #### Basic Scheduler","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110648,"byte_end":110672,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110673,"byte_end":110676,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110677,"byte_end":110756,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ will be created and executed on the current thread. The basic scheduler","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110757,"byte_end":110832,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110833,"byte_end":110903,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"/ [`Builder::basic_scheduler`] method:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110904,"byte_end":110944,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110945,"byte_end":110952,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110953,"byte_end":110976,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110977,"byte_end":110980,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":110981,"byte_end":111040,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111041,"byte_end":111083,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/     .basic_scheduler()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111084,"byte_end":111110,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/     .build()?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111111,"byte_end":111129,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111130,"byte_end":111144,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111145,"byte_end":111152,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111153,"byte_end":111156,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111157,"byte_end":111222,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111223,"byte_end":111293,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111294,"byte_end":111297,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ #### Threaded Scheduler","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111298,"byte_end":111325,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111326,"byte_end":111329,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111330,"byte_end":111401,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111402,"byte_end":111480,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111481,"byte_end":111560,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111561,"byte_end":111645,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111646,"byte_end":111726,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111727,"byte_end":111734,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111735,"byte_end":111758,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111759,"byte_end":111762,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111763,"byte_end":111822,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Builder::new()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111823,"byte_end":111868,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111869,"byte_end":111898,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"/     .build()?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111899,"byte_end":111917,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111918,"byte_end":111932,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111933,"byte_end":111940,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111941,"byte_end":111944,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":111945,"byte_end":112025,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"/ threaded scheduler runtime by default.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112026,"byte_end":112068,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112069,"byte_end":112072,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112073,"byte_end":112150,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ use-cases, such as when running only a single thread is required.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112151,"byte_end":112220,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112221,"byte_end":112224,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112225,"byte_end":112250,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112251,"byte_end":112254,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112255,"byte_end":112329,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112330,"byte_end":112410,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112411,"byte_end":112490,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112491,"byte_end":112570,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112571,"byte_end":112640,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112641,"byte_end":112644,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112645,"byte_end":112679,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112680,"byte_end":112683,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112684,"byte_end":112763,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112764,"byte_end":112832,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112833,"byte_end":112895,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112896,"byte_end":112899,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112900,"byte_end":112978,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":112979,"byte_end":113058,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113059,"byte_end":113117,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113118,"byte_end":113121,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113122,"byte_end":113146,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113147,"byte_end":113171,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113172,"byte_end":113206,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113207,"byte_end":113245,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113246,"byte_end":113292,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113293,"byte_end":113343,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113344,"byte_end":113418,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113419,"byte_end":113499,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113500,"byte_end":113562,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113563,"byte_end":113629,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":113630,"byte_end":113694,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4257},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9096769,"byte_end":9096778,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":4258}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3903},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9096954,"byte_end":9096963,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"pub fn cancelled() -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9096929,"byte_end":9096942,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097181,"byte_end":9097186,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"pub fn panic(Box<Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097156,"byte_end":9097169,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097516,"byte_end":9097528,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097436,"byte_end":9097504,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098034,"byte_end":9098042,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097655,"byte_end":9097717,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097722,"byte_end":9097725,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097730,"byte_end":9097744,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097749,"byte_end":9097752,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097757,"byte_end":9097764,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097769,"byte_end":9097788,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097793,"byte_end":9097796,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097801,"byte_end":9097819,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097824,"byte_end":9097845,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097850,"byte_end":9097888,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097893,"byte_end":9097920,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097925,"byte_end":9097955,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097960,"byte_end":9097963,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9097968,"byte_end":9098000,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098005,"byte_end":9098010,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098015,"byte_end":9098022,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3909},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098949,"byte_end":9098959,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098168,"byte_end":9098247,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098252,"byte_end":9098255,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098260,"byte_end":9098272,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098277,"byte_end":9098280,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098285,"byte_end":9098359,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098364,"byte_end":9098439,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098444,"byte_end":9098502,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098507,"byte_end":9098510,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098515,"byte_end":9098529,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098534,"byte_end":9098537,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098542,"byte_end":9098561,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098566,"byte_end":9098585,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098590,"byte_end":9098593,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098598,"byte_end":9098616,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098621,"byte_end":9098642,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098647,"byte_end":9098685,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098690,"byte_end":9098717,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098722,"byte_end":9098752,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098757,"byte_end":9098760,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098765,"byte_end":9098792,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098797,"byte_end":9098845,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098850,"byte_end":9098901,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098906,"byte_end":9098915,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098920,"byte_end":9098925,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9098930,"byte_end":9098937,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3910},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099724,"byte_end":9099738,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099100,"byte_end":9099169,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099174,"byte_end":9099246,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099251,"byte_end":9099264,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099269,"byte_end":9099272,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099277,"byte_end":9099291,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099296,"byte_end":9099299,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099304,"byte_end":9099323,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099328,"byte_end":9099347,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099352,"byte_end":9099355,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099360,"byte_end":9099378,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099383,"byte_end":9099404,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099409,"byte_end":9099447,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099452,"byte_end":9099479,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099484,"byte_end":9099514,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099519,"byte_end":9099522,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099527,"byte_end":9099577,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099582,"byte_end":9099630,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099635,"byte_end":9099676,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099681,"byte_end":9099690,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099695,"byte_end":9099700,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099705,"byte_end":9099712,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4259},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9116104,"byte_end":9116114,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":4261},{"krate":0,"index":4262}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":600},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129918,"byte_end":129925,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129090,"byte_end":129148,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129149,"byte_end":129152,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129153,"byte_end":129225,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129226,"byte_end":129274,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129275,"byte_end":129278,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129279,"byte_end":129344,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129345,"byte_end":129348,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129349,"byte_end":129426,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129427,"byte_end":129440,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129441,"byte_end":129444,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129445,"byte_end":129478,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new`]: method@Self::new","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129479,"byte_end":129517,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129518,"byte_end":129521,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129522,"byte_end":129536,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129537,"byte_end":129540,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129541,"byte_end":129548,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129549,"byte_end":129581,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129582,"byte_end":129585,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129586,"byte_end":129601,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129602,"byte_end":129626,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129627,"byte_end":129663,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129664,"byte_end":129697,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129698,"byte_end":129726,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129727,"byte_end":129769,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129770,"byte_end":129817,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129818,"byte_end":129838,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129839,"byte_end":129861,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129862,"byte_end":129865,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129866,"byte_end":129892,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129893,"byte_end":129898,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":129899,"byte_end":129906,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131080,"byte_end":131083,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130906,"byte_end":130978,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130983,"byte_end":130994,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130999,"byte_end":131002,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131007,"byte_end":131068,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132287,"byte_end":132297,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131773,"byte_end":131811,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131816,"byte_end":131819,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131824,"byte_end":131895,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131900,"byte_end":131976,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":131981,"byte_end":132035,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132040,"byte_end":132043,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132048,"byte_end":132062,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132067,"byte_end":132070,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132075,"byte_end":132082,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132087,"byte_end":132110,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132115,"byte_end":132118,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132123,"byte_end":132159,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132164,"byte_end":132193,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132198,"byte_end":132219,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132224,"byte_end":132240,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132245,"byte_end":132263,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132268,"byte_end":132275,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132852,"byte_end":132863,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"pub fn num_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132474,"byte_end":132547,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132552,"byte_end":132630,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132635,"byte_end":132638,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132643,"byte_end":132718,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132723,"byte_end":132758,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132763,"byte_end":132766,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132771,"byte_end":132840,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133572,"byte_end":133584,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"pub fn core_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":132965,"byte_end":133040,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133045,"byte_end":133048,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133053,"byte_end":133130,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133135,"byte_end":133170,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133175,"byte_end":133178,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133183,"byte_end":133252,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133257,"byte_end":133260,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133265,"byte_end":133317,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133322,"byte_end":133325,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133330,"byte_end":133344,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133349,"byte_end":133352,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133357,"byte_end":133364,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133369,"byte_end":133392,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133397,"byte_end":133400,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133405,"byte_end":133441,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133446,"byte_end":133475,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133480,"byte_end":133504,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133509,"byte_end":133525,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133530,"byte_end":133548,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133553,"byte_end":133560,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134463,"byte_end":134474,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"pub fn max_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133745,"byte_end":133801,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133806,"byte_end":133809,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133814,"byte_end":133891,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133896,"byte_end":133978,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":133983,"byte_end":134053,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134058,"byte_end":134061,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134066,"byte_end":134146,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134151,"byte_end":134154,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134159,"byte_end":134188,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134193,"byte_end":134196,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134201,"byte_end":134286,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134291,"byte_end":134294,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134299,"byte_end":134388,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134393,"byte_end":134451,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134998,"byte_end":135009,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134628,"byte_end":134692,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134697,"byte_end":134700,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134705,"byte_end":134752,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134757,"byte_end":134760,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134765,"byte_end":134779,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134784,"byte_end":134787,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134792,"byte_end":134799,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134804,"byte_end":134829,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134834,"byte_end":134837,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134842,"byte_end":134863,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134868,"byte_end":134904,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134909,"byte_end":134940,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134945,"byte_end":134962,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134967,"byte_end":134974,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":134979,"byte_end":134986,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135733,"byte_end":135750,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135123,"byte_end":135177,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135182,"byte_end":135185,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135190,"byte_end":135262,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135267,"byte_end":135300,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135305,"byte_end":135308,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135313,"byte_end":135381,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135386,"byte_end":135447,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135452,"byte_end":135455,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135460,"byte_end":135474,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135479,"byte_end":135482,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135487,"byte_end":135494,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135499,"byte_end":135524,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135529,"byte_end":135532,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135537,"byte_end":135558,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135563,"byte_end":135599,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135604,"byte_end":135633,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135638,"byte_end":135675,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135680,"byte_end":135697,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135702,"byte_end":135709,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135714,"byte_end":135721,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136391,"byte_end":136406,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135857,"byte_end":135932,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135937,"byte_end":135952,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135957,"byte_end":135960,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":135965,"byte_end":136027,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136032,"byte_end":136035,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136040,"byte_end":136054,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136059,"byte_end":136062,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136067,"byte_end":136074,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136079,"byte_end":136104,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136109,"byte_end":136112,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136117,"byte_end":136138,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136143,"byte_end":136184,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136189,"byte_end":136218,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136223,"byte_end":136252,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136257,"byte_end":136296,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136301,"byte_end":136311,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136316,"byte_end":136333,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136338,"byte_end":136345,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136350,"byte_end":136357,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136362,"byte_end":136379,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137057,"byte_end":137071,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136567,"byte_end":136618,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136623,"byte_end":136626,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136631,"byte_end":136693,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136698,"byte_end":136701,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136706,"byte_end":136720,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136725,"byte_end":136728,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136733,"byte_end":136740,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136745,"byte_end":136770,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136775,"byte_end":136778,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136783,"byte_end":136804,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136809,"byte_end":136850,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136855,"byte_end":136884,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136889,"byte_end":136917,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136922,"byte_end":136962,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136967,"byte_end":136977,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":136982,"byte_end":136999,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137004,"byte_end":137011,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137016,"byte_end":137023,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137028,"byte_end":137045,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137617,"byte_end":137622,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137232,"byte_end":137269,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137274,"byte_end":137277,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137282,"byte_end":137345,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137350,"byte_end":137353,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137358,"byte_end":137372,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137377,"byte_end":137380,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137385,"byte_end":137392,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137397,"byte_end":137429,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137434,"byte_end":137437,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137442,"byte_end":137491,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137496,"byte_end":137499,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137504,"byte_end":137527,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137532,"byte_end":137581,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137586,"byte_end":137593,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":137598,"byte_end":137605,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4295},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139247,"byte_end":139256,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4297},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139767,"byte_end":139778,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4299},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":140391,"byte_end":140406,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"pub fn basic_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4337},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151388,"byte_end":151394,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4340},{"krate":0,"index":4341},{"krate":0,"index":4342}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151119,"byte_end":151145,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151146,"byte_end":151149,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151150,"byte_end":151238,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151239,"byte_end":151289,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151290,"byte_end":151293,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151294,"byte_end":151352,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152931,"byte_end":152936,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151758,"byte_end":151833,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151838,"byte_end":151916,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151921,"byte_end":151989,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151994,"byte_end":151997,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152002,"byte_end":152060,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152065,"byte_end":152068,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152073,"byte_end":152113,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152118,"byte_end":152165,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152170,"byte_end":152227,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152232,"byte_end":152269,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152274,"byte_end":152277,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152282,"byte_end":152295,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152300,"byte_end":152303,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152308,"byte_end":152315,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152320,"byte_end":152352,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152357,"byte_end":152360,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152365,"byte_end":152407,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152412,"byte_end":152478,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152483,"byte_end":152516,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152521,"byte_end":152553,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152558,"byte_end":152569,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152574,"byte_end":152579,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152584,"byte_end":152587,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152592,"byte_end":152607,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152612,"byte_end":152653,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152658,"byte_end":152699,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152704,"byte_end":152707,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152712,"byte_end":152755,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152760,"byte_end":152763,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152768,"byte_end":152843,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152848,"byte_end":152897,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152902,"byte_end":152907,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":152912,"byte_end":152919,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154406,"byte_end":154413,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153054,"byte_end":153118,"line_start":79,"line_end":79,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153123,"byte_end":153126,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153131,"byte_end":153142,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153147,"byte_end":153150,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153155,"byte_end":153249,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153254,"byte_end":153346,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153351,"byte_end":153427,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153432,"byte_end":153435,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153440,"byte_end":153454,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153459,"byte_end":153462,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153467,"byte_end":153549,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153554,"byte_end":153600,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153605,"byte_end":153608,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153613,"byte_end":153620,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153625,"byte_end":153647,"line_start":93,"line_end":93,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153652,"byte_end":153686,"line_start":94,"line_end":94,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153691,"byte_end":153707,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153712,"byte_end":153751,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153756,"byte_end":153778,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153783,"byte_end":153814,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153819,"byte_end":153822,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153827,"byte_end":153868,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153873,"byte_end":153908,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153913,"byte_end":153937,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":153942,"byte_end":153998,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154003,"byte_end":154010,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154015,"byte_end":154018,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154023,"byte_end":154041,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154046,"byte_end":154073,"line_start":107,"line_end":107,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154078,"byte_end":154163,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/     handle.block_on(async { /* ... */ })","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154168,"byte_end":154212,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154217,"byte_end":154262,"line_start":110,"line_end":110,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154267,"byte_end":154310,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154315,"byte_end":154322,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154327,"byte_end":154356,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154361,"byte_end":154370,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154375,"byte_end":154382,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154387,"byte_end":154394,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154715,"byte_end":154726,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154522,"byte_end":154582,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154587,"byte_end":154590,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154595,"byte_end":154646,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154651,"byte_end":154654,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154659,"byte_end":154703,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4348},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":156251,"byte_end":156256,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4350},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":160375,"byte_end":160383,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":668},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164175,"byte_end":164190,"line_start":357,"line_end":357,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164095,"byte_end":164163,"line_start":356,"line_end":356,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4380},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115599,"byte_end":115606,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":4383}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114582,"byte_end":114604,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114605,"byte_end":114608,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114609,"byte_end":114686,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114687,"byte_end":114738,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114739,"byte_end":114742,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114743,"byte_end":114823,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114824,"byte_end":114909,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114910,"byte_end":114913,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114914,"byte_end":114973,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114974,"byte_end":114977,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114978,"byte_end":114992,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114993,"byte_end":114996,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":114997,"byte_end":115076,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115077,"byte_end":115136,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115137,"byte_end":115140,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115141,"byte_end":115179,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115180,"byte_end":115231,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115232,"byte_end":115255,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115256,"byte_end":115259,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115260,"byte_end":115332,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115333,"byte_end":115406,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115407,"byte_end":115430,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115431,"byte_end":115434,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115435,"byte_end":115459,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115460,"byte_end":115481,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: method@Self::new","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115482,"byte_end":115511,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115512,"byte_end":115543,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":115544,"byte_end":115570,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117827,"byte_end":117830,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116420,"byte_end":116488,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116493,"byte_end":116496,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116501,"byte_end":116567,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116572,"byte_end":116645,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116650,"byte_end":116721,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116726,"byte_end":116801,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116806,"byte_end":116844,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116849,"byte_end":116852,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116857,"byte_end":116917,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116922,"byte_end":116996,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117001,"byte_end":117004,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117009,"byte_end":117085,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117090,"byte_end":117166,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117171,"byte_end":117237,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117242,"byte_end":117245,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117250,"byte_end":117309,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117314,"byte_end":117317,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117322,"byte_end":117336,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117341,"byte_end":117344,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117349,"byte_end":117412,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117417,"byte_end":117420,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117425,"byte_end":117432,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117437,"byte_end":117469,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117474,"byte_end":117477,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117482,"byte_end":117509,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117514,"byte_end":117532,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117537,"byte_end":117540,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117545,"byte_end":117570,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117575,"byte_end":117582,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117587,"byte_end":117590,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117595,"byte_end":117616,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117621,"byte_end":117650,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117655,"byte_end":117710,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117715,"byte_end":117764,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":117769,"byte_end":117815,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119420,"byte_end":119425,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118240,"byte_end":118282,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118287,"byte_end":118290,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118295,"byte_end":118366,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118371,"byte_end":118446,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118451,"byte_end":118474,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118479,"byte_end":118482,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118487,"byte_end":118546,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118551,"byte_end":118554,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118559,"byte_end":118580,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118585,"byte_end":118588,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118593,"byte_end":118607,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118612,"byte_end":118615,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118620,"byte_end":118627,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118632,"byte_end":118664,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118669,"byte_end":118672,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118677,"byte_end":118693,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118698,"byte_end":118723,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118728,"byte_end":118765,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118770,"byte_end":118773,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118778,"byte_end":118816,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118821,"byte_end":118841,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118846,"byte_end":118897,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118902,"byte_end":118909,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118914,"byte_end":118921,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118926,"byte_end":118933,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118938,"byte_end":118941,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118946,"byte_end":118958,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118963,"byte_end":118966,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":118971,"byte_end":119044,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119049,"byte_end":119114,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119119,"byte_end":119180,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119185,"byte_end":119212,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119217,"byte_end":119220,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119225,"byte_end":119256,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119261,"byte_end":119319,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119324,"byte_end":119376,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119381,"byte_end":119408,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121046,"byte_end":121054,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&mut Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119827,"byte_end":119901,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119906,"byte_end":119922,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119927,"byte_end":119930,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":119935,"byte_end":120002,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120007,"byte_end":120080,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120085,"byte_end":120150,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120155,"byte_end":120158,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120163,"byte_end":120239,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120244,"byte_end":120310,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120315,"byte_end":120387,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120392,"byte_end":120415,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120420,"byte_end":120423,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120428,"byte_end":120491,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120496,"byte_end":120499,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120504,"byte_end":120516,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120521,"byte_end":120524,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120529,"byte_end":120607,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120612,"byte_end":120647,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120652,"byte_end":120655,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120660,"byte_end":120674,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120679,"byte_end":120682,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120687,"byte_end":120700,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120705,"byte_end":120737,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120742,"byte_end":120745,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120750,"byte_end":120775,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120780,"byte_end":120821,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120826,"byte_end":120829,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120834,"byte_end":120905,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120910,"byte_end":120933,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120938,"byte_end":120964,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120969,"byte_end":120976,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120981,"byte_end":120988,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":120993,"byte_end":120996,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121001,"byte_end":121034,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122576,"byte_end":122581,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121460,"byte_end":121535,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121540,"byte_end":121618,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121623,"byte_end":121691,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121696,"byte_end":121699,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121704,"byte_end":121761,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121766,"byte_end":121769,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121774,"byte_end":121814,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121819,"byte_end":121866,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121871,"byte_end":121926,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121931,"byte_end":121968,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121973,"byte_end":121976,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121981,"byte_end":121994,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":121999,"byte_end":122002,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122007,"byte_end":122014,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122019,"byte_end":122051,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122056,"byte_end":122059,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122064,"byte_end":122106,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122111,"byte_end":122173,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122178,"byte_end":122211,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122216,"byte_end":122248,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122253,"byte_end":122264,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122269,"byte_end":122274,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122279,"byte_end":122282,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122287,"byte_end":122302,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122307,"byte_end":122348,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122353,"byte_end":122356,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122361,"byte_end":122404,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122409,"byte_end":122412,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122417,"byte_end":122492,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122497,"byte_end":122542,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122547,"byte_end":122552,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122557,"byte_end":122564,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123168,"byte_end":123174,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122688,"byte_end":122733,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122738,"byte_end":122741,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122746,"byte_end":122830,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122835,"byte_end":122895,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122900,"byte_end":122903,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122908,"byte_end":122922,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122927,"byte_end":122930,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122935,"byte_end":122942,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122947,"byte_end":122979,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122984,"byte_end":122987,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":122992,"byte_end":123019,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123024,"byte_end":123042,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123047,"byte_end":123050,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123055,"byte_end":123084,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123089,"byte_end":123092,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123097,"byte_end":123144,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123149,"byte_end":123156,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124582,"byte_end":124598,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123227,"byte_end":123299,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123304,"byte_end":123325,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123330,"byte_end":123333,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123338,"byte_end":123413,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123418,"byte_end":123491,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123496,"byte_end":123573,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123578,"byte_end":123649,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123654,"byte_end":123657,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123662,"byte_end":123736,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123741,"byte_end":123815,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123820,"byte_end":123895,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123900,"byte_end":123976,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":123981,"byte_end":124026,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124031,"byte_end":124034,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124039,"byte_end":124053,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124058,"byte_end":124061,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124066,"byte_end":124073,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124078,"byte_end":124110,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124115,"byte_end":124135,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124140,"byte_end":124143,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124148,"byte_end":124168,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124173,"byte_end":124201,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124206,"byte_end":124209,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124214,"byte_end":124229,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124234,"byte_end":124283,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124288,"byte_end":124291,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124296,"byte_end":124332,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124337,"byte_end":124378,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124383,"byte_end":124441,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124446,"byte_end":124460,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124465,"byte_end":124475,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124480,"byte_end":124483,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124488,"byte_end":124548,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124553,"byte_end":124558,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124563,"byte_end":124570,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125907,"byte_end":125926,"line_start":577,"line_end":577,"column_start":12,"column_end":31},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, without waiting for any spawned tasks to shutdown.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124789,"byte_end":124865,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124870,"byte_end":124873,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This can be useful if you want to drop a runtime from within another runtime.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124878,"byte_end":124959,"line_start":553,"line_end":553,"column_start":5,"column_end":86}},{"value":"/ Normally, dropping a runtime will block indefinitely for spawned blocking tasks","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":124964,"byte_end":125047,"line_start":554,"line_end":554,"column_start":5,"column_end":88}},{"value":"/ to complete, which would normally not be permitted within an asynchronous context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125052,"byte_end":125138,"line_start":555,"line_end":555,"column_start":5,"column_end":91}},{"value":"/ By calling `shutdown_background()`, you can drop the runtime from such a context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125143,"byte_end":125228,"line_start":556,"line_end":556,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125233,"byte_end":125236,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Note however, that because we do not wait for any blocking tasks to complete, this","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125241,"byte_end":125327,"line_start":558,"line_end":558,"column_start":5,"column_end":91}},{"value":"/ may result in a resource leak (in that any blocking tasks are still running until they","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125332,"byte_end":125422,"line_start":559,"line_end":559,"column_start":5,"column_end":95}},{"value":"/ return.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125427,"byte_end":125438,"line_start":560,"line_end":560,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125443,"byte_end":125446,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `shutdown_timeout(Duration::of_nanos(0))`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125451,"byte_end":125536,"line_start":562,"line_end":562,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125541,"byte_end":125544,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125549,"byte_end":125556,"line_start":564,"line_end":564,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125561,"byte_end":125593,"line_start":565,"line_end":565,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125598,"byte_end":125601,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125606,"byte_end":125621,"line_start":567,"line_end":567,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125626,"byte_end":125675,"line_start":568,"line_end":568,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125680,"byte_end":125683,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125688,"byte_end":125724,"line_start":570,"line_end":570,"column_start":5,"column_end":41}},{"value":"/        let inner_runtime = Runtime::new().unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125729,"byte_end":125784,"line_start":571,"line_end":571,"column_start":5,"column_end":60}},{"value":"/        // ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125789,"byte_end":125806,"line_start":572,"line_end":572,"column_start":5,"column_end":22}},{"value":"/        inner_runtime.shutdown_background();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125811,"byte_end":125858,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/    });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125863,"byte_end":125873,"line_start":574,"line_end":574,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125878,"byte_end":125883,"line_start":575,"line_end":575,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":125888,"byte_end":125895,"line_start":576,"line_end":576,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4423},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","parent":null,"children":[{"krate":0,"index":4424},{"krate":0,"index":4431},{"krate":0,"index":4432},{"krate":0,"index":4480},{"krate":0,"index":4484}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":20854,"byte_end":20880,"line_start":210,"line_end":210,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":20955,"byte_end":20972,"line_start":212,"line_end":212,"column_start":13,"column_end":30}},{"value":"/ Asynchronous signal handling for Tokio","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9137674,"byte_end":9137716,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9137717,"byte_end":9137720,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9137721,"byte_end":9137798,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9137799,"byte_end":9137877,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9137878,"byte_end":9137958,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ to see if it's suitable.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9137959,"byte_end":9137987,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9137988,"byte_end":9137991,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9137992,"byte_end":9138067,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ specific structures, as well.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138068,"byte_end":9138101,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138102,"byte_end":9138105,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138106,"byte_end":9138120,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138121,"byte_end":9138124,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Print on \"ctrl-c\" notification.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138125,"byte_end":9138160,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138161,"byte_end":9138164,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138165,"byte_end":9138183,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138184,"byte_end":9138206,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138207,"byte_end":9138210,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138211,"byte_end":9138229,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138230,"byte_end":9138293,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/     signal::ctrl_c().await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138294,"byte_end":9138326,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/     println!(\"ctrl-c received!\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138327,"byte_end":9138364,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138365,"byte_end":9138379,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138380,"byte_end":9138385,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138386,"byte_end":9138393,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138394,"byte_end":9138397,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP on Unix","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138398,"byte_end":9138425,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138426,"byte_end":9138429,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138430,"byte_end":9138448,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138449,"byte_end":9138469,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138470,"byte_end":9138520,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138521,"byte_end":9138524,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138525,"byte_end":9138543,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138544,"byte_end":9138607,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138608,"byte_end":9138656,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138657,"byte_end":9138712,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138713,"byte_end":9138716,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138717,"byte_end":9138767,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138768,"byte_end":9138782,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138783,"byte_end":9138815,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138816,"byte_end":9138855,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138856,"byte_end":9138865,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138866,"byte_end":9138871,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138872,"byte_end":9138879,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9138880,"byte_end":9138887,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4428},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140963,"byte_end":9140969,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"pub async fn ctrl_c() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139261,"byte_end":9139327,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139328,"byte_end":9139331,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139332,"byte_end":9139409,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139410,"byte_end":9139488,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139489,"byte_end":9139538,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139539,"byte_end":9139542,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139543,"byte_end":9139619,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139620,"byte_end":9139698,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139699,"byte_end":9139737,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139738,"byte_end":9139741,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139742,"byte_end":9139755,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139756,"byte_end":9139759,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139760,"byte_end":9139842,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139843,"byte_end":9139923,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9139924,"byte_end":9140005,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140006,"byte_end":9140031,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140032,"byte_end":9140035,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140036,"byte_end":9140109,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140110,"byte_end":9140182,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140183,"byte_end":9140261,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140262,"byte_end":9140339,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140340,"byte_end":9140416,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140417,"byte_end":9140496,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140497,"byte_end":9140521,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140522,"byte_end":9140525,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140526,"byte_end":9140604,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140605,"byte_end":9140665,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140666,"byte_end":9140669,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140670,"byte_end":9140684,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140685,"byte_end":9140688,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140689,"byte_end":9140707,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140708,"byte_end":9140730,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140731,"byte_end":9140734,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140735,"byte_end":9140753,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140754,"byte_end":9140775,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140776,"byte_end":9140815,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140816,"byte_end":9140819,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140820,"byte_end":9140888,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140889,"byte_end":9140892,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140893,"byte_end":9140935,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140936,"byte_end":9140941,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/ctrl_c.rs","byte_start":9140942,"byte_end":9140949,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4484},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::signal::unix","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","parent":null,"children":[{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4490},{"krate":0,"index":4491},{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4495},{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4501},{"krate":0,"index":4502},{"krate":0,"index":4503},{"krate":0,"index":4504},{"krate":0,"index":4505},{"krate":0,"index":4506},{"krate":0,"index":4507},{"krate":0,"index":4508},{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4512},{"krate":0,"index":4513},{"krate":0,"index":4514},{"krate":0,"index":4515},{"krate":0,"index":4518},{"krate":0,"index":4579},{"krate":0,"index":4582},{"krate":0,"index":4525},{"krate":0,"index":4584},{"krate":0,"index":4590},{"krate":0,"index":4588},{"krate":0,"index":4587},{"krate":0,"index":4527},{"krate":0,"index":4540},{"krate":0,"index":4544},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":4592},{"krate":0,"index":4594},{"krate":0,"index":4551},{"krate":0,"index":4553},{"krate":0,"index":4596},{"krate":0,"index":4599},{"krate":0,"index":4557},{"krate":0,"index":4558},{"krate":0,"index":4601},{"krate":0,"index":4565}],"decl_id":null,"docs":" Unix-specific types for signal handling.","sig":null,"attributes":[{"value":"/ Unix-specific types for signal handling.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9150407,"byte_end":9150451,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9150452,"byte_end":9150455,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only defined on Unix platforms and contains the primary","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9150456,"byte_end":9150530,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ `Signal` type for receiving notifications of signals.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9150531,"byte_end":9150588,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"cfg(unix)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9150590,"byte_end":9150603,"line_start":6,"line_end":6,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4584},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9151918,"byte_end":9151928,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"SignalKind","qualname":"::signal::unix::SignalKind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the specific kind of signal to listen for.\n","sig":null,"attributes":[{"value":"/ Represents the specific kind of signal to listen for.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9151819,"byte_end":9151876,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4528},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152327,"byte_end":9152335,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<SignalKind>::from_raw","value":"pub fn from_raw(c_int) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows for listening to any valid OS signal.","sig":null,"attributes":[{"value":"/ Allows for listening to any valid OS signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9151960,"byte_end":9152008,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152013,"byte_end":9152016,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used for listening for platform-specific","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152021,"byte_end":9152090,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ signals.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152095,"byte_end":9152107,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152112,"byte_end":9152130,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use tokio::signal::unix::SignalKind;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152135,"byte_end":9152177,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ # let signum = -1;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152182,"byte_end":9152204,"line_start":70,"line_end":70,"column_start":5,"column_end":27}},{"value":"/ // let signum = libc::OS_SPECIFIC_SIGNAL;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152209,"byte_end":9152254,"line_start":71,"line_end":71,"column_start":5,"column_end":50}},{"value":"/ let kind = SignalKind::from_raw(signum);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152259,"byte_end":9152303,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152308,"byte_end":9152315,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4529},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152589,"byte_end":9152594,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"alarm","qualname":"<SignalKind>::alarm","value":"pub fn alarm() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGALRM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGALRM signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152393,"byte_end":9152427,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152432,"byte_end":9152435,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when a real-time timer has expired.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152440,"byte_end":9152515,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152520,"byte_end":9152577,"line_start":81,"line_end":81,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4530},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152836,"byte_end":9152841,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"child","qualname":"<SignalKind>::child","value":"pub fn child() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGCHLD signal.","sig":null,"attributes":[{"value":"/ Represents the SIGCHLD signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152646,"byte_end":9152680,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152685,"byte_end":9152688,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the status of a child process","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152693,"byte_end":9152767,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ has changed. By default, this signal is ignored.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152772,"byte_end":9152824,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4531},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9153087,"byte_end":9153093,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"hangup","qualname":"<SignalKind>::hangup","value":"pub fn hangup() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGHUP signal.","sig":null,"attributes":[{"value":"/ Represents the SIGHUP signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152893,"byte_end":9152926,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152931,"byte_end":9152934,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal is disconnected.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9152939,"byte_end":9153013,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9153018,"byte_end":9153075,"line_start":97,"line_end":97,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4532},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9153746,"byte_end":9153755,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<SignalKind>::interrupt","value":"pub fn interrupt() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINT signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9153563,"byte_end":9153596,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9153601,"byte_end":9153604,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to interrupt a program.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9153609,"byte_end":9153672,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9153677,"byte_end":9153734,"line_start":120,"line_end":120,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4533},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154004,"byte_end":9154006,"line_start":129,"line_end":129,"column_start":12,"column_end":14},"name":"io","qualname":"<SignalKind>::io","value":"pub fn io() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGIO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGIO signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9153806,"byte_end":9153838,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9153843,"byte_end":9153846,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when I/O operations are possible","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9153851,"byte_end":9153923,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ on some file descriptor. By default, this signal is ignored.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9153928,"byte_end":9153992,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4534},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154290,"byte_end":9154294,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"pipe","qualname":"<SignalKind>::pipe","value":"pub fn pipe() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGPIPE signal.","sig":null,"attributes":[{"value":"/ Represents the SIGPIPE signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154056,"byte_end":9154090,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154095,"byte_end":9154098,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the process attempts to write","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154103,"byte_end":9154177,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ to a pipe which has no reader. By default, the process is terminated by","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154182,"byte_end":9154257,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ this signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154262,"byte_end":9154278,"line_start":137,"line_end":137,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4535},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154597,"byte_end":9154601,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"quit","qualname":"<SignalKind>::quit","value":"pub fn quit() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGQUIT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGQUIT signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154346,"byte_end":9154380,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154385,"byte_end":9154388,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154393,"byte_end":9154459,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/ process, after which the OS will dump the process core.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154464,"byte_end":9154523,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154528,"byte_end":9154585,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4536},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154849,"byte_end":9154858,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"terminate","qualname":"<SignalKind>::terminate","value":"pub fn terminate() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGTERM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGTERM signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154653,"byte_end":9154687,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154692,"byte_end":9154695,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154700,"byte_end":9154766,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ process. By default, the process is terminated by this signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154771,"byte_end":9154837,"line_start":154,"line_end":154,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4537},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9155081,"byte_end":9155094,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"user_defined1","qualname":"<SignalKind>::user_defined1","value":"pub fn user_defined1() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR1 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR1 signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154910,"byte_end":9154944,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154949,"byte_end":9154952,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9154957,"byte_end":9155007,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9155012,"byte_end":9155069,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4538},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9155317,"byte_end":9155330,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"user_defined2","qualname":"<SignalKind>::user_defined2","value":"pub fn user_defined2() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR2 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR2 signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9155146,"byte_end":9155180,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9155185,"byte_end":9155188,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9155193,"byte_end":9155243,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9155248,"byte_end":9155305,"line_start":170,"line_end":170,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4539},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9155562,"byte_end":9155575,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"window_change","qualname":"<SignalKind>::window_change","value":"pub fn window_change() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGWINCH signal.","sig":null,"attributes":[{"value":"/ Represents the SIGWINCH signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9155382,"byte_end":9155417,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9155422,"byte_end":9155425,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal window is resized.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9155430,"byte_end":9155506,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ By default, this signal is ignored.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9155511,"byte_end":9155550,"line_start":178,"line_end":178,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4596},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162998,"byte_end":9163004,"line_start":378,"line_end":378,"column_start":12,"column_end":18},"name":"Signal","qualname":"::signal::unix::Signal","value":"Signal {  }","parent":null,"children":[{"krate":0,"index":4597},{"krate":0,"index":4598}],"decl_id":null,"docs":" A stream of events for receiving a particular type of OS signal.","sig":null,"attributes":[{"value":"/ A stream of events for receiving a particular type of OS signal.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9160233,"byte_end":9160301,"line_start":314,"line_end":314,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9160302,"byte_end":9160305,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ In general signal handling on Unix is a pretty tricky topic, and this","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9160306,"byte_end":9160379,"line_start":316,"line_end":316,"column_start":1,"column_end":74}},{"value":"/ structure is no exception! There are some important limitations to keep in","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9160380,"byte_end":9160458,"line_start":317,"line_end":317,"column_start":1,"column_end":79}},{"value":"/ mind when using `Signal` streams:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9160459,"byte_end":9160496,"line_start":318,"line_end":318,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9160497,"byte_end":9160500,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ * Signals handling in Unix already necessitates coalescing signals","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9160501,"byte_end":9160571,"line_start":320,"line_end":320,"column_start":1,"column_end":71}},{"value":"/   together sometimes. This `Signal` stream is also no exception here in","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9160572,"byte_end":9160647,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/   that it will also coalesce signals. That is, even if the signal handler","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9160648,"byte_end":9160725,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/   for this process runs multiple times, the `Signal` stream may only return","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9160726,"byte_end":9160805,"line_start":323,"line_end":323,"column_start":1,"column_end":80}},{"value":"/   one signal notification. Specifically, before `poll` is called, all","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9160806,"byte_end":9160879,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/   signal notifications are coalesced into one item returned from `poll`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9160880,"byte_end":9160956,"line_start":325,"line_end":325,"column_start":1,"column_end":77}},{"value":"/   Once `poll` has been called, however, a further signal is guaranteed to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9160957,"byte_end":9161034,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/   be yielded as an item.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161035,"byte_end":9161063,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161064,"byte_end":9161067,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/   Put another way, any element pulled off the returned stream corresponds to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161068,"byte_end":9161148,"line_start":329,"line_end":329,"column_start":1,"column_end":81}},{"value":"/   *at least one* signal, but possibly more.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161149,"byte_end":9161196,"line_start":330,"line_end":330,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161197,"byte_end":9161200,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ * Signal handling in general is relatively inefficient. Although some","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161201,"byte_end":9161274,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/   improvements are possible in this crate, it's recommended to not plan on","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161275,"byte_end":9161353,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/   having millions of signal channels open.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161354,"byte_end":9161400,"line_start":334,"line_end":334,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161401,"byte_end":9161404,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ If you've got any questions about this feel free to open an issue on the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161405,"byte_end":9161481,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ repo! New approaches to alleviate some of these limitations are always","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161482,"byte_end":9161556,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/ appreciated!","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161557,"byte_end":9161573,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161574,"byte_end":9161577,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161578,"byte_end":9161591,"line_start":340,"line_end":340,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161592,"byte_end":9161595,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ The first time that a `Signal` instance is registered for a particular","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161596,"byte_end":9161670,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ signal kind, an OS signal-handler is installed which replaces the default","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161671,"byte_end":9161748,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ platform behavior when that signal is received, **for the duration of the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161749,"byte_end":9161826,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/ entire process**.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161827,"byte_end":9161848,"line_start":345,"line_end":345,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161849,"byte_end":9161852,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161853,"byte_end":9161926,"line_start":347,"line_end":347,"column_start":1,"column_end":74}},{"value":"/ receives SIGINT. But, when a `Signal` instance is created to listen for","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9161927,"byte_end":9162002,"line_start":348,"line_end":348,"column_start":1,"column_end":76}},{"value":"/ this signal, the next SIGINT that arrives will be translated to a stream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162003,"byte_end":9162079,"line_start":349,"line_end":349,"column_start":1,"column_end":77}},{"value":"/ event, and the process will continue to execute. **Even if this `Signal`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162080,"byte_end":9162156,"line_start":350,"line_end":350,"column_start":1,"column_end":77}},{"value":"/ instance is dropped, subsequent SIGINT deliveries will end up captured by","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162157,"byte_end":9162234,"line_start":351,"line_end":351,"column_start":1,"column_end":78}},{"value":"/ Tokio, and the default platform behavior will NOT be reset**.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162235,"byte_end":9162300,"line_start":352,"line_end":352,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162301,"byte_end":9162304,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162305,"byte_end":9162383,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162384,"byte_end":9162444,"line_start":355,"line_end":355,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162445,"byte_end":9162448,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162449,"byte_end":9162463,"line_start":357,"line_end":357,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162464,"byte_end":9162467,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162468,"byte_end":9162487,"line_start":359,"line_end":359,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162488,"byte_end":9162491,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162492,"byte_end":9162510,"line_start":361,"line_end":361,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162511,"byte_end":9162561,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162562,"byte_end":9162565,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162566,"byte_end":9162584,"line_start":364,"line_end":364,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162585,"byte_end":9162648,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162649,"byte_end":9162697,"line_start":366,"line_end":366,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162698,"byte_end":9162753,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162754,"byte_end":9162757,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162758,"byte_end":9162808,"line_start":369,"line_end":369,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162809,"byte_end":9162823,"line_start":370,"line_end":370,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162824,"byte_end":9162856,"line_start":371,"line_end":371,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162857,"byte_end":9162896,"line_start":372,"line_end":372,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162897,"byte_end":9162906,"line_start":373,"line_end":373,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162907,"byte_end":9162912,"line_start":374,"line_end":374,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162913,"byte_end":9162920,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9162921,"byte_end":9162969,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4557},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164097,"byte_end":9164103,"line_start":405,"line_end":405,"column_start":8,"column_end":14},"name":"signal","qualname":"::signal::unix::signal","value":"pub fn signal(SignalKind) -> io::Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which will receive notifications when the current\n process receives the specified signal `kind`.","sig":null,"attributes":[{"value":"/ Creates a new stream which will receive notifications when the current","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163052,"byte_end":9163126,"line_start":383,"line_end":383,"column_start":1,"column_end":75}},{"value":"/ process receives the specified signal `kind`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163127,"byte_end":9163176,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163177,"byte_end":9163180,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ This function will create a new stream which binds to the default reactor.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163181,"byte_end":9163259,"line_start":386,"line_end":386,"column_start":1,"column_end":79}},{"value":"/ The `Signal` stream is an infinite stream which will receive","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163260,"byte_end":9163324,"line_start":387,"line_end":387,"column_start":1,"column_end":65}},{"value":"/ notifications whenever a signal is received. More documentation can be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163325,"byte_end":9163399,"line_start":388,"line_end":388,"column_start":1,"column_end":75}},{"value":"/ found on `Signal` itself, but to reiterate:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163400,"byte_end":9163447,"line_start":389,"line_end":389,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163448,"byte_end":9163451,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ * Signals may be coalesced beyond what the kernel already does.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163452,"byte_end":9163519,"line_start":391,"line_end":391,"column_start":1,"column_end":68}},{"value":"/ * Once a signal handler is registered with the process the underlying","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163520,"byte_end":9163593,"line_start":392,"line_end":392,"column_start":1,"column_end":74}},{"value":"/   libc signal handler is never unregistered.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163594,"byte_end":9163642,"line_start":393,"line_end":393,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163643,"byte_end":9163646,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ A `Signal` stream can be created for a particular signal number","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163647,"byte_end":9163714,"line_start":395,"line_end":395,"column_start":1,"column_end":68}},{"value":"/ multiple times. When a signal is received then all the associated","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163715,"byte_end":9163784,"line_start":396,"line_end":396,"column_start":1,"column_end":70}},{"value":"/ channels will receive the signal notification.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163785,"byte_end":9163835,"line_start":397,"line_end":397,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163836,"byte_end":9163839,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163840,"byte_end":9163852,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163853,"byte_end":9163856,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ * If the lower-level C functions fail for some reason.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163857,"byte_end":9163915,"line_start":401,"line_end":401,"column_start":1,"column_end":59}},{"value":"/ * If the previous initialization of this specific signal failed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163916,"byte_end":9163984,"line_start":402,"line_end":402,"column_start":1,"column_end":69}},{"value":"/ * If the signal is one of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9163985,"byte_end":9164014,"line_start":403,"line_end":403,"column_start":1,"column_end":30}},{"value":"/   [`signal_hook::FORBIDDEN`](fn@signal_hook_registry::register#panics)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164015,"byte_end":9164089,"line_start":404,"line_end":404,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4559},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165314,"byte_end":9165318,"line_start":447,"line_end":447,"column_start":18,"column_end":22},"name":"recv","qualname":"<Signal>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164607,"byte_end":9164655,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164660,"byte_end":9164663,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164668,"byte_end":9164740,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164745,"byte_end":9164748,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164753,"byte_end":9164767,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164772,"byte_end":9164775,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164780,"byte_end":9164799,"line_start":430,"line_end":430,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164804,"byte_end":9164807,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164812,"byte_end":9164830,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164835,"byte_end":9164885,"line_start":433,"line_end":433,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164890,"byte_end":9164893,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164898,"byte_end":9164916,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164921,"byte_end":9164984,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164989,"byte_end":9165037,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165042,"byte_end":9165097,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165102,"byte_end":9165105,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165110,"byte_end":9165160,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/     loop {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165165,"byte_end":9165179,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165184,"byte_end":9165216,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165221,"byte_end":9165260,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165265,"byte_end":9165274,"line_start":444,"line_end":444,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165279,"byte_end":9165284,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165289,"byte_end":9165296,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4564},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9166267,"byte_end":9166276,"line_start":480,"line_end":480,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Signal>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165440,"byte_end":9165510,"line_start":452,"line_end":452,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165515,"byte_end":9165535,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165540,"byte_end":9165543,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165548,"byte_end":9165620,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165625,"byte_end":9165628,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165633,"byte_end":9165647,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165652,"byte_end":9165655,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165660,"byte_end":9165706,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165711,"byte_end":9165714,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165719,"byte_end":9165737,"line_start":461,"line_end":461,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165742,"byte_end":9165764,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165769,"byte_end":9165797,"line_start":463,"line_end":463,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165802,"byte_end":9165837,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::unix::Signal;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165842,"byte_end":9165878,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165883,"byte_end":9165886,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165891,"byte_end":9165912,"line_start":467,"line_end":467,"column_start":5,"column_end":26}},{"value":"/     signal: Signal,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165917,"byte_end":9165940,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165945,"byte_end":9165950,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165955,"byte_end":9165958,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165963,"byte_end":9165993,"line_start":471,"line_end":471,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9165998,"byte_end":9166031,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9166036,"byte_end":9166039,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9166044,"byte_end":9166131,"line_start":474,"line_end":474,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9166136,"byte_end":9166177,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/         self.signal.poll_recv(cx)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9166182,"byte_end":9166219,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9166224,"byte_end":9166233,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9166238,"byte_end":9166243,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9166248,"byte_end":9166255,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4604},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":4605},{"krate":0,"index":4625},{"krate":0,"index":4626},{"krate":0,"index":4646},{"krate":0,"index":4647},{"krate":0,"index":4667},{"krate":0,"index":4668},{"krate":0,"index":4759},{"krate":0,"index":4760},{"krate":0,"index":4761},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4806},{"krate":0,"index":4807},{"krate":0,"index":4830},{"krate":0,"index":4831},{"krate":0,"index":4850},{"krate":0,"index":4851},{"krate":0,"index":4866},{"krate":0,"index":4867},{"krate":0,"index":4882},{"krate":0,"index":4883},{"krate":0,"index":4884},{"krate":0,"index":4885},{"krate":0,"index":4910},{"krate":0,"index":4911},{"krate":0,"index":4934},{"krate":0,"index":4935},{"krate":0,"index":4952},{"krate":0,"index":4953},{"krate":0,"index":4972},{"krate":0,"index":4973},{"krate":0,"index":4974},{"krate":0,"index":4975},{"krate":0,"index":4995},{"krate":0,"index":4996},{"krate":0,"index":4997},{"krate":0,"index":4998},{"krate":0,"index":5040},{"krate":0,"index":5041},{"krate":0,"index":5061},{"krate":0,"index":5062},{"krate":0,"index":5084},{"krate":0,"index":5085},{"krate":0,"index":5106},{"krate":0,"index":5107},{"krate":0,"index":5128},{"krate":0,"index":5129},{"krate":0,"index":5153},{"krate":0,"index":5268},{"krate":0,"index":5291},{"krate":0,"index":5292},{"krate":0,"index":5154},{"krate":0,"index":5155},{"krate":0,"index":5189},{"krate":0,"index":5191}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21086,"byte_end":21112,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"/ Stream utilities for Tokio.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9175446,"byte_end":9175477,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9175478,"byte_end":9175481,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9175482,"byte_end":9175627,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9175628,"byte_end":9175631,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides helpers to work with them.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9175632,"byte_end":9175683,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5192},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":9201364,"byte_end":9201373,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":5196},{"krate":0,"index":5197}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":9201210,"byte_end":9201267,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":9201285,"byte_end":9201352,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5203},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":9202527,"byte_end":9202536,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":5207},{"krate":0,"index":5208}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":9202373,"byte_end":9202430,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":9202448,"byte_end":9202515,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8090},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":9203656,"byte_end":9203661,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":8093},{"krate":0,"index":8094}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8052},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9204894,"byte_end":9204901,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":8055},{"krate":0,"index":8056}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4682},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205466,"byte_end":9205476,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205053,"byte_end":9205106,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205107,"byte_end":9205110,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205111,"byte_end":9205176,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205177,"byte_end":9205233,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205234,"byte_end":9205237,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205238,"byte_end":9205256,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205257,"byte_end":9205260,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205261,"byte_end":9205340,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205341,"byte_end":9205416,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205417,"byte_end":9205455,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":4753},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9210377,"byte_end":9210391,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":4755},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4755},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9210471,"byte_end":9210481,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":4753},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9210405,"byte_end":9210457,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4756},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9210533,"byte_end":9210543,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"pub fn initialize(usize, Option<usize>) -> Self::Collection","parent":{"krate":0,"index":4753},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9210492,"byte_end":9210521,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4757},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9210760,"byte_end":9210766,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"pub fn extend(&mut Self::Collection, T) -> bool","parent":{"krate":0,"index":4753},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9210610,"byte_end":9210658,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9210667,"byte_end":9210670,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9210679,"byte_end":9210748,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4758},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9210882,"byte_end":9210890,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"pub fn finalize(&mut Self::Collection) -> Self","parent":{"krate":0,"index":4753},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9210829,"byte_end":9210870,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":5214},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211183,"byte_end":9211188,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`](fn@empty) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`](fn@empty) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211057,"byte_end":9211105,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211123,"byte_end":9211171,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4774},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211778,"byte_end":9211783,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"pub const fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211313,"byte_end":9211354,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211355,"byte_end":9211358,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211359,"byte_end":9211427,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211428,"byte_end":9211504,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211505,"byte_end":9211515,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211516,"byte_end":9211519,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211520,"byte_end":9211534,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211535,"byte_end":9211538,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211539,"byte_end":9211555,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211556,"byte_end":9211559,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211560,"byte_end":9211567,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211568,"byte_end":9211609,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211610,"byte_end":9211613,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211614,"byte_end":9211632,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211633,"byte_end":9211654,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211655,"byte_end":9211701,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211702,"byte_end":9211705,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211706,"byte_end":9211750,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211751,"byte_end":9211756,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211757,"byte_end":9211764,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7996},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":9212366,"byte_end":9212372,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7999},{"krate":0,"index":8000}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7951},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":9213804,"byte_end":9213813,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7954},{"krate":0,"index":7955}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7902},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":9215230,"byte_end":9215240,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":7906},{"krate":0,"index":7907},{"krate":0,"index":7908}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7862},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":9216396,"byte_end":9216400,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7864}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5221},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217532,"byte_end":9217536,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5223}],"decl_id":null,"docs":" Stream for the [`iter`](fn@iter) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`](fn@iter) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217408,"byte_end":9217454,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217472,"byte_end":9217520,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4875},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9218110,"byte_end":9218114,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217588,"byte_end":9217652,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217653,"byte_end":9217681,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217682,"byte_end":9217685,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217686,"byte_end":9217759,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217760,"byte_end":9217815,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217816,"byte_end":9217819,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217820,"byte_end":9217827,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217828,"byte_end":9217850,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217851,"byte_end":9217892,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217893,"byte_end":9217896,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217897,"byte_end":9217945,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217946,"byte_end":9217949,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217950,"byte_end":9217996,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217997,"byte_end":9218043,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9218044,"byte_end":9218086,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9218087,"byte_end":9218094,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9218095,"byte_end":9218102,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7808},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":9218894,"byte_end":9218897,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7811},{"krate":0,"index":7812}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7759},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":9219967,"byte_end":9219972,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":7762},{"krate":0,"index":7763},{"krate":0,"index":7764}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5227},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":9221847,"byte_end":9221851,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":5230}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":9221691,"byte_end":9221750,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":9221768,"byte_end":9221835,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5235},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222547,"byte_end":9222551,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":5237}],"decl_id":null,"docs":" Stream for the [`once`](fn@once) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`](fn@once) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222423,"byte_end":9222469,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222487,"byte_end":9222535,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4965},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9223123,"byte_end":9223127,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222627,"byte_end":9222683,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222684,"byte_end":9222687,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222688,"byte_end":9222767,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222768,"byte_end":9222771,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222772,"byte_end":9222786,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222787,"byte_end":9222790,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222791,"byte_end":9222798,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222799,"byte_end":9222840,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222841,"byte_end":9222844,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222845,"byte_end":9222863,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222864,"byte_end":9222885,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222886,"byte_end":9222924,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222925,"byte_end":9222963,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222964,"byte_end":9222967,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222968,"byte_end":9223014,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9223015,"byte_end":9223018,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9223019,"byte_end":9223057,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9223058,"byte_end":9223101,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9223102,"byte_end":9223107,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9223108,"byte_end":9223115,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5241},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9223750,"byte_end":9223757,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`](fn@pending) function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`](fn@pending) function.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9223620,"byte_end":9223672,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9223690,"byte_end":9223738,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4988},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224497,"byte_end":9224504,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"pub const fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9223888,"byte_end":9223928,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9223929,"byte_end":9223932,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9223933,"byte_end":9223991,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9223992,"byte_end":9224063,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224064,"byte_end":9224133,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224134,"byte_end":9224178,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224179,"byte_end":9224182,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224183,"byte_end":9224197,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224198,"byte_end":9224201,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224202,"byte_end":9224218,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224219,"byte_end":9224222,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224223,"byte_end":9224236,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224237,"byte_end":9224278,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224279,"byte_end":9224282,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224283,"byte_end":9224301,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224302,"byte_end":9224323,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224324,"byte_end":9224373,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224374,"byte_end":9224377,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224378,"byte_end":9224413,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224414,"byte_end":9224441,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224442,"byte_end":9224445,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224446,"byte_end":9224469,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224470,"byte_end":9224475,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224476,"byte_end":9224483,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5248},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230153,"byte_end":9230162,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":5251}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9224921,"byte_end":9224997,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9224998,"byte_end":9225006,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225007,"byte_end":9225010,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225011,"byte_end":9225088,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225089,"byte_end":9225165,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225166,"byte_end":9225242,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225243,"byte_end":9225277,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225278,"byte_end":9225281,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225282,"byte_end":9225302,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225303,"byte_end":9225306,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225307,"byte_end":9225350,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225351,"byte_end":9225411,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225412,"byte_end":9225490,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225491,"byte_end":9225524,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225525,"byte_end":9225528,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225529,"byte_end":9225608,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225609,"byte_end":9225689,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225690,"byte_end":9225762,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225763,"byte_end":9225787,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225788,"byte_end":9225791,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225792,"byte_end":9225805,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225806,"byte_end":9225809,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225810,"byte_end":9225888,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225889,"byte_end":9225958,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9225959,"byte_end":9226038,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226039,"byte_end":9226070,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226071,"byte_end":9226074,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226075,"byte_end":9226095,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226096,"byte_end":9226099,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226100,"byte_end":9226177,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226178,"byte_end":9226255,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226256,"byte_end":9226333,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226334,"byte_end":9226408,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226409,"byte_end":9226487,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226488,"byte_end":9226565,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226566,"byte_end":9226587,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226588,"byte_end":9226591,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226592,"byte_end":9226649,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226650,"byte_end":9226681,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226682,"byte_end":9226705,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226706,"byte_end":9226744,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226745,"byte_end":9226748,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226749,"byte_end":9226763,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226764,"byte_end":9226767,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226768,"byte_end":9226841,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226842,"byte_end":9226845,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226846,"byte_end":9226853,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226854,"byte_end":9226900,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226901,"byte_end":9226927,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226928,"byte_end":9226931,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226932,"byte_end":9226950,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226951,"byte_end":9226972,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9226973,"byte_end":9227020,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227021,"byte_end":9227068,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227069,"byte_end":9227072,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227073,"byte_end":9227106,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227107,"byte_end":9227146,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227147,"byte_end":9227150,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227151,"byte_end":9227231,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227232,"byte_end":9227304,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227305,"byte_end":9227343,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227344,"byte_end":9227355,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227356,"byte_end":9227359,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227360,"byte_end":9227393,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227394,"byte_end":9227433,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227434,"byte_end":9227472,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227473,"byte_end":9227484,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227485,"byte_end":9227488,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227489,"byte_end":9227528,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227529,"byte_end":9227532,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227533,"byte_end":9227563,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227564,"byte_end":9227595,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227596,"byte_end":9227627,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227628,"byte_end":9227631,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227632,"byte_end":9227653,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227654,"byte_end":9227677,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227678,"byte_end":9227733,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227734,"byte_end":9227737,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227738,"byte_end":9227767,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227768,"byte_end":9227803,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227804,"byte_end":9227824,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227825,"byte_end":9227860,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227861,"byte_end":9227874,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227875,"byte_end":9227878,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227879,"byte_end":9227945,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227946,"byte_end":9227974,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227975,"byte_end":9227984,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227985,"byte_end":9227990,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227991,"byte_end":9227998,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9227999,"byte_end":9228002,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228003,"byte_end":9228081,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228082,"byte_end":9228158,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228159,"byte_end":9228199,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228200,"byte_end":9228203,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228204,"byte_end":9228281,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228282,"byte_end":9228319,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228320,"byte_end":9228323,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228324,"byte_end":9228337,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228338,"byte_end":9228392,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228393,"byte_end":9228396,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228397,"byte_end":9228415,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228416,"byte_end":9228437,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228438,"byte_end":9228460,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228461,"byte_end":9228466,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228467,"byte_end":9228470,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228471,"byte_end":9228521,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228522,"byte_end":9228577,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228578,"byte_end":9228608,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228609,"byte_end":9228614,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228615,"byte_end":9228618,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228619,"byte_end":9228695,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228696,"byte_end":9228762,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228763,"byte_end":9228807,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228808,"byte_end":9228838,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228839,"byte_end":9228844,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228845,"byte_end":9228848,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228849,"byte_end":9228867,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228868,"byte_end":9228889,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228890,"byte_end":9228934,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228935,"byte_end":9228938,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228939,"byte_end":9228989,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9228990,"byte_end":9229020,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229021,"byte_end":9229047,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229048,"byte_end":9229051,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229052,"byte_end":9229066,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229067,"byte_end":9229095,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229096,"byte_end":9229140,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229141,"byte_end":9229172,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229173,"byte_end":9229221,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229222,"byte_end":9229298,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229299,"byte_end":9229340,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229341,"byte_end":9229392,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229393,"byte_end":9229449,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229450,"byte_end":9229475,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229476,"byte_end":9229525,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229526,"byte_end":9229577,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229578,"byte_end":9229603,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229604,"byte_end":9229625,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229626,"byte_end":9229643,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229644,"byte_end":9229700,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229701,"byte_end":9229781,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229782,"byte_end":9229824,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229825,"byte_end":9229875,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229876,"byte_end":9229893,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229894,"byte_end":9229969,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9229970,"byte_end":9230046,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230047,"byte_end":9230077,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230078,"byte_end":9230091,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230092,"byte_end":9230101,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230102,"byte_end":9230107,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230108,"byte_end":9230115,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5009},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230635,"byte_end":9230638,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"pub fn new() -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230267,"byte_end":9230300,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230305,"byte_end":9230308,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230313,"byte_end":9230387,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230392,"byte_end":9230441,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230446,"byte_end":9230449,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230454,"byte_end":9230468,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230473,"byte_end":9230476,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230481,"byte_end":9230488,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230493,"byte_end":9230537,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230542,"byte_end":9230545,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230550,"byte_end":9230611,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230616,"byte_end":9230623,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5010},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231143,"byte_end":9231156,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230711,"byte_end":9230772,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230777,"byte_end":9230780,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230785,"byte_end":9230861,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230866,"byte_end":9230937,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230942,"byte_end":9230945,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230950,"byte_end":9230964,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230969,"byte_end":9230972,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230977,"byte_end":9230984,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230989,"byte_end":9231033,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231038,"byte_end":9231041,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231046,"byte_end":9231119,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231124,"byte_end":9231131,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5011},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231774,"byte_end":9231778,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"pub fn keys(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231287,"byte_end":9231348,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231353,"byte_end":9231356,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231361,"byte_end":9231400,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231405,"byte_end":9231408,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231413,"byte_end":9231427,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231432,"byte_end":9231435,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231440,"byte_end":9231447,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231452,"byte_end":9231496,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231501,"byte_end":9231504,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231509,"byte_end":9231544,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231549,"byte_end":9231552,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231557,"byte_end":9231595,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231600,"byte_end":9231631,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231636,"byte_end":9231667,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231672,"byte_end":9231675,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231680,"byte_end":9231707,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231712,"byte_end":9231740,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231745,"byte_end":9231750,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231755,"byte_end":9231762,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5014},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232362,"byte_end":9232368,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"pub fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231871,"byte_end":9231926,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231931,"byte_end":9231934,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231939,"byte_end":9231978,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231983,"byte_end":9231986,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9231991,"byte_end":9232005,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232010,"byte_end":9232013,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232018,"byte_end":9232025,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232030,"byte_end":9232074,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232079,"byte_end":9232082,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232087,"byte_end":9232122,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232127,"byte_end":9232130,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232135,"byte_end":9232173,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232178,"byte_end":9232209,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232214,"byte_end":9232245,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232250,"byte_end":9232253,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232258,"byte_end":9232290,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232295,"byte_end":9232328,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232333,"byte_end":9232338,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232343,"byte_end":9232350,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5017},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232968,"byte_end":9232978,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"pub fn values_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232461,"byte_end":9232524,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232529,"byte_end":9232532,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232537,"byte_end":9232580,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232585,"byte_end":9232588,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232593,"byte_end":9232607,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232612,"byte_end":9232615,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232620,"byte_end":9232627,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232632,"byte_end":9232676,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232681,"byte_end":9232684,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232689,"byte_end":9232724,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232729,"byte_end":9232732,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232737,"byte_end":9232775,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232780,"byte_end":9232811,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232816,"byte_end":9232847,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232852,"byte_end":9232855,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232860,"byte_end":9232896,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232901,"byte_end":9232934,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232939,"byte_end":9232944,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9232949,"byte_end":9232956,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5020},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233556,"byte_end":9233564,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233083,"byte_end":9233155,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233160,"byte_end":9233163,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233168,"byte_end":9233239,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233244,"byte_end":9233310,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233315,"byte_end":9233318,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233323,"byte_end":9233337,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233342,"byte_end":9233345,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233350,"byte_end":9233357,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233362,"byte_end":9233406,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233411,"byte_end":9233414,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233419,"byte_end":9233492,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233497,"byte_end":9233532,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233537,"byte_end":9233544,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5021},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233940,"byte_end":9233943,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233626,"byte_end":9233671,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233676,"byte_end":9233679,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233684,"byte_end":9233698,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233703,"byte_end":9233706,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233711,"byte_end":9233718,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233723,"byte_end":9233767,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233772,"byte_end":9233775,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233780,"byte_end":9233813,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233818,"byte_end":9233845,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233850,"byte_end":9233884,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233889,"byte_end":9233916,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9233921,"byte_end":9233928,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5022},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234294,"byte_end":9234302,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234000,"byte_end":9234051,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234056,"byte_end":9234059,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234064,"byte_end":9234078,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234083,"byte_end":9234086,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234091,"byte_end":9234098,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234103,"byte_end":9234137,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234142,"byte_end":9234145,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234150,"byte_end":9234181,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234186,"byte_end":9234212,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234217,"byte_end":9234238,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234243,"byte_end":9234270,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234275,"byte_end":9234282,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5023},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234714,"byte_end":9234719,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234363,"byte_end":9234433,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234438,"byte_end":9234459,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234464,"byte_end":9234467,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234472,"byte_end":9234486,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234491,"byte_end":9234494,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234499,"byte_end":9234506,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234511,"byte_end":9234555,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234560,"byte_end":9234563,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234568,"byte_end":9234601,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234606,"byte_end":9234640,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234645,"byte_end":9234659,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234664,"byte_end":9234690,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234695,"byte_end":9234702,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5024},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235394,"byte_end":9235400,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V> where K: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234774,"byte_end":9234816,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234821,"byte_end":9234824,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234829,"byte_end":9234894,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234899,"byte_end":9234902,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234907,"byte_end":9234982,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9234987,"byte_end":9235026,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235031,"byte_end":9235034,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235039,"byte_end":9235053,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235058,"byte_end":9235061,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235066,"byte_end":9235073,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235078,"byte_end":9235122,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235127,"byte_end":9235130,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235135,"byte_end":9235170,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235175,"byte_end":9235178,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235183,"byte_end":9235239,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235244,"byte_end":9235273,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235278,"byte_end":9235281,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235286,"byte_end":9235316,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235321,"byte_end":9235370,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235375,"byte_end":9235382,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5025},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236131,"byte_end":9236137,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235579,"byte_end":9235680,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235685,"byte_end":9235688,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235693,"byte_end":9235767,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235772,"byte_end":9235836,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235841,"byte_end":9235844,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235849,"byte_end":9235863,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235868,"byte_end":9235871,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235876,"byte_end":9235883,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235888,"byte_end":9235932,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235937,"byte_end":9235940,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235945,"byte_end":9235980,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9235985,"byte_end":9236021,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236026,"byte_end":9236064,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236069,"byte_end":9236107,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236112,"byte_end":9236119,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5027},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236971,"byte_end":9236983,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236439,"byte_end":9236509,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236514,"byte_end":9236517,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236522,"byte_end":9236596,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236601,"byte_end":9236665,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236670,"byte_end":9236673,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236678,"byte_end":9236692,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236697,"byte_end":9236700,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236705,"byte_end":9236712,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236717,"byte_end":9236761,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236766,"byte_end":9236769,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236774,"byte_end":9236809,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236814,"byte_end":9236850,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236855,"byte_end":9236898,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236903,"byte_end":9236947,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9236952,"byte_end":9236959,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7722},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":9239923,"byte_end":9239927,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7724},{"krate":0,"index":7725}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7677},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":9241489,"byte_end":9241498,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7680},{"krate":0,"index":7681}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5260},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":9243302,"byte_end":9243309,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":5263}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":9243138,"byte_end":9243205,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":9243223,"byte_end":9243290,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7640},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":9244158,"byte_end":9244162,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7642},{"krate":0,"index":7643}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7591},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":9246005,"byte_end":9246014,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7594},{"krate":0,"index":7595},{"krate":0,"index":7596}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7552},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":9278123,"byte_end":9278130,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7554},{"krate":0,"index":7555},{"krate":0,"index":7556},{"krate":0,"index":7557}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":5155},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176687,"byte_end":9176696,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":5156},{"krate":0,"index":5157},{"krate":0,"index":5160},{"krate":0,"index":5163},{"krate":0,"index":5165},{"krate":0,"index":5167},{"krate":0,"index":5170},{"krate":0,"index":5171},{"krate":0,"index":5172},{"krate":0,"index":5174},{"krate":0,"index":5175},{"krate":0,"index":5177},{"krate":0,"index":5179},{"krate":0,"index":5181},{"krate":0,"index":5183},{"krate":0,"index":5186},{"krate":0,"index":5188}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176576,"byte_end":9176650,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176651,"byte_end":9176676,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5156},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177766,"byte_end":9177770,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176711,"byte_end":9176781,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176786,"byte_end":9176809,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176814,"byte_end":9176817,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176822,"byte_end":9176840,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176845,"byte_end":9176848,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176853,"byte_end":9176866,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176871,"byte_end":9176922,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176927,"byte_end":9176934,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176939,"byte_end":9176942,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176947,"byte_end":9177015,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177020,"byte_end":9177095,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177100,"byte_end":9177175,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177180,"byte_end":9177234,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177239,"byte_end":9177314,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177319,"byte_end":9177329,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177334,"byte_end":9177337,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177342,"byte_end":9177356,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177361,"byte_end":9177364,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177369,"byte_end":9177376,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177381,"byte_end":9177401,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177406,"byte_end":9177429,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177434,"byte_end":9177475,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177480,"byte_end":9177483,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177488,"byte_end":9177529,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177534,"byte_end":9177537,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177542,"byte_end":9177587,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177592,"byte_end":9177637,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177642,"byte_end":9177687,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177692,"byte_end":9177734,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177739,"byte_end":9177746,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177751,"byte_end":9177758,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5157},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178841,"byte_end":9178849,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"pub fn try_next<T, E>(&mut Self) -> TryNext<, Self> where Self: Stream<Item =\nResult<T, E>> + Unpin","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177872,"byte_end":9177940,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9177945,"byte_end":9178013,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178018,"byte_end":9178021,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178026,"byte_end":9178044,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178049,"byte_end":9178052,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178057,"byte_end":9178070,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178075,"byte_end":9178132,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178137,"byte_end":9178144,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178149,"byte_end":9178152,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178157,"byte_end":9178221,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178226,"byte_end":9178288,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178293,"byte_end":9178353,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178358,"byte_end":9178401,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178406,"byte_end":9178409,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178414,"byte_end":9178428,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178433,"byte_end":9178436,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178441,"byte_end":9178448,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178453,"byte_end":9178473,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178478,"byte_end":9178501,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178506,"byte_end":9178547,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178552,"byte_end":9178555,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178560,"byte_end":9178627,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178632,"byte_end":9178635,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178640,"byte_end":9178693,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178698,"byte_end":9178751,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178756,"byte_end":9178809,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178814,"byte_end":9178821,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178826,"byte_end":9178833,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5160},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179917,"byte_end":9179920,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9178993,"byte_end":9179068,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179073,"byte_end":9179096,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179101,"byte_end":9179104,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179109,"byte_end":9179181,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179186,"byte_end":9179250,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179255,"byte_end":9179292,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179297,"byte_end":9179300,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179305,"byte_end":9179381,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179386,"byte_end":9179457,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179462,"byte_end":9179483,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179488,"byte_end":9179491,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179496,"byte_end":9179510,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179515,"byte_end":9179518,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179523,"byte_end":9179530,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179535,"byte_end":9179555,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179560,"byte_end":9179583,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179588,"byte_end":9179629,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179634,"byte_end":9179637,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179642,"byte_end":9179679,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179684,"byte_end":9179727,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179732,"byte_end":9179735,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179740,"byte_end":9179785,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179790,"byte_end":9179835,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179840,"byte_end":9179885,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179890,"byte_end":9179897,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9179902,"byte_end":9179909,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5163},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182530,"byte_end":9182535,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180064,"byte_end":9180137,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180142,"byte_end":9180158,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180163,"byte_end":9180166,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180171,"byte_end":9180247,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180252,"byte_end":9180317,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180322,"byte_end":9180397,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness. You should not chain calls to `merge`, as this","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180402,"byte_end":9180476,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ will break the fairness of the merging.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180481,"byte_end":9180524,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180529,"byte_end":9180532,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180537,"byte_end":9180612,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180617,"byte_end":9180683,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180688,"byte_end":9180731,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180736,"byte_end":9180739,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ For merging multiple streams, consider using [`StreamMap`] instead.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180744,"byte_end":9180815,"line_start":202,"line_end":202,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180820,"byte_end":9180823,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`StreamMap`]: crate::stream::StreamMap","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180828,"byte_end":9180871,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180876,"byte_end":9180879,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180884,"byte_end":9180898,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180903,"byte_end":9180906,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180911,"byte_end":9180918,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180923,"byte_end":9180956,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180961,"byte_end":9180987,"line_start":210,"line_end":210,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9180992,"byte_end":9181012,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181017,"byte_end":9181020,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181025,"byte_end":9181053,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181058,"byte_end":9181061,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181066,"byte_end":9181074,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181079,"byte_end":9181097,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181102,"byte_end":9181110,"line_start":217,"line_end":217,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181115,"byte_end":9181152,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181157,"byte_end":9181178,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181183,"byte_end":9181203,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181208,"byte_end":9181255,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181260,"byte_end":9181307,"line_start":222,"line_end":222,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181312,"byte_end":9181315,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181320,"byte_end":9181356,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181361,"byte_end":9181364,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181369,"byte_end":9181402,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181407,"byte_end":9181450,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181455,"byte_end":9181494,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181499,"byte_end":9181538,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181543,"byte_end":9181546,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181551,"byte_end":9181596,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181601,"byte_end":9181662,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181667,"byte_end":9181670,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181675,"byte_end":9181714,"line_start":234,"line_end":234,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181719,"byte_end":9181730,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181735,"byte_end":9181738,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181743,"byte_end":9181776,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181781,"byte_end":9181834,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181839,"byte_end":9181899,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181904,"byte_end":9181907,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181912,"byte_end":9181951,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181956,"byte_end":9181959,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9181964,"byte_end":9182025,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182030,"byte_end":9182033,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182038,"byte_end":9182073,"line_start":245,"line_end":245,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182078,"byte_end":9182117,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182122,"byte_end":9182133,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182138,"byte_end":9182141,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182146,"byte_end":9182193,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182198,"byte_end":9182245,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182250,"byte_end":9182297,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182302,"byte_end":9182349,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182354,"byte_end":9182401,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182406,"byte_end":9182409,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182414,"byte_end":9182453,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182458,"byte_end":9182500,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182505,"byte_end":9182510,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182515,"byte_end":9182522,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5165},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183840,"byte_end":9183846,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"pub fn filter<F>(Self, F) -> Filter<Self, F> where F: FnMut(&Self::Item) ->\nbool, Self: Sized","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182691,"byte_end":9182763,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182768,"byte_end":9182782,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182787,"byte_end":9182790,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182795,"byte_end":9182870,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182875,"byte_end":9182921,"line_start":271,"line_end":271,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9182926,"byte_end":9182998,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183003,"byte_end":9183052,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183057,"byte_end":9183115,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183120,"byte_end":9183123,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183128,"byte_end":9183204,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183209,"byte_end":9183281,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183286,"byte_end":9183307,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183312,"byte_end":9183315,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183320,"byte_end":9183334,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183339,"byte_end":9183342,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183347,"byte_end":9183354,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183359,"byte_end":9183379,"line_start":283,"line_end":283,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183384,"byte_end":9183407,"line_start":284,"line_end":284,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183412,"byte_end":9183453,"line_start":285,"line_end":285,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183458,"byte_end":9183461,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183466,"byte_end":9183503,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183508,"byte_end":9183558,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183563,"byte_end":9183566,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183571,"byte_end":9183615,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183620,"byte_end":9183664,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183669,"byte_end":9183713,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183718,"byte_end":9183762,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183767,"byte_end":9183808,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183813,"byte_end":9183820,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183825,"byte_end":9183832,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5167},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185213,"byte_end":9185223,"line_start":335,"line_end":335,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"pub fn filter_map<T, F>(Self, F) -> FilterMap<Self, F> where\nF: FnMut(Self::Item) -> Option<T>, Self: Sized","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9183997,"byte_end":9184072,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184077,"byte_end":9184140,"line_start":306,"line_end":306,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184145,"byte_end":9184148,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184153,"byte_end":9184228,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184233,"byte_end":9184285,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184290,"byte_end":9184366,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value will be skipped.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184371,"byte_end":9184431,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184436,"byte_end":9184439,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184444,"byte_end":9184520,"line_start":313,"line_end":313,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184525,"byte_end":9184601,"line_start":314,"line_end":314,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184606,"byte_end":9184627,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184632,"byte_end":9184635,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184640,"byte_end":9184654,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184659,"byte_end":9184666,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184671,"byte_end":9184691,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184696,"byte_end":9184719,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184724,"byte_end":9184765,"line_start":321,"line_end":321,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184770,"byte_end":9184773,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184778,"byte_end":9184815,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184820,"byte_end":9184863,"line_start":324,"line_end":324,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184868,"byte_end":9184919,"line_start":325,"line_end":325,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184924,"byte_end":9184931,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184936,"byte_end":9184939,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184944,"byte_end":9184988,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9184993,"byte_end":9185037,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185042,"byte_end":9185086,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185091,"byte_end":9185135,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185140,"byte_end":9185181,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185186,"byte_end":9185193,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185198,"byte_end":9185205,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5170},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187355,"byte_end":9187359,"line_start":401,"line_end":401,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185387,"byte_end":9185442,"line_start":343,"line_end":343,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185447,"byte_end":9185450,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185455,"byte_end":9185528,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185533,"byte_end":9185605,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185610,"byte_end":9185684,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185689,"byte_end":9185715,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185720,"byte_end":9185723,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185728,"byte_end":9185742,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185747,"byte_end":9185750,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185755,"byte_end":9185762,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185767,"byte_end":9185810,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185815,"byte_end":9185818,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185823,"byte_end":9185845,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185850,"byte_end":9185885,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185890,"byte_end":9185893,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185898,"byte_end":9185952,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185957,"byte_end":9185979,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9185984,"byte_end":9186003,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186008,"byte_end":9186013,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186018,"byte_end":9186021,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186026,"byte_end":9186057,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186062,"byte_end":9186086,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186091,"byte_end":9186094,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186099,"byte_end":9186191,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186196,"byte_end":9186229,"line_start":367,"line_end":367,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186234,"byte_end":9186274,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186279,"byte_end":9186282,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186287,"byte_end":9186336,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186341,"byte_end":9186370,"line_start":371,"line_end":371,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186375,"byte_end":9186413,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186418,"byte_end":9186438,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186443,"byte_end":9186476,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186481,"byte_end":9186494,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186499,"byte_end":9186508,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186513,"byte_end":9186518,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186523,"byte_end":9186526,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186531,"byte_end":9186549,"line_start":379,"line_end":379,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186554,"byte_end":9186575,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186580,"byte_end":9186628,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186633,"byte_end":9186636,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186641,"byte_end":9186682,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186687,"byte_end":9186736,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186741,"byte_end":9186787,"line_start":385,"line_end":385,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186792,"byte_end":9186841,"line_start":386,"line_end":386,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186846,"byte_end":9186892,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186897,"byte_end":9186900,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186905,"byte_end":9186941,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186946,"byte_end":9186985,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186990,"byte_end":9186993,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9186998,"byte_end":9187047,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187052,"byte_end":9187098,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187103,"byte_end":9187106,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187111,"byte_end":9187172,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187177,"byte_end":9187223,"line_start":396,"line_end":396,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187228,"byte_end":9187274,"line_start":397,"line_end":397,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187279,"byte_end":9187325,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187330,"byte_end":9187335,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187340,"byte_end":9187347,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5171},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188095,"byte_end":9188099,"line_start":428,"line_end":428,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187452,"byte_end":9187523,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187528,"byte_end":9187531,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187536,"byte_end":9187609,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187614,"byte_end":9187649,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187654,"byte_end":9187657,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187662,"byte_end":9187676,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187681,"byte_end":9187684,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187689,"byte_end":9187696,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187701,"byte_end":9187721,"line_start":416,"line_end":416,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187726,"byte_end":9187749,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187754,"byte_end":9187795,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187800,"byte_end":9187803,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187808,"byte_end":9187858,"line_start":420,"line_end":420,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187863,"byte_end":9187866,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187871,"byte_end":9187916,"line_start":422,"line_end":422,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187921,"byte_end":9187966,"line_start":423,"line_end":423,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9187971,"byte_end":9188016,"line_start":424,"line_end":424,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188021,"byte_end":9188063,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188068,"byte_end":9188075,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188080,"byte_end":9188087,"line_start":427,"line_end":427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5172},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188992,"byte_end":9189002,"line_start":457,"line_end":457,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"pub fn take_while<F>(Self, F) -> TakeWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188205,"byte_end":9188268,"line_start":435,"line_end":435,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188273,"byte_end":9188296,"line_start":436,"line_end":436,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188301,"byte_end":9188304,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188309,"byte_end":9188384,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188389,"byte_end":9188461,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188466,"byte_end":9188530,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188535,"byte_end":9188538,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188543,"byte_end":9188557,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188562,"byte_end":9188565,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188570,"byte_end":9188577,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188582,"byte_end":9188602,"line_start":445,"line_end":445,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188607,"byte_end":9188630,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188635,"byte_end":9188676,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188681,"byte_end":9188684,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188689,"byte_end":9188755,"line_start":449,"line_end":449,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188760,"byte_end":9188763,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188768,"byte_end":9188813,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188818,"byte_end":9188863,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188868,"byte_end":9188913,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188918,"byte_end":9188960,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188965,"byte_end":9188972,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9188977,"byte_end":9188984,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5174},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189699,"byte_end":9189703,"line_start":483,"line_end":483,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189159,"byte_end":9189225,"line_start":465,"line_end":465,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189230,"byte_end":9189252,"line_start":466,"line_end":466,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189257,"byte_end":9189260,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189265,"byte_end":9189279,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189284,"byte_end":9189287,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189292,"byte_end":9189299,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189304,"byte_end":9189324,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189329,"byte_end":9189352,"line_start":472,"line_end":472,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189357,"byte_end":9189398,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189403,"byte_end":9189406,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189411,"byte_end":9189461,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189466,"byte_end":9189469,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189474,"byte_end":9189519,"line_start":477,"line_end":477,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189524,"byte_end":9189569,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189574,"byte_end":9189620,"line_start":479,"line_end":479,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189625,"byte_end":9189667,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189672,"byte_end":9189679,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189684,"byte_end":9189691,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5175},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190681,"byte_end":9190691,"line_start":513,"line_end":513,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"pub fn skip_while<F>(Self, F) -> SkipWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189809,"byte_end":9189882,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189887,"byte_end":9189910,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189915,"byte_end":9189918,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9189923,"byte_end":9190001,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190006,"byte_end":9190078,"line_start":494,"line_end":494,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190083,"byte_end":9190143,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190148,"byte_end":9190151,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190156,"byte_end":9190219,"line_start":497,"line_end":497,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190224,"byte_end":9190227,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190232,"byte_end":9190246,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190251,"byte_end":9190254,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190259,"byte_end":9190266,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190271,"byte_end":9190291,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190296,"byte_end":9190319,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190324,"byte_end":9190365,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190370,"byte_end":9190444,"line_start":505,"line_end":505,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190449,"byte_end":9190452,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190457,"byte_end":9190502,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190507,"byte_end":9190552,"line_start":508,"line_end":508,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190557,"byte_end":9190602,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190607,"byte_end":9190649,"line_start":510,"line_end":510,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190654,"byte_end":9190661,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190666,"byte_end":9190673,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5177},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192270,"byte_end":9192273,"line_start":568,"line_end":568,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190848,"byte_end":9190909,"line_start":521,"line_end":521,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190914,"byte_end":9190917,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190922,"byte_end":9190992,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9190997,"byte_end":9191067,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191072,"byte_end":9191137,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191142,"byte_end":9191194,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191199,"byte_end":9191202,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191207,"byte_end":9191279,"line_start":528,"line_end":528,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191284,"byte_end":9191358,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191363,"byte_end":9191399,"line_start":530,"line_end":530,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191404,"byte_end":9191407,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191412,"byte_end":9191447,"line_start":532,"line_end":532,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191452,"byte_end":9191455,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191460,"byte_end":9191474,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191479,"byte_end":9191482,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191487,"byte_end":9191503,"line_start":536,"line_end":536,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191508,"byte_end":9191511,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191516,"byte_end":9191523,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191528,"byte_end":9191548,"line_start":539,"line_end":539,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191553,"byte_end":9191576,"line_start":540,"line_end":540,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191581,"byte_end":9191622,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191627,"byte_end":9191630,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191635,"byte_end":9191657,"line_start":543,"line_end":543,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191662,"byte_end":9191665,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191670,"byte_end":9191722,"line_start":545,"line_end":545,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191727,"byte_end":9191730,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191735,"byte_end":9191788,"line_start":547,"line_end":547,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191793,"byte_end":9191800,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191805,"byte_end":9191812,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191817,"byte_end":9191820,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191825,"byte_end":9191859,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191864,"byte_end":9191867,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191872,"byte_end":9191879,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191884,"byte_end":9191904,"line_start":554,"line_end":554,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191909,"byte_end":9191932,"line_start":555,"line_end":555,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191937,"byte_end":9191978,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191983,"byte_end":9191986,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9191991,"byte_end":9192013,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192018,"byte_end":9192021,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192026,"byte_end":9192062,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192067,"byte_end":9192070,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192075,"byte_end":9192117,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192122,"byte_end":9192125,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192130,"byte_end":9192189,"line_start":564,"line_end":564,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192194,"byte_end":9192238,"line_start":565,"line_end":565,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192243,"byte_end":9192250,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192255,"byte_end":9192262,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5179},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193798,"byte_end":9193801,"line_start":621,"line_end":621,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192438,"byte_end":9192497,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192502,"byte_end":9192505,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192510,"byte_end":9192580,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192585,"byte_end":9192658,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192663,"byte_end":9192727,"line_start":580,"line_end":580,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192732,"byte_end":9192752,"line_start":581,"line_end":581,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192757,"byte_end":9192760,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192765,"byte_end":9192837,"line_start":583,"line_end":583,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192842,"byte_end":9192915,"line_start":584,"line_end":584,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192920,"byte_end":9192955,"line_start":585,"line_end":585,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192960,"byte_end":9192963,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9192968,"byte_end":9193004,"line_start":587,"line_end":587,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193009,"byte_end":9193012,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193017,"byte_end":9193033,"line_start":589,"line_end":589,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193038,"byte_end":9193041,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193046,"byte_end":9193053,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193058,"byte_end":9193078,"line_start":592,"line_end":592,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193083,"byte_end":9193106,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193111,"byte_end":9193152,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193157,"byte_end":9193160,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193165,"byte_end":9193187,"line_start":596,"line_end":596,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193192,"byte_end":9193195,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193200,"byte_end":9193252,"line_start":598,"line_end":598,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193257,"byte_end":9193260,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193265,"byte_end":9193318,"line_start":600,"line_end":600,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193323,"byte_end":9193330,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193335,"byte_end":9193342,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193347,"byte_end":9193350,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193355,"byte_end":9193388,"line_start":604,"line_end":604,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193393,"byte_end":9193396,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193401,"byte_end":9193408,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193413,"byte_end":9193433,"line_start":607,"line_end":607,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193438,"byte_end":9193461,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193466,"byte_end":9193507,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193512,"byte_end":9193515,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193520,"byte_end":9193542,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193547,"byte_end":9193550,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193555,"byte_end":9193591,"line_start":613,"line_end":613,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193596,"byte_end":9193599,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193604,"byte_end":9193645,"line_start":615,"line_end":615,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193650,"byte_end":9193653,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193658,"byte_end":9193717,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193722,"byte_end":9193766,"line_start":618,"line_end":618,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193771,"byte_end":9193778,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193783,"byte_end":9193790,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5181},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194944,"byte_end":9194949,"line_start":656,"line_end":656,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9193966,"byte_end":9194037,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194042,"byte_end":9194098,"line_start":630,"line_end":630,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194103,"byte_end":9194106,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194111,"byte_end":9194185,"line_start":632,"line_end":632,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194190,"byte_end":9194226,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194231,"byte_end":9194234,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194239,"byte_end":9194253,"line_start":635,"line_end":635,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194258,"byte_end":9194261,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194266,"byte_end":9194273,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194278,"byte_end":9194319,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194324,"byte_end":9194327,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194332,"byte_end":9194350,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194355,"byte_end":9194376,"line_start":641,"line_end":641,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194381,"byte_end":9194427,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194432,"byte_end":9194478,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194483,"byte_end":9194486,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194491,"byte_end":9194531,"line_start":645,"line_end":645,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194536,"byte_end":9194539,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194544,"byte_end":9194593,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194598,"byte_end":9194647,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194652,"byte_end":9194701,"line_start":649,"line_end":649,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194706,"byte_end":9194755,"line_start":650,"line_end":650,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194760,"byte_end":9194809,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194814,"byte_end":9194863,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194868,"byte_end":9194914,"line_start":653,"line_end":653,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194919,"byte_end":9194924,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9194929,"byte_end":9194936,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5183},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195542,"byte_end":9195546,"line_start":680,"line_end":680,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, B, F> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195105,"byte_end":9195174,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195179,"byte_end":9195215,"line_start":665,"line_end":665,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195220,"byte_end":9195223,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195228,"byte_end":9195242,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195247,"byte_end":9195263,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195268,"byte_end":9195275,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195280,"byte_end":9195300,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195305,"byte_end":9195328,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195333,"byte_end":9195366,"line_start":672,"line_end":672,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195371,"byte_end":9195374,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195379,"byte_end":9195421,"line_start":674,"line_end":674,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195426,"byte_end":9195474,"line_start":675,"line_end":675,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195479,"byte_end":9195482,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195487,"byte_end":9195510,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195515,"byte_end":9195522,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195527,"byte_end":9195534,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5186},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197859,"byte_end":9197866,"line_start":752,"line_end":752,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"pub fn collect<T>(Self) -> Collect<Self, T> where T: FromStream<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195725,"byte_end":9195787,"line_start":688,"line_end":688,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195792,"byte_end":9195795,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195800,"byte_end":9195876,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195881,"byte_end":9195948,"line_start":691,"line_end":691,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9195953,"byte_end":9196001,"line_start":692,"line_end":692,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196006,"byte_end":9196071,"line_start":693,"line_end":693,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196076,"byte_end":9196079,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196084,"byte_end":9196098,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196103,"byte_end":9196106,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196111,"byte_end":9196185,"line_start":697,"line_end":697,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196190,"byte_end":9196262,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196267,"byte_end":9196342,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196347,"byte_end":9196409,"line_start":700,"line_end":700,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196414,"byte_end":9196417,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196422,"byte_end":9196433,"line_start":702,"line_end":702,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196438,"byte_end":9196441,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196446,"byte_end":9196516,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust language.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196521,"byte_end":9196559,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196564,"byte_end":9196567,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196572,"byte_end":9196586,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196591,"byte_end":9196594,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196599,"byte_end":9196615,"line_start":709,"line_end":709,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196620,"byte_end":9196623,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196628,"byte_end":9196635,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196640,"byte_end":9196681,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196686,"byte_end":9196689,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196694,"byte_end":9196712,"line_start":714,"line_end":714,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196717,"byte_end":9196738,"line_start":715,"line_end":715,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196743,"byte_end":9196774,"line_start":716,"line_end":716,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196779,"byte_end":9196818,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196823,"byte_end":9196854,"line_start":718,"line_end":718,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196859,"byte_end":9196885,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196890,"byte_end":9196913,"line_start":720,"line_end":720,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196918,"byte_end":9196921,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196926,"byte_end":9196969,"line_start":722,"line_end":722,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196974,"byte_end":9196979,"line_start":723,"line_end":723,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196984,"byte_end":9196991,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9196996,"byte_end":9196999,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197004,"byte_end":9197046,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197051,"byte_end":9197054,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197059,"byte_end":9197066,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197071,"byte_end":9197112,"line_start":729,"line_end":729,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197117,"byte_end":9197120,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197125,"byte_end":9197143,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197148,"byte_end":9197169,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197174,"byte_end":9197239,"line_start":733,"line_end":733,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197244,"byte_end":9197288,"line_start":734,"line_end":734,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197293,"byte_end":9197344,"line_start":735,"line_end":735,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197349,"byte_end":9197375,"line_start":736,"line_end":736,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197380,"byte_end":9197403,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197408,"byte_end":9197411,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197416,"byte_end":9197462,"line_start":739,"line_end":739,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197467,"byte_end":9197470,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197475,"byte_end":9197547,"line_start":741,"line_end":741,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197552,"byte_end":9197624,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197629,"byte_end":9197632,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197637,"byte_end":9197681,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197686,"byte_end":9197719,"line_start":745,"line_end":745,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197724,"byte_end":9197750,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197755,"byte_end":9197778,"line_start":747,"line_end":747,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197783,"byte_end":9197786,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197791,"byte_end":9197829,"line_start":749,"line_end":749,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197834,"byte_end":9197839,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9197844,"byte_end":9197851,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5188},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9200521,"byte_end":9200528,"line_start":816,"line_end":816,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":5155},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198006,"byte_end":9198058,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198063,"byte_end":9198066,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198071,"byte_end":9198143,"line_start":762,"line_end":762,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198148,"byte_end":9198218,"line_start":763,"line_end":763,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198223,"byte_end":9198226,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198231,"byte_end":9198307,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198312,"byte_end":9198389,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198394,"byte_end":9198470,"line_start":767,"line_end":767,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198475,"byte_end":9198518,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198523,"byte_end":9198526,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198531,"byte_end":9198542,"line_start":770,"line_end":770,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198547,"byte_end":9198550,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198555,"byte_end":9198621,"line_start":772,"line_end":772,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198626,"byte_end":9198652,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198657,"byte_end":9198660,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198665,"byte_end":9198740,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198745,"byte_end":9198779,"line_start":776,"line_end":776,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198784,"byte_end":9198787,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198792,"byte_end":9198806,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198811,"byte_end":9198814,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198819,"byte_end":9198893,"line_start":780,"line_end":780,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198898,"byte_end":9198901,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198906,"byte_end":9198913,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198918,"byte_end":9198938,"line_start":783,"line_end":783,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198943,"byte_end":9198966,"line_start":784,"line_end":784,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9198971,"byte_end":9199012,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199017,"byte_end":9199045,"line_start":786,"line_end":786,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199050,"byte_end":9199093,"line_start":787,"line_end":787,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199098,"byte_end":9199101,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199106,"byte_end":9199174,"line_start":789,"line_end":789,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199179,"byte_end":9199182,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199187,"byte_end":9199254,"line_start":791,"line_end":791,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199259,"byte_end":9199316,"line_start":792,"line_end":792,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199321,"byte_end":9199378,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199383,"byte_end":9199440,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199445,"byte_end":9199499,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199504,"byte_end":9199507,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199512,"byte_end":9199597,"line_start":797,"line_end":797,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199602,"byte_end":9199678,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199683,"byte_end":9199740,"line_start":799,"line_end":799,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199745,"byte_end":9199795,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199800,"byte_end":9199857,"line_start":801,"line_end":801,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199862,"byte_end":9199919,"line_start":802,"line_end":802,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199924,"byte_end":9199978,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199983,"byte_end":9199986,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9199991,"byte_end":9200062,"line_start":805,"line_end":805,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9200067,"byte_end":9200130,"line_start":806,"line_end":806,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9200135,"byte_end":9200207,"line_start":807,"line_end":807,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9200212,"byte_end":9200274,"line_start":808,"line_end":808,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9200279,"byte_end":9200282,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9200287,"byte_end":9200344,"line_start":810,"line_end":810,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9200349,"byte_end":9200403,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9200408,"byte_end":9200415,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9200420,"byte_end":9200427,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9200432,"byte_end":9200461,"line_start":814,"line_end":814,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":5686},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9366399,"byte_end":9366405,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":5685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6191},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6193},{"krate":0,"index":6194},{"krate":0,"index":6195},{"krate":0,"index":6196},{"krate":0,"index":6200},{"krate":0,"index":6201},{"krate":0,"index":6207},{"krate":0,"index":6218},{"krate":0,"index":6296},{"krate":0,"index":6297},{"krate":0,"index":6298},{"krate":0,"index":6299},{"krate":0,"index":6360}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21598,"byte_end":21625,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"/ Asynchronous green-threads.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439057,"byte_end":9439088,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439089,"byte_end":9439092,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439093,"byte_end":9439115,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439116,"byte_end":9439119,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439120,"byte_end":9439201,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439202,"byte_end":9439282,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439283,"byte_end":9439363,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439364,"byte_end":9439438,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439439,"byte_end":9439514,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439515,"byte_end":9439537,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439538,"byte_end":9439541,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439542,"byte_end":9439577,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439578,"byte_end":9439581,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439582,"byte_end":9439656,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439657,"byte_end":9439736,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439737,"byte_end":9439809,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439810,"byte_end":9439885,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439886,"byte_end":9439939,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439940,"byte_end":9439943,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9439944,"byte_end":9440021,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440022,"byte_end":9440095,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440096,"byte_end":9440175,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440176,"byte_end":9440254,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440255,"byte_end":9440327,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440328,"byte_end":9440403,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440404,"byte_end":9440478,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440479,"byte_end":9440554,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440555,"byte_end":9440585,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440586,"byte_end":9440589,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440590,"byte_end":9440668,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440669,"byte_end":9440744,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440745,"byte_end":9440822,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440823,"byte_end":9440902,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440903,"byte_end":9440981,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9440982,"byte_end":9441057,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441058,"byte_end":9441133,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441134,"byte_end":9441195,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441196,"byte_end":9441199,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441200,"byte_end":9441224,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441225,"byte_end":9441289,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441290,"byte_end":9441350,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441351,"byte_end":9441440,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441441,"byte_end":9441529,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441530,"byte_end":9441533,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441534,"byte_end":9441559,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441560,"byte_end":9441563,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441564,"byte_end":9441631,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441632,"byte_end":9441635,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441636,"byte_end":9441652,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441653,"byte_end":9441656,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441657,"byte_end":9441736,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441737,"byte_end":9441816,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441817,"byte_end":9441896,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441897,"byte_end":9441964,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441965,"byte_end":9441968,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441969,"byte_end":9441976,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441977,"byte_end":9441997,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9441998,"byte_end":9442001,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442002,"byte_end":9442024,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442025,"byte_end":9442048,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442049,"byte_end":9442085,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442086,"byte_end":9442093,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442094,"byte_end":9442101,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442102,"byte_end":9442109,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442110,"byte_end":9442113,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442114,"byte_end":9442193,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442194,"byte_end":9442272,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442273,"byte_end":9442307,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442308,"byte_end":9442311,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442312,"byte_end":9442319,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442320,"byte_end":9442340,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442341,"byte_end":9442344,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442345,"byte_end":9442425,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442426,"byte_end":9442460,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442461,"byte_end":9442475,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442476,"byte_end":9442498,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442499,"byte_end":9442506,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442507,"byte_end":9442510,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442511,"byte_end":9442521,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442522,"byte_end":9442525,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442526,"byte_end":9442570,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442571,"byte_end":9442600,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442601,"byte_end":9442640,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442641,"byte_end":9442653,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442654,"byte_end":9442661,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442662,"byte_end":9442669,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442670,"byte_end":9442673,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442674,"byte_end":9442754,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442755,"byte_end":9442831,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442832,"byte_end":9442844,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442845,"byte_end":9442848,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442849,"byte_end":9442856,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442857,"byte_end":9442877,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442878,"byte_end":9442881,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442882,"byte_end":9442920,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442921,"byte_end":9442955,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442956,"byte_end":9442997,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9442998,"byte_end":9443005,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443006,"byte_end":9443009,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443010,"byte_end":9443068,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443069,"byte_end":9443102,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443103,"byte_end":9443110,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443111,"byte_end":9443118,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443119,"byte_end":9443122,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443123,"byte_end":9443196,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ feature flag is enabled.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443197,"byte_end":9443225,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443226,"byte_end":9443229,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443230,"byte_end":9443271,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443272,"byte_end":9443305,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443306,"byte_end":9443352,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443353,"byte_end":9443396,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443397,"byte_end":9443439,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443440,"byte_end":9443481,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443482,"byte_end":9443485,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443486,"byte_end":9443515,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443516,"byte_end":9443519,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443520,"byte_end":9443600,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443601,"byte_end":9443680,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443681,"byte_end":9443760,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443761,"byte_end":9443801,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443802,"byte_end":9443805,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443806,"byte_end":9443880,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443881,"byte_end":9443961,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443962,"byte_end":9443965,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443966,"byte_end":9443989,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443990,"byte_end":9443993,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9443994,"byte_end":9444074,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444075,"byte_end":9444141,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444142,"byte_end":9444209,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444210,"byte_end":9444284,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444285,"byte_end":9444297,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444298,"byte_end":9444301,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444302,"byte_end":9444309,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444310,"byte_end":9444330,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444331,"byte_end":9444334,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444335,"byte_end":9444358,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444359,"byte_end":9444388,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444389,"byte_end":9444451,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444452,"byte_end":9444459,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444460,"byte_end":9444467,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444468,"byte_end":9444475,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444476,"byte_end":9444479,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444480,"byte_end":9444554,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444555,"byte_end":9444622,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444623,"byte_end":9444626,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444627,"byte_end":9444638,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444639,"byte_end":9444661,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444662,"byte_end":9444726,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444727,"byte_end":9444767,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444768,"byte_end":9444830,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444831,"byte_end":9444859,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444860,"byte_end":9444867,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444868,"byte_end":9444871,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444872,"byte_end":9444901,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444902,"byte_end":9444947,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444948,"byte_end":9444960,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444961,"byte_end":9444968,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444969,"byte_end":9444976,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444977,"byte_end":9444980,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9444981,"byte_end":9445004,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445005,"byte_end":9445008,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445009,"byte_end":9445089,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445090,"byte_end":9445164,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445165,"byte_end":9445241,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445242,"byte_end":9445316,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445317,"byte_end":9445396,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445397,"byte_end":9445479,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445480,"byte_end":9445501,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445502,"byte_end":9445505,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445506,"byte_end":9445522,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445523,"byte_end":9445526,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445527,"byte_end":9445534,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445535,"byte_end":9445555,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445556,"byte_end":9445559,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445560,"byte_end":9445583,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445584,"byte_end":9445626,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445627,"byte_end":9445689,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445690,"byte_end":9445718,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445719,"byte_end":9445726,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445727,"byte_end":9445730,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445731,"byte_end":9445776,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445777,"byte_end":9445784,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445785,"byte_end":9445792,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445793,"byte_end":9445796,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445797,"byte_end":9445815,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445816,"byte_end":9445819,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445820,"byte_end":9445894,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445895,"byte_end":9445973,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9445974,"byte_end":9446050,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446051,"byte_end":9446108,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446109,"byte_end":9446187,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446188,"byte_end":9446216,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446217,"byte_end":9446220,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446221,"byte_end":9446232,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446233,"byte_end":9446253,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446254,"byte_end":9446257,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446258,"byte_end":9446296,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446297,"byte_end":9446308,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446309,"byte_end":9446336,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446337,"byte_end":9446355,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446356,"byte_end":9446398,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446399,"byte_end":9446410,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446411,"byte_end":9446414,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446415,"byte_end":9446482,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446483,"byte_end":9446515,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446516,"byte_end":9446552,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446553,"byte_end":9446558,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446559,"byte_end":9446572,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446573,"byte_end":9446580,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446581,"byte_end":9446588,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446589,"byte_end":9446592,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446593,"byte_end":9446650,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446651,"byte_end":9446708,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446709,"byte_end":9446768,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446769,"byte_end":9446818,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/mod.rs","byte_start":9446819,"byte_end":9446868,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":6208},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/spawn.rs","byte_start":9450951,"byte_end":9450956,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":6210},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/yield_now.rs","byte_start":9452037,"byte_end":9452046,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":21740,"byte_end":21767,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/yield_now.rs","byte_start":9451956,"byte_end":9452019,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6361},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9456444,"byte_end":9456452,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":6362},{"krate":0,"index":6363},{"krate":0,"index":6364}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22281,"byte_end":22308,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":6370},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9458464,"byte_end":9458475,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":22281,"byte_end":22308,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6251},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9459372,"byte_end":9459375,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9459327,"byte_end":9459360,"line_start":222,"line_end":222,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6252},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9461080,"byte_end":9461091,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9459917,"byte_end":9459967,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9459972,"byte_end":9459975,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9459980,"byte_end":9460040,"line_start":242,"line_end":242,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460045,"byte_end":9460048,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460053,"byte_end":9460125,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460130,"byte_end":9460200,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460205,"byte_end":9460216,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460221,"byte_end":9460241,"line_start":247,"line_end":247,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460246,"byte_end":9460249,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460254,"byte_end":9460272,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460277,"byte_end":9460298,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460303,"byte_end":9460345,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460350,"byte_end":9460353,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460358,"byte_end":9460430,"line_start":253,"line_end":253,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460435,"byte_end":9460488,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460493,"byte_end":9460526,"line_start":255,"line_end":255,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460531,"byte_end":9460548,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460553,"byte_end":9460564,"line_start":257,"line_end":257,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460569,"byte_end":9460572,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460577,"byte_end":9460611,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460616,"byte_end":9460652,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460657,"byte_end":9460675,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460680,"byte_end":9460697,"line_start":262,"line_end":262,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460702,"byte_end":9460705,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460710,"byte_end":9460781,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460786,"byte_end":9460836,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460841,"byte_end":9460874,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460879,"byte_end":9460896,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460901,"byte_end":9460912,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460917,"byte_end":9460920,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460925,"byte_end":9460961,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460966,"byte_end":9460984,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9460989,"byte_end":9461006,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9461011,"byte_end":9461016,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9461021,"byte_end":9461028,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9461033,"byte_end":9461068,"line_start":275,"line_end":275,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6254},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463826,"byte_end":9463834,"line_start":349,"line_end":349,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &mut crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9461434,"byte_end":9461508,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9461513,"byte_end":9461572,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9461577,"byte_end":9461580,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9461585,"byte_end":9461652,"line_start":290,"line_end":290,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9461657,"byte_end":9461730,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9461735,"byte_end":9461811,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9461816,"byte_end":9461896,"line_start":293,"line_end":293,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9461901,"byte_end":9461920,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9461925,"byte_end":9461928,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9461933,"byte_end":9461999,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462004,"byte_end":9462007,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462012,"byte_end":9462024,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462029,"byte_end":9462032,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462037,"byte_end":9462109,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462114,"byte_end":9462187,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462192,"byte_end":9462195,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462200,"byte_end":9462211,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462216,"byte_end":9462219,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462224,"byte_end":9462298,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462303,"byte_end":9462378,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462383,"byte_end":9462458,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462463,"byte_end":9462540,"line_start":308,"line_end":308,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462545,"byte_end":9462548,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462553,"byte_end":9462586,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462591,"byte_end":9462610,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462615,"byte_end":9462647,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462652,"byte_end":9462672,"line_start":313,"line_end":313,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462677,"byte_end":9462680,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462685,"byte_end":9462726,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462731,"byte_end":9462769,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462774,"byte_end":9462809,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462814,"byte_end":9462858,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462863,"byte_end":9462922,"line_start":319,"line_end":319,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462927,"byte_end":9462949,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462954,"byte_end":9462969,"line_start":321,"line_end":321,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462974,"byte_end":9462992,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9462997,"byte_end":9463008,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463013,"byte_end":9463041,"line_start":324,"line_end":324,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463046,"byte_end":9463052,"line_start":325,"line_end":325,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463057,"byte_end":9463064,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463069,"byte_end":9463103,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463108,"byte_end":9463115,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463120,"byte_end":9463152,"line_start":329,"line_end":329,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463157,"byte_end":9463177,"line_start":330,"line_end":330,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463182,"byte_end":9463185,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463190,"byte_end":9463231,"line_start":332,"line_end":332,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463236,"byte_end":9463274,"line_start":333,"line_end":333,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463279,"byte_end":9463314,"line_start":334,"line_end":334,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463319,"byte_end":9463363,"line_start":335,"line_end":335,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463368,"byte_end":9463427,"line_start":336,"line_end":336,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463432,"byte_end":9463454,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463459,"byte_end":9463480,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463485,"byte_end":9463503,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463508,"byte_end":9463519,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463524,"byte_end":9463552,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463557,"byte_end":9463563,"line_start":342,"line_end":342,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463568,"byte_end":9463575,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463580,"byte_end":9463583,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463588,"byte_end":9463623,"line_start":345,"line_end":345,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463628,"byte_end":9463695,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463700,"byte_end":9463755,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463760,"byte_end":9463814,"line_start":348,"line_end":348,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6256},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9465085,"byte_end":9465094,"line_start":384,"line_end":384,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9463993,"byte_end":9464063,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464068,"byte_end":9464071,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464076,"byte_end":9464146,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464151,"byte_end":9464227,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464232,"byte_end":9464300,"line_start":360,"line_end":360,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464305,"byte_end":9464385,"line_start":361,"line_end":361,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464390,"byte_end":9464462,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464467,"byte_end":9464542,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464547,"byte_end":9464603,"line_start":364,"line_end":364,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464608,"byte_end":9464611,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464616,"byte_end":9464630,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464635,"byte_end":9464638,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464643,"byte_end":9464654,"line_start":368,"line_end":368,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464659,"byte_end":9464679,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464684,"byte_end":9464687,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464692,"byte_end":9464710,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464715,"byte_end":9464736,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464741,"byte_end":9464788,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464793,"byte_end":9464835,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464840,"byte_end":9464862,"line_start":375,"line_end":375,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464867,"byte_end":9464897,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464902,"byte_end":9464920,"line_start":377,"line_end":377,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464925,"byte_end":9464942,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464947,"byte_end":9464952,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464957,"byte_end":9464964,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464969,"byte_end":9464972,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9464977,"byte_end":9465012,"line_start":382,"line_end":382,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9465017,"byte_end":9465067,"line_start":383,"line_end":383,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6313},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474165,"byte_end":9474173,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":6315}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473255,"byte_end":9473285,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473286,"byte_end":9473289,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473290,"byte_end":9473344,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473345,"byte_end":9473348,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473349,"byte_end":9473415,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473416,"byte_end":9473483,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473484,"byte_end":9473541,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473542,"byte_end":9473611,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473612,"byte_end":9473615,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473616,"byte_end":9473630,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473631,"byte_end":9473634,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473635,"byte_end":9473642,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473643,"byte_end":9473665,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473666,"byte_end":9473690,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473691,"byte_end":9473718,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473719,"byte_end":9473724,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473725,"byte_end":9473728,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473729,"byte_end":9473761,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473762,"byte_end":9473798,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473799,"byte_end":9473812,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473813,"byte_end":9473816,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473817,"byte_end":9473849,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473850,"byte_end":9473886,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473887,"byte_end":9473890,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473891,"byte_end":9473927,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473928,"byte_end":9473968,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473969,"byte_end":9473986,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9473987,"byte_end":9474000,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474001,"byte_end":9474008,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474009,"byte_end":9474016,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474017,"byte_end":9474076,"line_start":93,"line_end":93,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6315},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474215,"byte_end":9474220,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":6313},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6318},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474748,"byte_end":9474753,"line_start":118,"line_end":118,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474298,"byte_end":9474362,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474367,"byte_end":9474370,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474375,"byte_end":9474436,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474441,"byte_end":9474444,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474449,"byte_end":9474465,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474470,"byte_end":9474473,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474478,"byte_end":9474485,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474490,"byte_end":9474512,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474517,"byte_end":9474541,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474546,"byte_end":9474573,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474578,"byte_end":9474583,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474588,"byte_end":9474591,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474596,"byte_end":9474628,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474633,"byte_end":9474688,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474693,"byte_end":9474706,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474711,"byte_end":9474718,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474723,"byte_end":9474730,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6322},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9475227,"byte_end":9475231,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474978,"byte_end":9475044,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9475049,"byte_end":9475052,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9475057,"byte_end":9475069,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9475074,"byte_end":9475077,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9475082,"byte_end":9475143,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9475148,"byte_end":9475215,"line_start":135,"line_end":135,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6325},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9475719,"byte_end":9475727,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9475472,"byte_end":9475538,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9475543,"byte_end":9475546,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9475551,"byte_end":9475617,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9475622,"byte_end":9475687,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9475692,"byte_end":9475707,"line_start":150,"line_end":150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6331},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9476187,"byte_end":9476190,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9476082,"byte_end":9476124,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9476129,"byte_end":9476175,"line_start":167,"line_end":167,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6373},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9477679,"byte_end":9477690,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":6374}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9477554,"byte_end":9477629,"line_start":224,"line_end":224,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":6385},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":6386},{"krate":0,"index":6387},{"krate":0,"index":6388},{"krate":0,"index":6465},{"krate":0,"index":6466},{"krate":0,"index":6486},{"krate":0,"index":6487},{"krate":0,"index":6488},{"krate":0,"index":6489},{"krate":0,"index":6490},{"krate":0,"index":6670},{"krate":0,"index":6687},{"krate":0,"index":6688},{"krate":0,"index":6724},{"krate":0,"index":6725},{"krate":0,"index":6748},{"krate":0,"index":6749},{"krate":0,"index":6750},{"krate":0,"index":6751},{"krate":0,"index":6752},{"krate":0,"index":6786},{"krate":0,"index":6787},{"krate":0,"index":6788},{"krate":0,"index":6789},{"krate":0,"index":6790},{"krate":0,"index":7036},{"krate":0,"index":7060},{"krate":0,"index":7061},{"krate":0,"index":7062},{"krate":0,"index":6791},{"krate":0,"index":6855},{"krate":0,"index":6856},{"krate":0,"index":6861}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/cfg.rs","byte_start":23137,"byte_end":23161,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478063,"byte_end":9478095,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478096,"byte_end":9478099,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478100,"byte_end":9478180,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478181,"byte_end":9478193,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478194,"byte_end":9478197,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478198,"byte_end":9478279,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478280,"byte_end":9478294,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478295,"byte_end":9478298,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478299,"byte_end":9478369,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478370,"byte_end":9478450,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478451,"byte_end":9478465,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478466,"byte_end":9478469,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478470,"byte_end":9478549,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478550,"byte_end":9478622,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478623,"byte_end":9478692,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478693,"byte_end":9478696,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478697,"byte_end":9478774,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478775,"byte_end":9478793,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478794,"byte_end":9478797,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478798,"byte_end":9478869,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478870,"byte_end":9478889,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478890,"byte_end":9478893,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478894,"byte_end":9478964,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478965,"byte_end":9478968,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478969,"byte_end":9478983,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478984,"byte_end":9478987,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9478988,"byte_end":9479034,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479035,"byte_end":9479038,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479039,"byte_end":9479046,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::delay_for;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479047,"byte_end":9479078,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479079,"byte_end":9479082,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479083,"byte_end":9479111,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479112,"byte_end":9479115,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479116,"byte_end":9479119,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479120,"byte_end":9479138,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479139,"byte_end":9479160,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479161,"byte_end":9479213,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479214,"byte_end":9479254,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479255,"byte_end":9479260,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479261,"byte_end":9479268,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479269,"byte_end":9479272,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479273,"byte_end":9479352,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479353,"byte_end":9479431,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ prelude.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479432,"byte_end":9479444,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479445,"byte_end":9479448,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479449,"byte_end":9479456,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479457,"byte_end":9479498,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479499,"byte_end":9479502,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479503,"byte_end":9479531,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479532,"byte_end":9479555,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479556,"byte_end":9479561,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479562,"byte_end":9479565,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479566,"byte_end":9479588,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479589,"byte_end":9479656,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479657,"byte_end":9479660,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479661,"byte_end":9479682,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479683,"byte_end":9479723,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479724,"byte_end":9479729,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479730,"byte_end":9479737,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479738,"byte_end":9479745,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479746,"byte_end":9479749,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479750,"byte_end":9479826,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479827,"byte_end":9479830,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`delay_for`] is that an","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479831,"byte_end":9479899,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479900,"byte_end":9479972,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9479973,"byte_end":9480048,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480049,"byte_end":9480127,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480128,"byte_end":9480131,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480132,"byte_end":9480210,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480211,"byte_end":9480281,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480282,"byte_end":9480294,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480295,"byte_end":9480298,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480299,"byte_end":9480306,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480307,"byte_end":9480327,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480328,"byte_end":9480331,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480332,"byte_end":9480373,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480374,"byte_end":9480400,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480401,"byte_end":9480460,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480461,"byte_end":9480466,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480467,"byte_end":9480470,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480471,"byte_end":9480489,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480490,"byte_end":9480511,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480512,"byte_end":9480584,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480585,"byte_end":9480609,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480610,"byte_end":9480644,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480645,"byte_end":9480690,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480691,"byte_end":9480700,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480701,"byte_end":9480706,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480707,"byte_end":9480714,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480715,"byte_end":9480718,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480719,"byte_end":9480762,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480763,"byte_end":9480804,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":6388},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":6389},{"krate":0,"index":6390},{"krate":0,"index":6391},{"krate":0,"index":6392},{"krate":0,"index":6393},{"krate":0,"index":6394},{"krate":0,"index":6395},{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6398},{"krate":0,"index":6399},{"krate":0,"index":6400},{"krate":0,"index":6401},{"krate":0,"index":12892},{"krate":0,"index":6402},{"krate":0,"index":6403},{"krate":0,"index":6404},{"krate":0,"index":6405},{"krate":0,"index":6878},{"krate":0,"index":6886},{"krate":0,"index":6889},{"krate":0,"index":6894},{"krate":0,"index":6897},{"krate":0,"index":6901},{"krate":0,"index":6899},{"krate":0,"index":6903},{"krate":0,"index":6907},{"krate":0,"index":6910},{"krate":0,"index":6917},{"krate":0,"index":6406},{"krate":0,"index":6407},{"krate":0,"index":6435},{"krate":0,"index":6437},{"krate":0,"index":6440},{"krate":0,"index":6444},{"krate":0,"index":6454},{"krate":0,"index":6457},{"krate":0,"index":6459}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9486955,"byte_end":9486987,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9486988,"byte_end":9486991,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9486992,"byte_end":9487032,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487033,"byte_end":9487036,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487037,"byte_end":9487074,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6878},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9491385,"byte_end":9491395,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":6880},{"krate":0,"index":6881},{"krate":0,"index":6882},{"krate":0,"index":6883},{"krate":0,"index":6884},{"krate":0,"index":6885}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487315,"byte_end":9487347,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487348,"byte_end":9487351,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487352,"byte_end":9487429,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487430,"byte_end":9487470,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487471,"byte_end":9487474,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487475,"byte_end":9487486,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487487,"byte_end":9487490,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487491,"byte_end":9487558,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487559,"byte_end":9487639,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487640,"byte_end":9487718,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487719,"byte_end":9487755,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487756,"byte_end":9487759,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487760,"byte_end":9487830,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll_expired`] is called. If an entry has reached its","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487831,"byte_end":9487917,"line_start":30,"line_end":30,"column_start":1,"column_end":87}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487918,"byte_end":9487991,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9487992,"byte_end":9488061,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488062,"byte_end":9488065,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488066,"byte_end":9488095,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488096,"byte_end":9488099,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`DelayQueue::poll_expired`]. If no delays have","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488100,"byte_end":9488190,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488191,"byte_end":9488271,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488272,"byte_end":9488348,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488349,"byte_end":9488361,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488362,"byte_end":9488365,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488366,"byte_end":9488445,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488446,"byte_end":9488523,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488524,"byte_end":9488600,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488601,"byte_end":9488634,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488635,"byte_end":9488638,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488639,"byte_end":9488717,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488718,"byte_end":9488794,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488795,"byte_end":9488873,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488874,"byte_end":9488913,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488914,"byte_end":9488917,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488918,"byte_end":9488938,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488939,"byte_end":9488942,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9488943,"byte_end":9489041,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489042,"byte_end":9489139,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489140,"byte_end":9489181,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489182,"byte_end":9489185,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489186,"byte_end":9489286,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489287,"byte_end":9489352,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489353,"byte_end":9489356,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489357,"byte_end":9489439,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489440,"byte_end":9489467,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489468,"byte_end":9489471,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489472,"byte_end":9489483,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489484,"byte_end":9489487,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489488,"byte_end":9489535,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489536,"byte_end":9489539,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489540,"byte_end":9489558,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489559,"byte_end":9489613,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489614,"byte_end":9489617,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489618,"byte_end":9489641,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489642,"byte_end":9489676,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489677,"byte_end":9489712,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489713,"byte_end":9489741,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489742,"byte_end":9489771,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489772,"byte_end":9489798,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489799,"byte_end":9489802,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489803,"byte_end":9489821,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489822,"byte_end":9489884,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489885,"byte_end":9489927,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489928,"byte_end":9489933,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489934,"byte_end":9489937,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489938,"byte_end":9489967,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489968,"byte_end":9489971,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489972,"byte_end":9489988,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9489989,"byte_end":9490048,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490049,"byte_end":9490089,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490090,"byte_end":9490158,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490159,"byte_end":9490162,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490163,"byte_end":9490216,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490217,"byte_end":9490226,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490227,"byte_end":9490230,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490231,"byte_end":9490288,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490289,"byte_end":9490322,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490323,"byte_end":9490360,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490361,"byte_end":9490370,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490371,"byte_end":9490374,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490375,"byte_end":9490421,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490422,"byte_end":9490490,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490491,"byte_end":9490543,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490544,"byte_end":9490557,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490558,"byte_end":9490567,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490568,"byte_end":9490571,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490572,"byte_end":9490655,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490656,"byte_end":9490733,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490734,"byte_end":9490767,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490768,"byte_end":9490821,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490822,"byte_end":9490835,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490836,"byte_end":9490839,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490840,"byte_end":9490871,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490872,"byte_end":9490881,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490882,"byte_end":9490887,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490888,"byte_end":9490895,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490896,"byte_end":9490899,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490900,"byte_end":9490935,"line_start":114,"line_end":114,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490936,"byte_end":9490977,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9490978,"byte_end":9491001,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9491002,"byte_end":9491078,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9491079,"byte_end":9491126,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ [`Stream::poll_expired`]: method@Self::poll_expired","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9491127,"byte_end":9491182,"line_start":119,"line_end":119,"column_start":1,"column_end":56}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9491183,"byte_end":9491220,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9491221,"byte_end":9491259,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: slab","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9491260,"byte_end":9491278,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9491279,"byte_end":9491318,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9491319,"byte_end":9491356,"line_start":124,"line_end":124,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6889},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9492110,"byte_end":9492117,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":6891},{"krate":0,"index":6892},{"krate":0,"index":6893}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9491892,"byte_end":9491950,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9491951,"byte_end":9491954,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll_expired`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9491955,"byte_end":9492011,"line_start":149,"line_end":149,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9492012,"byte_end":9492015,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll_expired`]: method@DelayQueue::poll_expired","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9492016,"byte_end":9492081,"line_start":151,"line_end":151,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6897},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9492585,"byte_end":9492588,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":6898}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9492285,"byte_end":9492331,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9492332,"byte_end":9492335,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9492336,"byte_end":9492417,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9492418,"byte_end":9492453,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9492454,"byte_end":9492457,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9492458,"byte_end":9492495,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9492496,"byte_end":9492549,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6409},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493566,"byte_end":9493569,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493266,"byte_end":9493304,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493309,"byte_end":9493312,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493317,"byte_end":9493390,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493395,"byte_end":9493398,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493403,"byte_end":9493417,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493422,"byte_end":9493425,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493430,"byte_end":9493441,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493446,"byte_end":9493480,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493485,"byte_end":9493542,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493547,"byte_end":9493554,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6410},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494487,"byte_end":9494500,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493639,"byte_end":9493706,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493711,"byte_end":9493714,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493719,"byte_end":9493790,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493795,"byte_end":9493864,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493869,"byte_end":9493881,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493886,"byte_end":9493889,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493894,"byte_end":9493908,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493913,"byte_end":9493916,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493921,"byte_end":9493932,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493937,"byte_end":9493971,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493976,"byte_end":9494006,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494011,"byte_end":9494014,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494019,"byte_end":9494039,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494044,"byte_end":9494067,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494072,"byte_end":9494132,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494137,"byte_end":9494140,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494145,"byte_end":9494208,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494213,"byte_end":9494237,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494242,"byte_end":9494300,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494305,"byte_end":9494314,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494319,"byte_end":9494322,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494327,"byte_end":9494390,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494395,"byte_end":9494451,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494456,"byte_end":9494463,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494468,"byte_end":9494475,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6411},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496568,"byte_end":9496577,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494799,"byte_end":9494872,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494877,"byte_end":9494886,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494891,"byte_end":9494894,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494899,"byte_end":9494973,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9494978,"byte_end":9494998,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495003,"byte_end":9495006,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495011,"byte_end":9495086,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495091,"byte_end":9495169,"line_start":263,"line_end":263,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495174,"byte_end":9495238,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495243,"byte_end":9495246,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495251,"byte_end":9495326,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495331,"byte_end":9495406,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495411,"byte_end":9495489,"line_start":268,"line_end":268,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495494,"byte_end":9495567,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495572,"byte_end":9495648,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495653,"byte_end":9495687,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495692,"byte_end":9495695,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495700,"byte_end":9495752,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495757,"byte_end":9495760,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495765,"byte_end":9495777,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495782,"byte_end":9495785,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495790,"byte_end":9495850,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495855,"byte_end":9495858,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495863,"byte_end":9495877,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495882,"byte_end":9495885,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495890,"byte_end":9495905,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495910,"byte_end":9495913,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495918,"byte_end":9495929,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495934,"byte_end":9495987,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9495992,"byte_end":9495995,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496000,"byte_end":9496020,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496025,"byte_end":9496048,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496053,"byte_end":9496101,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496106,"byte_end":9496146,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496151,"byte_end":9496211,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496216,"byte_end":9496219,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496224,"byte_end":9496251,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496256,"byte_end":9496300,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496305,"byte_end":9496348,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496353,"byte_end":9496360,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496365,"byte_end":9496372,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496377,"byte_end":9496380,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496385,"byte_end":9496432,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496437,"byte_end":9496472,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496477,"byte_end":9496510,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496515,"byte_end":9496538,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9496543,"byte_end":9496556,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6412},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9497937,"byte_end":9497949,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9497729,"byte_end":9497804,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9497809,"byte_end":9497885,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9497890,"byte_end":9497925,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6415},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9500353,"byte_end":9500359,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9498566,"byte_end":9498643,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9498648,"byte_end":9498660,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9498665,"byte_end":9498668,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9498673,"byte_end":9498742,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9498747,"byte_end":9498775,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9498780,"byte_end":9498783,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9498788,"byte_end":9498863,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9498868,"byte_end":9498946,"line_start":370,"line_end":370,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9498951,"byte_end":9499015,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499020,"byte_end":9499023,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499028,"byte_end":9499103,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499108,"byte_end":9499183,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499188,"byte_end":9499266,"line_start":375,"line_end":375,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499271,"byte_end":9499344,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499349,"byte_end":9499425,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499430,"byte_end":9499464,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499469,"byte_end":9499472,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499477,"byte_end":9499529,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499534,"byte_end":9499537,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499542,"byte_end":9499554,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499559,"byte_end":9499562,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499567,"byte_end":9499642,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499647,"byte_end":9499660,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499665,"byte_end":9499668,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499673,"byte_end":9499687,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499692,"byte_end":9499695,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499700,"byte_end":9499715,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499720,"byte_end":9499723,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499728,"byte_end":9499739,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499744,"byte_end":9499776,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499781,"byte_end":9499809,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499814,"byte_end":9499817,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499822,"byte_end":9499842,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499847,"byte_end":9499870,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499875,"byte_end":9499923,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9499928,"byte_end":9499996,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9500001,"byte_end":9500004,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9500009,"byte_end":9500036,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9500041,"byte_end":9500085,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9500090,"byte_end":9500133,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9500138,"byte_end":9500145,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9500150,"byte_end":9500157,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9500162,"byte_end":9500165,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9500170,"byte_end":9500217,"line_start":406,"line_end":406,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9500222,"byte_end":9500257,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9500262,"byte_end":9500295,"line_start":408,"line_end":408,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9500300,"byte_end":9500323,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9500328,"byte_end":9500341,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6422},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502436,"byte_end":9502442,"line_start":474,"line_end":474,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501582,"byte_end":9501640,"line_start":446,"line_end":446,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501645,"byte_end":9501648,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501653,"byte_end":9501726,"line_start":448,"line_end":448,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501731,"byte_end":9501804,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501809,"byte_end":9501826,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501831,"byte_end":9501834,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501839,"byte_end":9501851,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501856,"byte_end":9501859,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501864,"byte_end":9501927,"line_start":454,"line_end":454,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501932,"byte_end":9501935,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501940,"byte_end":9501954,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501959,"byte_end":9501962,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501967,"byte_end":9501982,"line_start":458,"line_end":458,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501987,"byte_end":9501990,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9501995,"byte_end":9502006,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502011,"byte_end":9502043,"line_start":461,"line_end":461,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502048,"byte_end":9502076,"line_start":462,"line_end":462,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502081,"byte_end":9502084,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502089,"byte_end":9502109,"line_start":464,"line_end":464,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502114,"byte_end":9502137,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502142,"byte_end":9502190,"line_start":466,"line_end":466,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502195,"byte_end":9502263,"line_start":467,"line_end":467,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502268,"byte_end":9502271,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502276,"byte_end":9502303,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502308,"byte_end":9502352,"line_start":470,"line_end":470,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502357,"byte_end":9502400,"line_start":471,"line_end":471,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502405,"byte_end":9502412,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502417,"byte_end":9502424,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6423},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503850,"byte_end":9503858,"line_start":518,"line_end":518,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502736,"byte_end":9502809,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502814,"byte_end":9502817,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502822,"byte_end":9502897,"line_start":487,"line_end":487,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502902,"byte_end":9502919,"line_start":488,"line_end":488,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502924,"byte_end":9502927,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9502932,"byte_end":9503007,"line_start":490,"line_end":490,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503012,"byte_end":9503088,"line_start":491,"line_end":491,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503093,"byte_end":9503108,"line_start":492,"line_end":492,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503113,"byte_end":9503116,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503121,"byte_end":9503133,"line_start":494,"line_end":494,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503138,"byte_end":9503141,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503146,"byte_end":9503220,"line_start":496,"line_end":496,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503225,"byte_end":9503256,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503261,"byte_end":9503264,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503269,"byte_end":9503283,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503288,"byte_end":9503291,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503296,"byte_end":9503311,"line_start":501,"line_end":501,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503316,"byte_end":9503319,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503324,"byte_end":9503335,"line_start":503,"line_end":503,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503340,"byte_end":9503393,"line_start":504,"line_end":504,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503398,"byte_end":9503401,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503406,"byte_end":9503426,"line_start":506,"line_end":506,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503431,"byte_end":9503454,"line_start":507,"line_end":507,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503459,"byte_end":9503507,"line_start":508,"line_end":508,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503512,"byte_end":9503580,"line_start":509,"line_end":509,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503585,"byte_end":9503588,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503593,"byte_end":9503650,"line_start":511,"line_end":511,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503655,"byte_end":9503658,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503663,"byte_end":9503740,"line_start":513,"line_end":513,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503745,"byte_end":9503748,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503753,"byte_end":9503814,"line_start":515,"line_end":515,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503819,"byte_end":9503826,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9503831,"byte_end":9503838,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6426},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505726,"byte_end":9505731,"line_start":575,"line_end":575,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9504576,"byte_end":9504644,"line_start":540,"line_end":540,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9504649,"byte_end":9504663,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9504668,"byte_end":9504671,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9504676,"byte_end":9504751,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9504756,"byte_end":9504776,"line_start":544,"line_end":544,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9504781,"byte_end":9504784,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9504789,"byte_end":9504859,"line_start":546,"line_end":546,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9504864,"byte_end":9504934,"line_start":547,"line_end":547,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9504939,"byte_end":9504967,"line_start":548,"line_end":548,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9504972,"byte_end":9504975,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9504980,"byte_end":9504992,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9504997,"byte_end":9505000,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505005,"byte_end":9505080,"line_start":552,"line_end":552,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505085,"byte_end":9505140,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505145,"byte_end":9505148,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505153,"byte_end":9505167,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505172,"byte_end":9505175,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505180,"byte_end":9505195,"line_start":557,"line_end":557,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505200,"byte_end":9505203,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505208,"byte_end":9505219,"line_start":559,"line_end":559,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505224,"byte_end":9505256,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505261,"byte_end":9505289,"line_start":561,"line_end":561,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505294,"byte_end":9505297,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505302,"byte_end":9505322,"line_start":563,"line_end":563,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505327,"byte_end":9505350,"line_start":564,"line_end":564,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505355,"byte_end":9505403,"line_start":565,"line_end":565,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505408,"byte_end":9505476,"line_start":566,"line_end":566,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505481,"byte_end":9505484,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505489,"byte_end":9505546,"line_start":568,"line_end":568,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505551,"byte_end":9505554,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505559,"byte_end":9505616,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505621,"byte_end":9505624,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505629,"byte_end":9505690,"line_start":572,"line_end":572,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505695,"byte_end":9505702,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505707,"byte_end":9505714,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6427},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506597,"byte_end":9506602,"line_start":606,"line_end":606,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505840,"byte_end":9505881,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505886,"byte_end":9505889,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll_expired`] will return `Ok(Ready(None))`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505894,"byte_end":9505968,"line_start":581,"line_end":581,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505973,"byte_end":9505976,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9505981,"byte_end":9506047,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506052,"byte_end":9506055,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506060,"byte_end":9506107,"line_start":585,"line_end":585,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506112,"byte_end":9506115,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506120,"byte_end":9506134,"line_start":587,"line_end":587,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506139,"byte_end":9506142,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506147,"byte_end":9506158,"line_start":589,"line_end":589,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506163,"byte_end":9506195,"line_start":590,"line_end":590,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506200,"byte_end":9506228,"line_start":591,"line_end":591,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506233,"byte_end":9506236,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506241,"byte_end":9506261,"line_start":593,"line_end":593,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506266,"byte_end":9506289,"line_start":594,"line_end":594,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506294,"byte_end":9506342,"line_start":595,"line_end":595,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506347,"byte_end":9506350,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506355,"byte_end":9506413,"line_start":597,"line_end":597,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506418,"byte_end":9506421,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506426,"byte_end":9506467,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506472,"byte_end":9506475,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506480,"byte_end":9506508,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506513,"byte_end":9506516,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506521,"byte_end":9506561,"line_start":603,"line_end":603,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506566,"byte_end":9506573,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506578,"byte_end":9506585,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6428},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507074,"byte_end":9507082,"line_start":623,"line_end":623,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506757,"byte_end":9506832,"line_start":613,"line_end":613,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506837,"byte_end":9506840,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506845,"byte_end":9506859,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506864,"byte_end":9506867,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506872,"byte_end":9506883,"line_start":617,"line_end":617,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506888,"byte_end":9506920,"line_start":618,"line_end":618,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506925,"byte_end":9506928,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9506933,"byte_end":9507002,"line_start":620,"line_end":620,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507007,"byte_end":9507050,"line_start":621,"line_end":621,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507055,"byte_end":9507062,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6429},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507650,"byte_end":9507653,"line_start":643,"line_end":643,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507141,"byte_end":9507199,"line_start":627,"line_end":627,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507204,"byte_end":9507207,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507212,"byte_end":9507226,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507231,"byte_end":9507234,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507239,"byte_end":9507250,"line_start":631,"line_end":631,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507255,"byte_end":9507287,"line_start":632,"line_end":632,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507292,"byte_end":9507320,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507325,"byte_end":9507328,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507333,"byte_end":9507353,"line_start":635,"line_end":635,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507358,"byte_end":9507381,"line_start":636,"line_end":636,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507386,"byte_end":9507463,"line_start":637,"line_end":637,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507468,"byte_end":9507509,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507514,"byte_end":9507568,"line_start":639,"line_end":639,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507573,"byte_end":9507614,"line_start":640,"line_end":640,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507619,"byte_end":9507626,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507631,"byte_end":9507638,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6430},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508862,"byte_end":9508869,"line_start":680,"line_end":680,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507707,"byte_end":9507778,"line_start":647,"line_end":647,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507783,"byte_end":9507806,"line_start":648,"line_end":648,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507811,"byte_end":9507814,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507819,"byte_end":9507894,"line_start":650,"line_end":650,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507899,"byte_end":9507975,"line_start":651,"line_end":651,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9507980,"byte_end":9508056,"line_start":652,"line_end":652,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508061,"byte_end":9508137,"line_start":653,"line_end":653,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508142,"byte_end":9508165,"line_start":654,"line_end":654,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508170,"byte_end":9508173,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508178,"byte_end":9508250,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508255,"byte_end":9508288,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508293,"byte_end":9508296,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508301,"byte_end":9508313,"line_start":659,"line_end":659,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508318,"byte_end":9508321,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508326,"byte_end":9508398,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508403,"byte_end":9508425,"line_start":662,"line_end":662,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508430,"byte_end":9508433,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508438,"byte_end":9508452,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508457,"byte_end":9508460,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508465,"byte_end":9508472,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508477,"byte_end":9508509,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508514,"byte_end":9508542,"line_start":668,"line_end":668,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508547,"byte_end":9508550,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508555,"byte_end":9508575,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508580,"byte_end":9508603,"line_start":671,"line_end":671,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508608,"byte_end":9508656,"line_start":672,"line_end":672,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508661,"byte_end":9508664,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508669,"byte_end":9508730,"line_start":674,"line_end":674,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508735,"byte_end":9508767,"line_start":675,"line_end":675,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508772,"byte_end":9508775,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508780,"byte_end":9508826,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508831,"byte_end":9508838,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508843,"byte_end":9508850,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6431},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509585,"byte_end":9509593,"line_start":704,"line_end":704,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9508952,"byte_end":9509006,"line_start":684,"line_end":684,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509011,"byte_end":9509014,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509019,"byte_end":9509093,"line_start":686,"line_end":686,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509098,"byte_end":9509154,"line_start":687,"line_end":687,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509159,"byte_end":9509162,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509167,"byte_end":9509181,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509186,"byte_end":9509189,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509194,"byte_end":9509201,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509206,"byte_end":9509238,"line_start":692,"line_end":692,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509243,"byte_end":9509271,"line_start":693,"line_end":693,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509276,"byte_end":9509279,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509284,"byte_end":9509304,"line_start":695,"line_end":695,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509309,"byte_end":9509332,"line_start":696,"line_end":696,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509337,"byte_end":9509385,"line_start":697,"line_end":697,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509390,"byte_end":9509430,"line_start":698,"line_end":698,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509435,"byte_end":9509438,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509443,"byte_end":9509503,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509508,"byte_end":9509549,"line_start":701,"line_end":701,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509554,"byte_end":9509561,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9509566,"byte_end":9509573,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6461},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9514256,"byte_end":9514263,"line_start":877,"line_end":877,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9514201,"byte_end":9514244,"line_start":876,"line_end":876,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6462},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9514372,"byte_end":9514379,"line_start":882,"line_end":882,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9514309,"byte_end":9514360,"line_start":881,"line_end":881,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6463},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9514497,"byte_end":9514507,"line_start":887,"line_end":887,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9514437,"byte_end":9514485,"line_start":886,"line_end":886,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6464},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9514618,"byte_end":9514626,"line_start":892,"line_end":892,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9514550,"byte_end":9514606,"line_start":891,"line_end":891,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":6476},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515204,"byte_end":9515215,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"pub fn delay_until(Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9514830,"byte_end":9514868,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9514869,"byte_end":9514872,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9514873,"byte_end":9514948,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9514949,"byte_end":9515026,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515027,"byte_end":9515062,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515063,"byte_end":9515066,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515067,"byte_end":9515085,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515086,"byte_end":9515089,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515090,"byte_end":9515166,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515167,"byte_end":9515196,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":6477},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516281,"byte_end":9516290,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"pub fn delay_for(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515354,"byte_end":9515393,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515394,"byte_end":9515397,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515398,"byte_end":9515473,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515474,"byte_end":9515509,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515510,"byte_end":9515513,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515514,"byte_end":9515589,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515590,"byte_end":9515667,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515668,"byte_end":9515703,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515704,"byte_end":9515707,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515708,"byte_end":9515771,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515772,"byte_end":9515775,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515776,"byte_end":9515794,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515795,"byte_end":9515798,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515799,"byte_end":9515875,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515876,"byte_end":9515905,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515906,"byte_end":9515909,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515910,"byte_end":9515924,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515925,"byte_end":9515928,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515929,"byte_end":9515976,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515977,"byte_end":9515980,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515981,"byte_end":9515988,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9515989,"byte_end":9516032,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516033,"byte_end":9516036,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516037,"byte_end":9516055,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516056,"byte_end":9516077,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516078,"byte_end":9516130,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516131,"byte_end":9516171,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516172,"byte_end":9516177,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516178,"byte_end":9516185,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516186,"byte_end":9516189,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516190,"byte_end":9516231,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6920},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516550,"byte_end":9516555,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":6921}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516368,"byte_end":9516423,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516424,"byte_end":9516453,"line_start":60,"line_end":60,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516471,"byte_end":9516538,"line_start":62,"line_end":62,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6480},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516995,"byte_end":9517003,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516925,"byte_end":9516983,"line_start":76,"line_end":76,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6481},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9517207,"byte_end":9517217,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9517072,"byte_end":9517117,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9517122,"byte_end":9517125,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9517130,"byte_end":9517195,"line_start":83,"line_end":83,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6482},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9517606,"byte_end":9517611,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"pub fn reset(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9517285,"byte_end":9517335,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9517340,"byte_end":9517343,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9517348,"byte_end":9517422,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9517427,"byte_end":9517494,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9517499,"byte_end":9517502,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9517507,"byte_end":9517575,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9517580,"byte_end":9517594,"line_start":94,"line_end":94,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6979},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9552174,"byte_end":9552179,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551061,"byte_end":9551112,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551113,"byte_end":9551116,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551117,"byte_end":9551178,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551179,"byte_end":9551182,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551183,"byte_end":9551257,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551258,"byte_end":9551337,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551338,"byte_end":9551413,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551414,"byte_end":9551489,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551490,"byte_end":9551518,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551519,"byte_end":9551522,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551523,"byte_end":9551600,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551601,"byte_end":9551679,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551680,"byte_end":9551756,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551757,"byte_end":9551837,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551838,"byte_end":9551915,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551916,"byte_end":9551997,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9551998,"byte_end":9552080,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9552081,"byte_end":9552084,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9552085,"byte_end":9552145,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6675},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9552380,"byte_end":9552388,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9552317,"byte_end":9552368,"line_start":36,"line_end":36,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6676},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9552520,"byte_end":9552531,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9552437,"byte_end":9552508,"line_start":41,"line_end":41,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6677},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9552719,"byte_end":9552730,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9552653,"byte_end":9552707,"line_start":49,"line_end":49,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6678},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9552867,"byte_end":9552881,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9552781,"byte_end":9552855,"line_start":54,"line_end":54,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":6679},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9553072,"byte_end":9553079,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9553005,"byte_end":9553060,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6680},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9553215,"byte_end":9553225,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9553127,"byte_end":9553203,"line_start":67,"line_end":67,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":6999},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554439,"byte_end":9554446,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":7000}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554243,"byte_end":9554303,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554304,"byte_end":9554366,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6693},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554693,"byte_end":9554696,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554500,"byte_end":9554546,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554551,"byte_end":9554554,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554559,"byte_end":9554573,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554578,"byte_end":9554581,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554586,"byte_end":9554593,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554598,"byte_end":9554627,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554632,"byte_end":9554635,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554640,"byte_end":9554669,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554674,"byte_end":9554681,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6694},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554822,"byte_end":9554830,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554746,"byte_end":9554810,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6695},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554966,"byte_end":9554974,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554904,"byte_end":9554954,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6696},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555218,"byte_end":9555232,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555033,"byte_end":9555105,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555110,"byte_end":9555113,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555118,"byte_end":9555130,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555135,"byte_end":9555138,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555143,"byte_end":9555206,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6697},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555923,"byte_end":9555945,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555328,"byte_end":9555403,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555408,"byte_end":9555456,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555461,"byte_end":9555464,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555469,"byte_end":9555483,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555488,"byte_end":9555491,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555496,"byte_end":9555503,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555508,"byte_end":9555560,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555565,"byte_end":9555568,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555573,"byte_end":9555591,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555596,"byte_end":9555617,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555622,"byte_end":9555655,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555660,"byte_end":9555705,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555710,"byte_end":9555747,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555752,"byte_end":9555814,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555819,"byte_end":9555889,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555894,"byte_end":9555899,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9555904,"byte_end":9555911,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6698},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556668,"byte_end":9556693,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556057,"byte_end":9556132,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556137,"byte_end":9556196,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556201,"byte_end":9556204,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556209,"byte_end":9556223,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556228,"byte_end":9556231,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556236,"byte_end":9556243,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556248,"byte_end":9556300,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556305,"byte_end":9556308,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556313,"byte_end":9556331,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556336,"byte_end":9556357,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556362,"byte_end":9556395,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556400,"byte_end":9556445,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556450,"byte_end":9556487,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556492,"byte_end":9556557,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556562,"byte_end":9556634,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556639,"byte_end":9556644,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556649,"byte_end":9556656,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6699},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557464,"byte_end":9557471,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556800,"byte_end":9556870,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556875,"byte_end":9556878,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556883,"byte_end":9556895,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556900,"byte_end":9556903,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556908,"byte_end":9556976,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9556981,"byte_end":9557047,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557052,"byte_end":9557079,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557084,"byte_end":9557087,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557092,"byte_end":9557106,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557111,"byte_end":9557114,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557119,"byte_end":9557126,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557131,"byte_end":9557183,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557188,"byte_end":9557191,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557196,"byte_end":9557214,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557219,"byte_end":9557240,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557245,"byte_end":9557282,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557287,"byte_end":9557335,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557340,"byte_end":9557376,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557381,"byte_end":9557430,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557435,"byte_end":9557440,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557445,"byte_end":9557452,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6700},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557752,"byte_end":9557763,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557535,"byte_end":9557610,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557615,"byte_end":9557686,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557691,"byte_end":9557740,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6701},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9558102,"byte_end":9558113,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557885,"byte_end":9557960,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9557965,"byte_end":9558036,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9558041,"byte_end":9558090,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":6737},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561577,"byte_end":9561585,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9559835,"byte_end":9559912,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9559913,"byte_end":9559944,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9559945,"byte_end":9559948,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9559949,"byte_end":9560029,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560030,"byte_end":9560069,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560070,"byte_end":9560073,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560074,"byte_end":9560147,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560148,"byte_end":9560151,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560152,"byte_end":9560164,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560165,"byte_end":9560168,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560169,"byte_end":9560214,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560215,"byte_end":9560218,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560219,"byte_end":9560233,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560234,"byte_end":9560237,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560238,"byte_end":9560245,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560246,"byte_end":9560284,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560285,"byte_end":9560288,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560289,"byte_end":9560307,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560308,"byte_end":9560329,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560330,"byte_end":9560399,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560400,"byte_end":9560403,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560404,"byte_end":9560434,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560435,"byte_end":9560465,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560466,"byte_end":9560496,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560497,"byte_end":9560500,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560501,"byte_end":9560544,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560545,"byte_end":9560550,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560551,"byte_end":9560558,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560559,"byte_end":9560562,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560563,"byte_end":9560637,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560638,"byte_end":9560641,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`delay_for`] is that an `interval`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560642,"byte_end":9560719,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560720,"byte_end":9560795,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560796,"byte_end":9560872,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560873,"byte_end":9560934,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560935,"byte_end":9560938,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`delay_for`], the task","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9560939,"byte_end":9561017,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561018,"byte_end":9561088,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561089,"byte_end":9561101,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561102,"byte_end":9561105,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561106,"byte_end":9561113,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561114,"byte_end":9561134,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561135,"byte_end":9561138,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561139,"byte_end":9561180,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561181,"byte_end":9561207,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::delay_for(time::Duration::from_secs(1)).await","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561208,"byte_end":9561267,"line_start":53,"line_end":53,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561268,"byte_end":9561273,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561274,"byte_end":9561277,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561278,"byte_end":9561296,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561297,"byte_end":9561318,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561319,"byte_end":9561391,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561392,"byte_end":9561416,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561417,"byte_end":9561451,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561452,"byte_end":9561497,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561498,"byte_end":9561507,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561508,"byte_end":9561513,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561514,"byte_end":9561521,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561522,"byte_end":9561525,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`delay_for`]: crate::time::delay_for()","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561526,"byte_end":9561569,"line_start":66,"line_end":66,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":6738},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562474,"byte_end":9562485,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561735,"byte_end":9561808,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561809,"byte_end":9561846,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561847,"byte_end":9561850,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561851,"byte_end":9561931,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561932,"byte_end":9561971,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561972,"byte_end":9561975,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561976,"byte_end":9561988,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561989,"byte_end":9561992,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9561993,"byte_end":9562038,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562039,"byte_end":9562042,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562043,"byte_end":9562057,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562058,"byte_end":9562061,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562062,"byte_end":9562069,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562070,"byte_end":9562124,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562125,"byte_end":9562128,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562129,"byte_end":9562147,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562148,"byte_end":9562169,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562170,"byte_end":9562233,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562234,"byte_end":9562307,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562308,"byte_end":9562311,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562312,"byte_end":9562342,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562343,"byte_end":9562373,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562374,"byte_end":9562404,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562405,"byte_end":9562408,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562409,"byte_end":9562452,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562453,"byte_end":9562458,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562459,"byte_end":9562466,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7022},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562934,"byte_end":9562942,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":7023},{"krate":0,"index":7024}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562683,"byte_end":9562762,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562763,"byte_end":9562766,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type only implements the [`Stream`] trait if the \"stream\" feature is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562767,"byte_end":9562844,"line_start":111,"line_end":111,"column_start":1,"column_end":78}},{"value":"/ enabled.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562845,"byte_end":9562857,"line_start":112,"line_end":112,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562858,"byte_end":9562861,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait@crate::stream::Stream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9562862,"byte_end":9562905,"line_start":114,"line_end":114,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":6740},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563187,"byte_end":9563196,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6741},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9564288,"byte_end":9564292,"line_start":163,"line_end":163,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563683,"byte_end":9563752,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563757,"byte_end":9563760,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563765,"byte_end":9563779,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563784,"byte_end":9563787,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563792,"byte_end":9563799,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563804,"byte_end":9563824,"line_start":147,"line_end":147,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563829,"byte_end":9563832,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563837,"byte_end":9563865,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563870,"byte_end":9563873,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563878,"byte_end":9563896,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563901,"byte_end":9563922,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563927,"byte_end":9563996,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9564001,"byte_end":9564004,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9564009,"byte_end":9564039,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9564044,"byte_end":9564074,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9564079,"byte_end":9564109,"line_start":157,"line_end":157,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9564114,"byte_end":9564117,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9564122,"byte_end":9564165,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9564170,"byte_end":9564175,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9564180,"byte_end":9564187,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9564192,"byte_end":9564232,"line_start":162,"line_end":162,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":6765},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565974,"byte_end":9565981,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9564959,"byte_end":9565036,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565037,"byte_end":9565040,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565041,"byte_end":9565120,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565121,"byte_end":9565193,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565194,"byte_end":9565207,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565208,"byte_end":9565211,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565212,"byte_end":9565229,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565230,"byte_end":9565233,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565234,"byte_end":9565312,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565313,"byte_end":9565343,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565344,"byte_end":9565347,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565348,"byte_end":9565428,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565429,"byte_end":9565456,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565457,"byte_end":9565460,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565461,"byte_end":9565475,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565476,"byte_end":9565479,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565480,"byte_end":9565540,"line_start":31,"line_end":31,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565541,"byte_end":9565544,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565545,"byte_end":9565556,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565557,"byte_end":9565586,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565587,"byte_end":9565616,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565617,"byte_end":9565620,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565621,"byte_end":9565649,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565650,"byte_end":9565653,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565654,"byte_end":9565676,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565677,"byte_end":9565715,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565716,"byte_end":9565743,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565744,"byte_end":9565747,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565748,"byte_end":9565821,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565822,"byte_end":9565888,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565889,"byte_end":9565944,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565945,"byte_end":9565950,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565951,"byte_end":9565958,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9565959,"byte_end":9565966,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6767},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9567203,"byte_end":9567213,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566172,"byte_end":9566244,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566245,"byte_end":9566248,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566249,"byte_end":9566326,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566327,"byte_end":9566382,"line_start":60,"line_end":60,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566383,"byte_end":9566386,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566387,"byte_end":9566404,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566405,"byte_end":9566408,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566409,"byte_end":9566487,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566488,"byte_end":9566518,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566519,"byte_end":9566522,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566523,"byte_end":9566603,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566604,"byte_end":9566631,"line_start":68,"line_end":68,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566632,"byte_end":9566635,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566636,"byte_end":9566650,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566651,"byte_end":9566654,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566655,"byte_end":9566715,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566716,"byte_end":9566719,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566720,"byte_end":9566731,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566732,"byte_end":9566775,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566776,"byte_end":9566805,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566806,"byte_end":9566809,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566810,"byte_end":9566838,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566839,"byte_end":9566842,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566843,"byte_end":9566865,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566866,"byte_end":9566904,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566905,"byte_end":9566932,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566933,"byte_end":9566936,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9566937,"byte_end":9567015,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9567016,"byte_end":9567030,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9567031,"byte_end":9567117,"line_start":86,"line_end":86,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9567118,"byte_end":9567173,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9567174,"byte_end":9567179,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9567180,"byte_end":9567187,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9567188,"byte_end":9567195,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7414},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9567588,"byte_end":9567595,"line_start":107,"line_end":107,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7416},{"krate":0,"index":7417}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7027},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9567752,"byte_end":9567759,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9567680,"byte_end":9567712,"line_start":115,"line_end":115,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6774},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9568110,"byte_end":9568117,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9568037,"byte_end":9568098,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6775},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9568245,"byte_end":9568252,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9568164,"byte_end":9568233,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6776},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9568381,"byte_end":9568391,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9568311,"byte_end":9568369,"line_start":142,"line_end":142,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":7049},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586524,"byte_end":9586532,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"pub fn throttle<T>(Duration, T) -> Throttle<T> where T: Stream","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9585950,"byte_end":9586009,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586010,"byte_end":9586079,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586080,"byte_end":9586083,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586084,"byte_end":9586097,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586098,"byte_end":9586101,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586102,"byte_end":9586132,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586133,"byte_end":9586151,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586152,"byte_end":9586180,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586181,"byte_end":9586214,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586215,"byte_end":9586245,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586246,"byte_end":9586249,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586250,"byte_end":9586272,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586273,"byte_end":9586364,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586365,"byte_end":9586368,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586369,"byte_end":9586379,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586380,"byte_end":9586442,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586443,"byte_end":9586494,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586495,"byte_end":9586500,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586501,"byte_end":9586508,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9586509,"byte_end":9586516,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7366},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587027,"byte_end":9587035,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":7368},{"krate":0,"index":7369},{"krate":0,"index":7370},{"krate":0,"index":7371}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.11/src/lib.rs","byte_start":8533268,"byte_end":8533277,"line_start":222,"line_end":222,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7053},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587502,"byte_end":9587509,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587395,"byte_end":9587468,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587473,"byte_end":9587490,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":7054},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587818,"byte_end":9587825,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587557,"byte_end":9587635,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587640,"byte_end":9587660,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587665,"byte_end":9587668,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587673,"byte_end":9587753,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587758,"byte_end":9587806,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":7055},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9588120,"byte_end":9588130,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587885,"byte_end":9587947,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587952,"byte_end":9587955,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587960,"byte_end":9588037,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9588042,"byte_end":9588108,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":6823},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":9585083,"byte_end":9585088,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":6822},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":9585033,"byte_end":9585073,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":6824},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":9585146,"byte_end":9585154,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":6822},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":9585119,"byte_end":9585136,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":6825},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":9585243,"byte_end":9585248,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":6822},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":9585161,"byte_end":9585233,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":779},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182194,"byte_end":182200,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182103,"byte_end":182132,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182137,"byte_end":182140,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182145,"byte_end":182184,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":780},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182230,"byte_end":182236,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182207,"byte_end":182220,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":29760,"byte_end":29769,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":29785,"byte_end":29794,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":30144,"byte_end":30149,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31905,"byte_end":31914,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32077,"byte_end":32086,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":33273,"byte_end":33282,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34036,"byte_end":34042,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34256,"byte_end":34262,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34404,"byte_end":34410,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34941,"byte_end":34946,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34973,"byte_end":34978,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/try_join.rs","byte_start":36175,"byte_end":36183,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50006,"byte_end":50009,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50169,"byte_end":50172,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50801,"byte_end":50807,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":56771,"byte_end":56774,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":56917,"byte_end":56920,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":57716,"byte_end":57722,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60148,"byte_end":60151,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60294,"byte_end":60297,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60751,"byte_end":60757,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":68662,"byte_end":68665,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":68813,"byte_end":68816,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":69385,"byte_end":69388,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":69896,"byte_end":69902,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":70415,"byte_end":70421,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":70937,"byte_end":70943,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":71454,"byte_end":71460,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":8721622,"byte_end":8721633,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":8722392,"byte_end":8722403,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":8722610,"byte_end":8722621,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":8725243,"byte_end":8725254,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8710942,"byte_end":8710948,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8713809,"byte_end":8713815,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8714214,"byte_end":8714220,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8714356,"byte_end":8714362,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8715523,"byte_end":8715529,"line_start":228,"line_end":228,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8715607,"byte_end":8715613,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8715748,"byte_end":8715753,"line_start":242,"line_end":242,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8717297,"byte_end":8717306,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8731812,"byte_end":8731823,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8739614,"byte_end":8739625,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8740118,"byte_end":8740129,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8741210,"byte_end":8741221,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8741394,"byte_end":8741405,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743553,"byte_end":8743565,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1153},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8754435,"byte_end":8754447,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8754472,"byte_end":8754484,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8754503,"byte_end":8754515,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8756297,"byte_end":8756305,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8757222,"byte_end":8757231,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8757481,"byte_end":8757489,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8758044,"byte_end":8758053,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759002,"byte_end":8759007,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759400,"byte_end":8759405,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759658,"byte_end":8759663,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759786,"byte_end":8759794,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759831,"byte_end":8759840,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759877,"byte_end":8759885,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759922,"byte_end":8759931,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759974,"byte_end":8759982,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8760150,"byte_end":8760159,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":8760849,"byte_end":8760853,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":8772948,"byte_end":8772949,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8812381,"byte_end":8812382,"line_start":1118,"line_end":1118,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8814140,"byte_end":8814141,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8849488,"byte_end":8849489,"line_start":1006,"line_end":1006,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8850905,"byte_end":8850914,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8853093,"byte_end":8853102,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8854078,"byte_end":8854087,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1479},{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8854918,"byte_end":8854927,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8855643,"byte_end":8855652,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8857159,"byte_end":8857168,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8859005,"byte_end":8859014,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8859156,"byte_end":8859165,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8859877,"byte_end":8859886,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8860416,"byte_end":8860425,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8860904,"byte_end":8860913,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8862867,"byte_end":8862876,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8865154,"byte_end":8865163,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8866053,"byte_end":8866062,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1568},{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8866544,"byte_end":8866553,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8866840,"byte_end":8866849,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868018,"byte_end":8868023,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8869163,"byte_end":8869168,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8869447,"byte_end":8869452,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1606},{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8870275,"byte_end":8870280,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":8873323,"byte_end":8873327,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1626},{"krate":0,"index":1627}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":8876437,"byte_end":8876442,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1643}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":8876771,"byte_end":8876776,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":8877009,"byte_end":8877014,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/flush.rs","byte_start":8877835,"byte_end":8877840,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879020,"byte_end":8879025,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8880277,"byte_end":8880282,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8881029,"byte_end":8881034,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8884194,"byte_end":8884206,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8884755,"byte_end":8884767,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8885492,"byte_end":8885504,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8885664,"byte_end":8885668,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8886074,"byte_end":8886078,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8886904,"byte_end":8886908,"line_start":188,"line_end":188,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read.rs","byte_start":8888836,"byte_end":8888840,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1746},{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_buf.rs","byte_start":8889901,"byte_end":8889908,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1764},{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_exact.rs","byte_start":8891273,"byte_end":8891282,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1782}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_line.rs","byte_start":8899560,"byte_end":8899568,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_end.rs","byte_start":8905488,"byte_end":8905497,"line_start":147,"line_end":147,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1844},{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_string.rs","byte_start":8908236,"byte_end":8908248,"line_start":66,"line_end":66,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","byte_start":8910688,"byte_end":8910697,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/repeat.rs","byte_start":8912531,"byte_end":8912537,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/shutdown.rs","byte_start":8913659,"byte_end":8913667,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":8915500,"byte_end":8915504,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":8916014,"byte_end":8916018,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8916983,"byte_end":8916988,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917727,"byte_end":8917732,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8918511,"byte_end":8918516,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1955},{"krate":0,"index":1956}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8932055,"byte_end":8932067,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8932572,"byte_end":8932584,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2465}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8934123,"byte_end":8934135,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2469},{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937664,"byte_end":8937676,"line_start":75,"line_end":75,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8919684,"byte_end":8919688,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8921316,"byte_end":8921320,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1983},{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8921977,"byte_end":8921981,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1987},{"krate":0,"index":1988}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write.rs","byte_start":8923538,"byte_end":8923543,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2003},{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_all.rs","byte_start":8924336,"byte_end":8924344,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2019},{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_buf.rs","byte_start":8925852,"byte_end":8925860,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2037},{"krate":0,"index":2038}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74569,"byte_end":74579,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74619,"byte_end":74629,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74910,"byte_end":74922,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74962,"byte_end":74974,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":75234,"byte_end":75246,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":75286,"byte_end":75298,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941359,"byte_end":8941370,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2690},{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8952065,"byte_end":8952076,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2709},{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8952391,"byte_end":8952402,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8952842,"byte_end":8952853,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2715},{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8953179,"byte_end":8953190,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8953406,"byte_end":8953417,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":8954249,"byte_end":8954257,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2735},{"krate":0,"index":2736}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":8954895,"byte_end":8954903,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2738},{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957066,"byte_end":8957074,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2757},{"krate":0,"index":2758}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959529,"byte_end":8959537,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2763},{"krate":0,"index":2764}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959857,"byte_end":8959866,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2769},{"krate":0,"index":2770}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8960679,"byte_end":8960687,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2772}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8960781,"byte_end":8960790,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2774}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8963878,"byte_end":8963890,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2799}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964093,"byte_end":8964105,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964115,"byte_end":8964128,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966962,"byte_end":8966975,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2809},{"krate":0,"index":2810}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8967280,"byte_end":8967294,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2812},{"krate":0,"index":2813}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8967977,"byte_end":8967991,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8968151,"byte_end":8968165,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8969104,"byte_end":8969117,"line_start":262,"line_end":262,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2823}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8969213,"byte_end":8969227,"line_start":268,"line_end":268,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2825}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8971362,"byte_end":8971371,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2864},{"krate":0,"index":2869},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2905}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8996428,"byte_end":8996437,"line_start":838,"line_end":838,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8996873,"byte_end":8996882,"line_start":852,"line_end":852,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2916},{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8997235,"byte_end":8997244,"line_start":866,"line_end":866,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2919},{"krate":0,"index":2920}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8997558,"byte_end":8997567,"line_start":880,"line_end":880,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2925},{"krate":0,"index":2926}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8998311,"byte_end":8998320,"line_start":909,"line_end":909,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8998534,"byte_end":8998543,"line_start":920,"line_end":920,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2933}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":8999549,"byte_end":8999558,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2997},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3012},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3048}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9014219,"byte_end":9014228,"line_start":398,"line_end":398,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3050},{"krate":0,"index":3051}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9014664,"byte_end":9014673,"line_start":412,"line_end":412,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3053},{"krate":0,"index":3054}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9014993,"byte_end":9015002,"line_start":424,"line_end":424,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3056}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9015221,"byte_end":9015230,"line_start":435,"line_end":435,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3061}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9017316,"byte_end":9017328,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9017531,"byte_end":9017543,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9018070,"byte_end":9018078,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3082}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019710,"byte_end":9019718,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3087},{"krate":0,"index":3088},{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9021038,"byte_end":9021046,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3097}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9021137,"byte_end":9021145,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3099}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9022403,"byte_end":9022415,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3151},{"krate":0,"index":3153},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3156},{"krate":0,"index":3157},{"krate":0,"index":3159},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3191}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032836,"byte_end":9032848,"line_start":314,"line_end":314,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3193},{"krate":0,"index":3194}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9033290,"byte_end":9033302,"line_start":328,"line_end":328,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3196},{"krate":0,"index":3197}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9033631,"byte_end":9033643,"line_start":340,"line_end":340,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3199}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9033768,"byte_end":9033780,"line_start":346,"line_end":346,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034717,"byte_end":9034725,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3210},{"krate":0,"index":3214}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9035117,"byte_end":9035125,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3219},{"krate":0,"index":3224}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9035628,"byte_end":9035636,"line_start":58,"line_end":58,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9035736,"byte_end":9035744,"line_start":64,"line_end":64,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3231}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9037221,"byte_end":9037233,"line_start":53,"line_end":53,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9037436,"byte_end":9037448,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038012,"byte_end":9038025,"line_start":77,"line_end":77,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3254}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038810,"byte_end":9038823,"line_start":98,"line_end":98,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3265},{"krate":0,"index":3269}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9039993,"byte_end":9040006,"line_start":130,"line_end":130,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3271}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9040175,"byte_end":9040188,"line_start":138,"line_end":138,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3273}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9040289,"byte_end":9040302,"line_start":144,"line_end":144,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3275}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":9040647,"byte_end":9040655,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3293},{"krate":0,"index":3294}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":9041387,"byte_end":9041395,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3296},{"krate":0,"index":3297}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9043522,"byte_end":9043534,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3320},{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":3331}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9048238,"byte_end":9048250,"line_start":184,"line_end":184,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3333},{"krate":0,"index":3334}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9048566,"byte_end":9048578,"line_start":196,"line_end":196,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3336},{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9049020,"byte_end":9049032,"line_start":210,"line_end":210,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3339},{"krate":0,"index":3340}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9049352,"byte_end":9049364,"line_start":222,"line_end":222,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3342}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9049489,"byte_end":9049501,"line_start":228,"line_end":228,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3344}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9051478,"byte_end":9051486,"line_start":53,"line_end":53,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3360},{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9051806,"byte_end":9051815,"line_start":67,"line_end":67,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3363},{"krate":0,"index":3364},{"krate":0,"index":3365}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9052299,"byte_end":9052307,"line_start":85,"line_end":85,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3367}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9052403,"byte_end":9052412,"line_start":91,"line_end":91,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3369}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055517,"byte_end":9055529,"line_start":89,"line_end":89,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3392}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055732,"byte_end":9055744,"line_start":98,"line_end":98,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055754,"byte_end":9055767,"line_start":100,"line_end":100,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9056183,"byte_end":9056196,"line_start":111,"line_end":111,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3397},{"krate":0,"index":3398}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9056501,"byte_end":9056515,"line_start":125,"line_end":125,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3400},{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9057213,"byte_end":9057227,"line_start":144,"line_end":144,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3403}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9057387,"byte_end":9057401,"line_start":152,"line_end":152,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":3407}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9058135,"byte_end":9058148,"line_start":177,"line_end":177,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3409}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9058246,"byte_end":9058260,"line_start":183,"line_end":183,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3411}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9059281,"byte_end":9059291,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3453},{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3468}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9063638,"byte_end":9063648,"line_start":143,"line_end":143,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3470},{"krate":0,"index":3471}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9064086,"byte_end":9064096,"line_start":157,"line_end":157,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3473},{"krate":0,"index":3474}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9064409,"byte_end":9064419,"line_start":169,"line_end":169,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3476},{"krate":0,"index":3477}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9064733,"byte_end":9064743,"line_start":183,"line_end":183,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9065230,"byte_end":9065240,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3483},{"krate":0,"index":3484}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9066757,"byte_end":9066767,"line_start":247,"line_end":247,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3486}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9066892,"byte_end":9066902,"line_start":253,"line_end":253,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3488}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":84816,"byte_end":84825,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":84999,"byte_end":85008,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":85157,"byte_end":85166,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85510,"byte_end":85519,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85544,"byte_end":85553,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85563,"byte_end":85572,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":86058,"byte_end":86067,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":86352,"byte_end":86361,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86702,"byte_end":86711,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86736,"byte_end":86745,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86755,"byte_end":86764,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86943,"byte_end":86952,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":87237,"byte_end":87246,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89361,"byte_end":89369,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89394,"byte_end":89402,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89412,"byte_end":89420,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89595,"byte_end":89603,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89887,"byte_end":89895,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90235,"byte_end":90246,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90271,"byte_end":90282,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90292,"byte_end":90303,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90986,"byte_end":90997,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":91287,"byte_end":91298,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":91462,"byte_end":91473,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/unsafe_cell.rs","byte_start":91661,"byte_end":91671,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":9071259,"byte_end":9071265,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3626},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":9072222,"byte_end":9072228,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3635}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":9072442,"byte_end":9072448,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3639}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":96885,"byte_end":96895,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":97160,"byte_end":97170,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":97696,"byte_end":97701,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":102493,"byte_end":102503,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":102612,"byte_end":102624,"line_start":209,"line_end":209,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":103011,"byte_end":103027,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":3672}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":103874,"byte_end":103890,"line_start":253,"line_end":253,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3681},{"krate":0,"index":3683},{"krate":0,"index":3685}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":104558,"byte_end":104570,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3688}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":104782,"byte_end":104787,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3690},{"krate":0,"index":3691}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":95987,"byte_end":95990,"line_start":111,"line_end":111,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":96079,"byte_end":96082,"line_start":117,"line_end":117,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/context.rs","byte_start":127466,"byte_end":127475,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9074574,"byte_end":9074588,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3762},{"krate":0,"index":3763},{"krate":0,"index":3764},{"krate":0,"index":3766}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9078127,"byte_end":9078132,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3784}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9078819,"byte_end":9078833,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3788}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9079720,"byte_end":9079734,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3792}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9079900,"byte_end":9079907,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3794},{"krate":0,"index":3796}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9080365,"byte_end":9080372,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3798}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9080540,"byte_end":9080543,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3800},{"krate":0,"index":3802},{"krate":0,"index":3805}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9081641,"byte_end":9081647,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3808},{"krate":0,"index":3809}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":9089330,"byte_end":9089336,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":9089361,"byte_end":9089367,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":9089726,"byte_end":9089730,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3865}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":9090508,"byte_end":9090512,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3869},{"krate":0,"index":3871},{"krate":0,"index":3873},{"krate":0,"index":3875},{"krate":0,"index":3877},{"krate":0,"index":3879},{"krate":0,"index":3882},{"krate":0,"index":3884},{"krate":0,"index":3886}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9096894,"byte_end":9096903,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3910}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099982,"byte_end":9099991,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3912}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9100234,"byte_end":9100243,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3914}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9100520,"byte_end":9100529,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9100563,"byte_end":9100568,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3917}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":9101246,"byte_end":9101253,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":9101730,"byte_end":9101737,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3952},{"krate":0,"index":3963},{"krate":0,"index":3967},{"krate":0,"index":3970},{"krate":0,"index":3973},{"krate":0,"index":3974},{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":3977},{"krate":0,"index":3978},{"krate":0,"index":3980},{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":9103908,"byte_end":9103913,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3962}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9116217,"byte_end":9116227,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9116264,"byte_end":9116274,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9116290,"byte_end":9116300,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4001}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9116476,"byte_end":9116486,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9116513,"byte_end":9116523,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4006},{"krate":0,"index":4007}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9117749,"byte_end":9117759,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4010}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9118025,"byte_end":9118035,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4013}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":9119282,"byte_end":9119289,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4039},{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4046},{"krate":0,"index":4047},{"krate":0,"index":4048}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":9120820,"byte_end":9120827,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4050}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":9120917,"byte_end":9120924,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":9123606,"byte_end":9123611,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4092},{"krate":0,"index":4093},{"krate":0,"index":4094},{"krate":0,"index":4096},{"krate":0,"index":4098},{"krate":0,"index":4100},{"krate":0,"index":4102},{"krate":0,"index":4103},{"krate":0,"index":4105},{"krate":0,"index":4109},{"krate":0,"index":4111},{"krate":0,"index":4113},{"krate":0,"index":4115},{"krate":0,"index":4118},{"krate":0,"index":4119}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":9132467,"byte_end":9132475,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4125},{"krate":0,"index":4126},{"krate":0,"index":4127},{"krate":0,"index":4128},{"krate":0,"index":4129},{"krate":0,"index":4130},{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4135},{"krate":0,"index":4136},{"krate":0,"index":4137},{"krate":0,"index":4138},{"krate":0,"index":4139},{"krate":0,"index":4140}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":9134352,"byte_end":9134357,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4142}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":9134516,"byte_end":9134524,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4144}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/waker.rs","byte_start":9136342,"byte_end":9136350,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4170},{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9082660,"byte_end":9082664,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9082695,"byte_end":9082699,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9082836,"byte_end":9082844,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9082885,"byte_end":9082893,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9084817,"byte_end":9084821,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4222},{"krate":0,"index":4223}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9085713,"byte_end":9085717,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4226}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9085886,"byte_end":9085894,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4229},{"krate":0,"index":4230}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9086180,"byte_end":9086184,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9086424,"byte_end":9086428,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4236}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9086580,"byte_end":9086588,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4239}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9086804,"byte_end":9086808,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4246}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/mod.rs","byte_start":128705,"byte_end":128717,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4277},{"krate":0,"index":4278}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130892,"byte_end":130899,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":138819,"byte_end":138826,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4295}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139375,"byte_end":139382,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4297}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139902,"byte_end":139909,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4299},{"krate":0,"index":4300}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":143805,"byte_end":143812,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":143891,"byte_end":143898,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":144693,"byte_end":144705,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":147583,"byte_end":147604,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4324}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":148434,"byte_end":148439,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4327}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":150547,"byte_end":150552,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":150682,"byte_end":150687,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151745,"byte_end":151751,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154851,"byte_end":154857,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4348},{"krate":0,"index":4350}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164217,"byte_end":164232,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164380,"byte_end":164395,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164553,"byte_end":164568,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/shell.rs","byte_start":166857,"byte_end":166862,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/shell.rs","byte_start":167468,"byte_end":167474,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/spawner.rs","byte_start":168071,"byte_end":168078,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/spawner.rs","byte_start":168321,"byte_end":168328,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4377}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116406,"byte_end":116413,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":172931,"byte_end":172937,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":174478,"byte_end":174488,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":175335,"byte_end":175351,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4414}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":175483,"byte_end":175499,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4416}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":177239,"byte_end":177245,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4421},{"krate":0,"index":4422}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":9141948,"byte_end":9141951,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4451},{"krate":0,"index":4452}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":9142673,"byte_end":9142681,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4459}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":9142771,"byte_end":9142779,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4462},{"krate":0,"index":4464},{"krate":0,"index":4465}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":9144932,"byte_end":9144939,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4472},{"krate":0,"index":4473}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":9145047,"byte_end":9145054,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4475},{"krate":0,"index":4476},{"krate":0,"index":4477},{"krate":0,"index":4478}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9151126,"byte_end":9151135,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4516}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9151249,"byte_end":9151258,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4519},{"krate":0,"index":4521}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9151646,"byte_end":9151657,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4526}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9151943,"byte_end":9151953,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4528},{"krate":0,"index":4529},{"krate":0,"index":4530},{"krate":0,"index":4531},{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4534},{"krate":0,"index":4535},{"krate":0,"index":4536},{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4539}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9155749,"byte_end":9155759,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4545}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9158108,"byte_end":9158114,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4552}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9158399,"byte_end":9158405,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4554},{"krate":0,"index":4555}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164594,"byte_end":9164600,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4559},{"krate":0,"index":4564}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9166458,"byte_end":9166464,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4602},{"krate":0,"index":4603}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":9201456,"byte_end":9201465,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4616}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":9201611,"byte_end":9201620,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":9201659,"byte_end":9201668,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4623},{"krate":0,"index":4624}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":9202619,"byte_end":9202628,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4637}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":9202774,"byte_end":9202783,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":9202822,"byte_end":9202831,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4644},{"krate":0,"index":4645}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":9203754,"byte_end":9203759,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4659}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":9203939,"byte_end":9203944,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4663},{"krate":0,"index":4664},{"krate":0,"index":4666}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205522,"byte_end":9205529,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4687}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205813,"byte_end":9205820,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4691},{"krate":0,"index":4692}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9206796,"byte_end":9206802,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9206857,"byte_end":9206863,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4704},{"krate":0,"index":4705},{"krate":0,"index":4706},{"krate":0,"index":4707}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9207252,"byte_end":9207255,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9207301,"byte_end":9207304,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4712},{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4715}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9207687,"byte_end":9207690,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9207738,"byte_end":9207741,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4720},{"krate":0,"index":4721},{"krate":0,"index":4722},{"krate":0,"index":4723}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9208256,"byte_end":9208262,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9208351,"byte_end":9208357,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4732},{"krate":0,"index":4733},{"krate":0,"index":4734},{"krate":0,"index":4735}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9209435,"byte_end":9209440,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9209488,"byte_end":9209493,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4740},{"krate":0,"index":4741},{"krate":0,"index":4742},{"krate":0,"index":4743}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9209893,"byte_end":9209901,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9209949,"byte_end":9209957,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4748},{"krate":0,"index":4749},{"krate":0,"index":4750},{"krate":0,"index":4751}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211228,"byte_end":9211233,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211264,"byte_end":9211269,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211300,"byte_end":9211305,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211848,"byte_end":9211853,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4778},{"krate":0,"index":4779},{"krate":0,"index":4780}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":9212467,"byte_end":9212473,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4795}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":9212691,"byte_end":9212697,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4799}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":9212816,"byte_end":9212822,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4803},{"krate":0,"index":4804},{"krate":0,"index":4805}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":9213908,"byte_end":9213917,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4818}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":9214138,"byte_end":9214147,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4822}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":9214269,"byte_end":9214278,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4829}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":9215350,"byte_end":9215360,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4843}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":9215556,"byte_end":9215566,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4848},{"krate":0,"index":4849}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":9216465,"byte_end":9216469,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4860}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":9216629,"byte_end":9216633,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4863},{"krate":0,"index":4864},{"krate":0,"index":4865}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217576,"byte_end":9217580,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9218242,"byte_end":9218246,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":9218992,"byte_end":9218995,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4896}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":9219184,"byte_end":9219187,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4900}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":9219308,"byte_end":9219311,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4905},{"krate":0,"index":4906},{"krate":0,"index":4909}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":9220156,"byte_end":9220161,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4923}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":9220415,"byte_end":9220420,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4927},{"krate":0,"index":4928},{"krate":0,"index":4929}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":9221932,"byte_end":9221936,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":9221970,"byte_end":9221974,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4947}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":9222115,"byte_end":9222119,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4950},{"krate":0,"index":4951}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222615,"byte_end":9222619,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9223246,"byte_end":9223250,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4971}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9223797,"byte_end":9223804,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9223835,"byte_end":9223842,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9223873,"byte_end":9223880,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224573,"byte_end":9224580,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4992},{"krate":0,"index":4993},{"krate":0,"index":4994}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230245,"byte_end":9230254,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5009},{"krate":0,"index":5010},{"krate":0,"index":5011},{"krate":0,"index":5014},{"krate":0,"index":5017},{"krate":0,"index":5020},{"krate":0,"index":5021},{"krate":0,"index":5022},{"krate":0,"index":5023},{"krate":0,"index":5024},{"krate":0,"index":5025},{"krate":0,"index":5027}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9237255,"byte_end":9237264,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5032}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9238803,"byte_end":9238812,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5037},{"krate":0,"index":5038},{"krate":0,"index":5039}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":9240028,"byte_end":9240032,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5051}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":9240242,"byte_end":9240246,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5054}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":9240379,"byte_end":9240383,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5057},{"krate":0,"index":5058},{"krate":0,"index":5059}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":9241609,"byte_end":9241618,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5073}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":9241839,"byte_end":9241848,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5077}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":9242033,"byte_end":9242042,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5081},{"krate":0,"index":5082},{"krate":0,"index":5083}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":9243391,"byte_end":9243398,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":9243432,"byte_end":9243439,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5099}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":9243646,"byte_end":9243653,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":5104},{"krate":0,"index":5105}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":9244263,"byte_end":9244267,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5118}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":9244477,"byte_end":9244481,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5121}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":9244614,"byte_end":9244618,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5124},{"krate":0,"index":5125},{"krate":0,"index":5127}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":9246137,"byte_end":9246146,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5140}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":9246406,"byte_end":9246415,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5144}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":9246608,"byte_end":9246617,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5148},{"krate":0,"index":5149},{"krate":0,"index":5152}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":9278283,"byte_end":9278290,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5285}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":9278645,"byte_end":9278652,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5288},{"krate":0,"index":5289},{"krate":0,"index":5290}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9200686,"byte_end":9200688,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":9324713,"byte_end":9324724,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5432},{"krate":0,"index":5433},{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5439},{"krate":0,"index":5440}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":9330651,"byte_end":9330662,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5443}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":9330748,"byte_end":9330759,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5445}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":9330892,"byte_end":9330903,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":9330928,"byte_end":9330939,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":9331035,"byte_end":9331040,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5452},{"krate":0,"index":5453}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9297367,"byte_end":9297376,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5316}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9297538,"byte_end":9297547,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9297616,"byte_end":9297628,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5319}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9297927,"byte_end":9297939,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9299750,"byte_end":9299756,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5332},{"krate":0,"index":5335},{"krate":0,"index":5337},{"krate":0,"index":5342}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9306057,"byte_end":9306063,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5345}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9306202,"byte_end":9306210,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5348},{"krate":0,"index":5349}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9310601,"byte_end":9310609,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5352}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9310756,"byte_end":9310764,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5355},{"krate":0,"index":5356}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9311227,"byte_end":9311232,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5359},{"krate":0,"index":5360},{"krate":0,"index":5362},{"krate":0,"index":5363},{"krate":0,"index":5365},{"krate":0,"index":5369},{"krate":0,"index":5373},{"krate":0,"index":5375},{"krate":0,"index":5377},{"krate":0,"index":5379}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9315604,"byte_end":9315609,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9315646,"byte_end":9315651,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9315676,"byte_end":9315681,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5387}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9316050,"byte_end":9316055,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5391}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9316450,"byte_end":9316455,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5398},{"krate":0,"index":5399},{"krate":0,"index":5400},{"krate":0,"index":5401},{"krate":0,"index":5402},{"krate":0,"index":5403},{"krate":0,"index":5404},{"krate":0,"index":5405},{"krate":0,"index":5406},{"krate":0,"index":5407},{"krate":0,"index":5408},{"krate":0,"index":5409},{"krate":0,"index":5410}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9318168,"byte_end":9318173,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5412}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":9337569,"byte_end":9337574,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5549},{"krate":0,"index":5550},{"krate":0,"index":5551},{"krate":0,"index":5552},{"krate":0,"index":5554},{"krate":0,"index":5556},{"krate":0,"index":5557},{"krate":0,"index":5558},{"krate":0,"index":5560},{"krate":0,"index":5561},{"krate":0,"index":5562},{"krate":0,"index":5564},{"krate":0,"index":5565},{"krate":0,"index":5566}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":9347556,"byte_end":9347562,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5571}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":9348044,"byte_end":9348050,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5574},{"krate":0,"index":5575}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":9348688,"byte_end":9348694,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5593}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":9348826,"byte_end":9348832,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5596}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":9349239,"byte_end":9349247,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5602}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":9351019,"byte_end":9351027,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":5614},{"krate":0,"index":5615},{"krate":0,"index":5616}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":9353455,"byte_end":9353463,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":9353523,"byte_end":9353531,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6073},{"krate":0,"index":6074}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":9353719,"byte_end":9353725,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5621},{"krate":0,"index":5622},{"krate":0,"index":5627},{"krate":0,"index":5628},{"krate":0,"index":5633},{"krate":0,"index":5635}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9365115,"byte_end":9365117,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5670}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9365518,"byte_end":9365520,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5678}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9365827,"byte_end":9365836,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5681}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9366098,"byte_end":9366110,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5684}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9367895,"byte_end":9367899,"line_start":124,"line_end":124,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5706}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9368532,"byte_end":9368540,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5713}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9368806,"byte_end":9368810,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9368859,"byte_end":9368863,"line_start":158,"line_end":158,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9369342,"byte_end":9369344,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5726},{"krate":0,"index":5727},{"krate":0,"index":5728},{"krate":0,"index":5729}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9370043,"byte_end":9370045,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5732}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9370193,"byte_end":9370195,"line_start":214,"line_end":214,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5735}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9370373,"byte_end":9370375,"line_start":220,"line_end":220,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5739}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9370775,"byte_end":9370777,"line_start":236,"line_end":236,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5743}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9371304,"byte_end":9371306,"line_start":261,"line_end":261,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5747},{"krate":0,"index":5748},{"krate":0,"index":5750},{"krate":0,"index":5754}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9374426,"byte_end":9374428,"line_start":352,"line_end":352,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5760}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9374864,"byte_end":9374868,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5766}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9375332,"byte_end":9375336,"line_start":395,"line_end":395,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5770}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9375885,"byte_end":9375897,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5775}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9377557,"byte_end":9377568,"line_start":485,"line_end":485,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5794},{"krate":0,"index":5795},{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5798},{"krate":0,"index":5799},{"krate":0,"index":5801},{"krate":0,"index":5802},{"krate":0,"index":5803}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":9380312,"byte_end":9380314,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5833},{"krate":0,"index":5834},{"krate":0,"index":5835},{"krate":0,"index":5837}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":9386018,"byte_end":9386020,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5840}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":9386297,"byte_end":9386299,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5843},{"krate":0,"index":5844},{"krate":0,"index":5845},{"krate":0,"index":5846}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":9389698,"byte_end":9389700,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5849}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":9390374,"byte_end":9390389,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5865}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":9390530,"byte_end":9390545,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5868}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":9391003,"byte_end":9391020,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5874}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":9391998,"byte_end":9392015,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5880},{"krate":0,"index":5881},{"krate":0,"index":5882},{"krate":0,"index":5887},{"krate":0,"index":5888}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":9394487,"byte_end":9394504,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5891},{"krate":0,"index":5892}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":9394670,"byte_end":9394685,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5895},{"krate":0,"index":5896}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9395795,"byte_end":9395804,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5906}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9395964,"byte_end":9395973,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9396459,"byte_end":9396471,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9396504,"byte_end":9396516,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5913}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9396856,"byte_end":9396868,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5916}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9397097,"byte_end":9397106,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5918}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9397236,"byte_end":9397245,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9397731,"byte_end":9397743,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5921}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9398049,"byte_end":9398061,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9398218,"byte_end":9398229,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5924}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9398328,"byte_end":9398339,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5926}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9398469,"byte_end":9398480,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9398984,"byte_end":9399000,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9399037,"byte_end":9399053,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6130}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9403870,"byte_end":9403879,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5970},{"krate":0,"index":5971},{"krate":0,"index":5972},{"krate":0,"index":5975},{"krate":0,"index":5977},{"krate":0,"index":5981},{"krate":0,"index":5982},{"krate":0,"index":5983},{"krate":0,"index":5984},{"krate":0,"index":5989},{"krate":0,"index":5990},{"krate":0,"index":5991},{"krate":0,"index":5992}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9420073,"byte_end":9420082,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5994}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9420161,"byte_end":9420170,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5996}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9420548,"byte_end":9420557,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9420582,"byte_end":9420591,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9420629,"byte_end":9420635,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6001},{"krate":0,"index":6003},{"krate":0,"index":6004},{"krate":0,"index":6008},{"krate":0,"index":6010},{"krate":0,"index":6011}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9427041,"byte_end":9427047,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6014}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9427120,"byte_end":9427126,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6016}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9427548,"byte_end":9427560,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6018}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9427740,"byte_end":9427752,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6021}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9427896,"byte_end":9427908,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9427955,"byte_end":9427970,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6024},{"krate":0,"index":6025}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9428500,"byte_end":9428515,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6027}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9428801,"byte_end":9428816,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9428854,"byte_end":9428860,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6030},{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6034},{"krate":0,"index":6035},{"krate":0,"index":6036},{"krate":0,"index":6037},{"krate":0,"index":6038}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9434347,"byte_end":9434355,"line_start":1038,"line_end":1038,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6042},{"krate":0,"index":6043},{"krate":0,"index":6044},{"krate":0,"index":6045},{"krate":0,"index":6046},{"krate":0,"index":6047},{"krate":0,"index":6048},{"krate":0,"index":6049},{"krate":0,"index":6050},{"krate":0,"index":6051},{"krate":0,"index":6052},{"krate":0,"index":6053},{"krate":0,"index":6054},{"krate":0,"index":6055}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9438018,"byte_end":9438026,"line_start":1176,"line_end":1176,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6057}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9438379,"byte_end":9438390,"line_start":1192,"line_end":1192,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6059},{"krate":0,"index":6060},{"krate":0,"index":6061},{"krate":0,"index":6062},{"krate":0,"index":6063},{"krate":0,"index":6064},{"krate":0,"index":6065},{"krate":0,"index":6066}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/yield_now.rs","byte_start":9452172,"byte_end":9452180,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6216},{"krate":0,"index":6217}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9459312,"byte_end":9459320,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6251},{"krate":0,"index":6252},{"krate":0,"index":6254},{"krate":0,"index":6256},{"krate":0,"index":6260},{"krate":0,"index":6262},{"krate":0,"index":6265}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9467162,"byte_end":9467170,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6269}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9467309,"byte_end":9467317,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6271},{"krate":0,"index":6272}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9468282,"byte_end":9468290,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6275}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9468371,"byte_end":9468379,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6277}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9469246,"byte_end":9469254,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6281},{"krate":0,"index":6282}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9470139,"byte_end":9470145,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6286},{"krate":0,"index":6288}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9470708,"byte_end":9470711,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6290},{"krate":0,"index":6292},{"krate":0,"index":6295}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474280,"byte_end":9474288,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6318},{"krate":0,"index":6322},{"krate":0,"index":6325}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9476064,"byte_end":9476072,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6331}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9476280,"byte_end":9476288,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6335}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9476609,"byte_end":9476624,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6339},{"krate":0,"index":6340}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9476925,"byte_end":9476930,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6349}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9477548,"byte_end":9477549,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9477734,"byte_end":9477745,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6356}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9477889,"byte_end":9477900,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6358}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9478047,"byte_end":9478058,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/clock.rs","byte_start":9482643,"byte_end":9482648,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6869},{"krate":0,"index":6870},{"krate":0,"index":6871},{"krate":0,"index":6872}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493246,"byte_end":9493256,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6409},{"krate":0,"index":6410},{"krate":0,"index":6411},{"krate":0,"index":6412},{"krate":0,"index":6415},{"krate":0,"index":6416},{"krate":0,"index":6420},{"krate":0,"index":6422},{"krate":0,"index":6423},{"krate":0,"index":6424},{"krate":0,"index":6426},{"krate":0,"index":6427},{"krate":0,"index":6428},{"krate":0,"index":6429},{"krate":0,"index":6430},{"krate":0,"index":6431},{"krate":0,"index":6432},{"krate":0,"index":6434}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9511250,"byte_end":9511260,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9511288,"byte_end":9511298,"line_start":761,"line_end":761,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6439}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9511435,"byte_end":9511445,"line_start":768,"line_end":768,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6442},{"krate":0,"index":6443}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9511827,"byte_end":9511832,"line_start":778,"line_end":778,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6446},{"krate":0,"index":6447},{"krate":0,"index":6448},{"krate":0,"index":6449},{"krate":0,"index":6450},{"krate":0,"index":6451},{"krate":0,"index":6452},{"krate":0,"index":6453}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9513959,"byte_end":9513964,"line_start":860,"line_end":860,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6456}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9514094,"byte_end":9514097,"line_start":869,"line_end":869,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":6458}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9514184,"byte_end":9514191,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6461},{"krate":0,"index":6462},{"krate":0,"index":6463},{"krate":0,"index":6464}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516729,"byte_end":9516734,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6479},{"krate":0,"index":6480},{"krate":0,"index":6481},{"krate":0,"index":6482}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9517712,"byte_end":9517717,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6484},{"krate":0,"index":6485}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":9531387,"byte_end":9531398,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6500},{"krate":0,"index":6501},{"krate":0,"index":6502},{"krate":0,"index":6503}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":9533376,"byte_end":9533394,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6505},{"krate":0,"index":6506}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":9533990,"byte_end":9534008,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6508}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":9538246,"byte_end":9538251,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6536},{"krate":0,"index":6537},{"krate":0,"index":6538},{"krate":0,"index":6539},{"krate":0,"index":6540},{"krate":0,"index":6541},{"krate":0,"index":6542},{"krate":0,"index":6543},{"krate":0,"index":6544},{"krate":0,"index":6545},{"krate":0,"index":6546},{"krate":0,"index":6547},{"krate":0,"index":6548},{"krate":0,"index":6549}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":9544919,"byte_end":9544924,"line_start":341,"line_end":341,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6552}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":9545132,"byte_end":9545137,"line_start":352,"line_end":352,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":9545162,"byte_end":9545167,"line_start":353,"line_end":353,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/handle.rs","byte_start":9545544,"byte_end":9545550,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6564},{"krate":0,"index":6565},{"krate":0,"index":6566}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/handle.rs","byte_start":9546213,"byte_end":9546219,"line_start":35,"line_end":35,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6568}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/registration.rs","byte_start":9546664,"byte_end":9546676,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6583},{"krate":0,"index":6584},{"krate":0,"index":6585},{"krate":0,"index":6586},{"krate":0,"index":6587}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/registration.rs","byte_start":9547586,"byte_end":9547598,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6590}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/stack.rs","byte_start":9547882,"byte_end":9547887,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6598}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/stack.rs","byte_start":9547978,"byte_end":9547983,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6600},{"krate":0,"index":6601},{"krate":0,"index":6602},{"krate":0,"index":6603},{"krate":0,"index":6604},{"krate":0,"index":6605},{"krate":0,"index":6606},{"krate":0,"index":6607}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":9522682,"byte_end":9522688,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6643},{"krate":0,"index":6644},{"krate":0,"index":6645},{"krate":0,"index":6646},{"krate":0,"index":6647}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":9526385,"byte_end":9526391,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6651},{"krate":0,"index":6652},{"krate":0,"index":6653},{"krate":0,"index":6654},{"krate":0,"index":6655},{"krate":0,"index":6656}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":9528964,"byte_end":9528970,"line_start":335,"line_end":335,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6660}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":9529086,"byte_end":9529091,"line_start":346,"line_end":346,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6662},{"krate":0,"index":6663},{"krate":0,"index":6664},{"krate":0,"index":6665},{"krate":0,"index":6666},{"krate":0,"index":6667}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":9530708,"byte_end":9530713,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6669}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9552305,"byte_end":9552310,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6675},{"krate":0,"index":6676},{"krate":0,"index":6677},{"krate":0,"index":6678},{"krate":0,"index":6679},{"krate":0,"index":6680},{"krate":0,"index":6681},{"krate":0,"index":6682}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9553677,"byte_end":9553682,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9553709,"byte_end":9553714,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6685}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554486,"byte_end":9554493,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6693},{"krate":0,"index":6694},{"krate":0,"index":6695},{"krate":0,"index":6696},{"krate":0,"index":6697},{"krate":0,"index":6698},{"krate":0,"index":6699},{"krate":0,"index":6700},{"krate":0,"index":6701}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9558267,"byte_end":9558274,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6703}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9558403,"byte_end":9558410,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6705}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9558525,"byte_end":9558532,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6707},{"krate":0,"index":6708}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9558697,"byte_end":9558704,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6710}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9558809,"byte_end":9558816,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6712},{"krate":0,"index":6713}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9558957,"byte_end":9558964,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6715},{"krate":0,"index":6716}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9559125,"byte_end":9559132,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6718}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9559239,"byte_end":9559246,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6720}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563128,"byte_end":9563136,"line_start":124,"line_end":124,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6740},{"krate":0,"index":6741}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9564431,"byte_end":9564439,"line_start":169,"line_end":169,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6746},{"krate":0,"index":6747}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9567771,"byte_end":9567778,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6770}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9567907,"byte_end":9567914,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6773},{"krate":0,"index":6774},{"krate":0,"index":6775},{"krate":0,"index":6776}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9568452,"byte_end":9568459,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6779},{"krate":0,"index":6780}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9569037,"byte_end":9569044,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6782}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9569188,"byte_end":9569195,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9569232,"byte_end":9569237,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6785}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587377,"byte_end":9587385,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7053},{"krate":0,"index":7054},{"krate":0,"index":7055}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9588200,"byte_end":9588208,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7058},{"krate":0,"index":7059}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/level.rs","byte_start":9579141,"byte_end":9579146,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6804},{"krate":0,"index":6806},{"krate":0,"index":6807},{"krate":0,"index":6808},{"krate":0,"index":6809},{"krate":0,"index":6810}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/level.rs","byte_start":9583898,"byte_end":9583903,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6813}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/mod.rs","byte_start":9570962,"byte_end":9570967,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6838},{"krate":0,"index":6839},{"krate":0,"index":6840},{"krate":0,"index":6841},{"krate":0,"index":6842},{"krate":0,"index":6844},{"krate":0,"index":6846},{"krate":0,"index":6847},{"krate":0,"index":6848},{"krate":0,"index":6849},{"krate":0,"index":6850},{"krate":0,"index":6851}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/mod.rs","byte_start":9576675,"byte_end":9576679,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6854}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/bit.rs","byte_start":9589041,"byte_end":9589045,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7094},{"krate":0,"index":7095},{"krate":0,"index":7096},{"krate":0,"index":7097},{"krate":0,"index":7098},{"krate":0,"index":7099},{"krate":0,"index":7100}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/bit.rs","byte_start":9590519,"byte_end":9590523,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7102}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/addr.rs","byte_start":9597742,"byte_end":9597749,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7121},{"krate":0,"index":7122},{"krate":0,"index":7123},{"krate":0,"index":7124},{"krate":0,"index":7125},{"krate":0,"index":7126},{"krate":0,"index":7127},{"krate":0,"index":7128}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/generation.rs","byte_start":9600778,"byte_end":9600788,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7140},{"krate":0,"index":7141},{"krate":0,"index":7142},{"krate":0,"index":7143},{"krate":0,"index":7144}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":9601927,"byte_end":9601932,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7165},{"krate":0,"index":7166},{"krate":0,"index":7168}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":9602274,"byte_end":9602280,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7172},{"krate":0,"index":7173},{"krate":0,"index":7175},{"krate":0,"index":7178},{"krate":0,"index":7181},{"krate":0,"index":7184}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":9606232,"byte_end":9606237,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7189}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":9606543,"byte_end":9606549,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7193}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/shard.rs","byte_start":9608692,"byte_end":9608697,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7207},{"krate":0,"index":7210},{"krate":0,"index":7211},{"krate":0,"index":7212},{"krate":0,"index":7213},{"krate":0,"index":7214}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/shard.rs","byte_start":9610376,"byte_end":9610381,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7217}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/slot.rs","byte_start":9610758,"byte_end":9610762,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7230},{"krate":0,"index":7231},{"krate":0,"index":7232},{"krate":0,"index":7233},{"krate":0,"index":7234},{"krate":0,"index":7236}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/stack.rs","byte_start":9611733,"byte_end":9611746,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7248},{"krate":0,"index":7249},{"krate":0,"index":7250}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/stack.rs","byte_start":9612574,"byte_end":9612587,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7253}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":9592121,"byte_end":9592125,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":9592162,"byte_end":9592166,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":9592189,"byte_end":9592193,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7270},{"krate":0,"index":7271},{"krate":0,"index":7272},{"krate":0,"index":7273}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":9593708,"byte_end":9593712,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7276}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":181552,"byte_end":181562,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":181621,"byte_end":181631,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182920,"byte_end":182928,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182965,"byte_end":182973,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":183027,"byte_end":183037,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":186041,"byte_end":186051,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":187389,"byte_end":187397,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":187596,"byte_end":187604,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/rand.rs","byte_start":197676,"byte_end":197684,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/wake.rs","byte_start":199546,"byte_end":199554,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203520,"byte_end":203528,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203778,"byte_end":203786,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203891,"byte_end":203899,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":204208,"byte_end":204218,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14197,"byte_end":14203,"line_start":348,"line_end":348,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/mod.rs","byte_start":16314,"byte_end":16321,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":79}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14258,"byte_end":14264,"line_start":355,"line_end":355,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":83}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14275,"byte_end":14277,"line_start":357,"line_end":357,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":177}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14287,"byte_end":14290,"line_start":358,"line_end":358,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":313}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":72960,"byte_end":72963,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2672}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73067,"byte_end":73070,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2976}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/mod.rs","byte_start":73134,"byte_end":73138,"line_start":45,"line_end":45,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3123}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/mod.rs","byte_start":9021256,"byte_end":9021264,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3124}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14322,"byte_end":14329,"line_start":363,"line_end":363,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":564}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14379,"byte_end":14386,"line_start":369,"line_end":369,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":570}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14437,"byte_end":14443,"line_start":374,"line_end":374,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":4423}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/mod.rs","byte_start":9139118,"byte_end":9139122,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4484}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14474,"byte_end":14480,"line_start":378,"line_end":378,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":4604}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14577,"byte_end":14581,"line_start":389,"line_end":389,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6191}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/lib.rs","byte_start":14635,"byte_end":14639,"line_start":394,"line_end":394,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6385}},{"kind":"Mod","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/mod.rs","byte_start":9480932,"byte_end":9480943,"line_start":99,"line_end":99,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":6388}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":29760,"byte_end":29769,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":29785,"byte_end":29794,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/macros/scoped_tls.rs","byte_start":30144,"byte_end":30149,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":68},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":31905,"byte_end":31914,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":32077,"byte_end":32086,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/maybe_done.rs","byte_start":33273,"byte_end":33282,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":884},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34036,"byte_end":34042,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34256,"byte_end":34262,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/poll_fn.rs","byte_start":34404,"byte_end":34410,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34941,"byte_end":34946,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":897},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/ready.rs","byte_start":34973,"byte_end":34978,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":897},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/future/try_join.rs","byte_start":36175,"byte_end":36183,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":47547,"byte_end":47556,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50006,"byte_end":50009,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50169,"byte_end":50172,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":32460},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_buf_read.rs","byte_start":50801,"byte_end":50807,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":7096},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":56771,"byte_end":56774,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":56917,"byte_end":56920,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":32460},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_read.rs","byte_start":57716,"byte_end":57722,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":7096},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60148,"byte_end":60151,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60294,"byte_end":60297,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":32460},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_seek.rs","byte_start":60751,"byte_end":60757,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":7096},"to":{"krate":0,"index":246}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":68662,"byte_end":68665,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":68813,"byte_end":68816,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":32460},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":69385,"byte_end":69388,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":69896,"byte_end":69902,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":7096},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":70415,"byte_end":70421,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":7096},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":70937,"byte_end":70943,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":7096},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/async_write.rs","byte_start":71454,"byte_end":71460,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":7096},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":8721622,"byte_end":8721633,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1164},"to":{"krate":0,"index":7132}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":8722392,"byte_end":8722403,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1164},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":8722610,"byte_end":8722621,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/scheduled_io.rs","byte_start":8725243,"byte_end":8725254,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1164},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8710942,"byte_end":8710948,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8713809,"byte_end":8713815,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1031},"to":{"krate":0,"index":551}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8714214,"byte_end":8714220,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1031},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8714356,"byte_end":8714362,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8715523,"byte_end":8715529,"line_start":228,"line_end":228,"column_start":17,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1170},"to":{"krate":0,"index":558}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8715607,"byte_end":8715613,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1170},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8715748,"byte_end":8715753,"line_start":242,"line_end":242,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/driver/mod.rs","byte_start":8717297,"byte_end":8717306,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8731812,"byte_end":8731823,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8739614,"byte_end":8739625,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1190},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8740118,"byte_end":8740129,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1190},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8741210,"byte_end":8741221,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1190},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/poll_evented.rs","byte_start":8741394,"byte_end":8741405,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1190},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8743553,"byte_end":8743565,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8754435,"byte_end":8754447,"line_start":329,"line_end":329,"column_start":22,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8754472,"byte_end":8754484,"line_start":330,"line_end":330,"column_start":22,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/registration.rs","byte_start":8754503,"byte_end":8754515,"line_start":332,"line_end":332,"column_start":15,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8756297,"byte_end":8756305,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8757222,"byte_end":8757231,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8757481,"byte_end":8757489,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1311},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8758044,"byte_end":8758053,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1314},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759002,"byte_end":8759007,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759400,"byte_end":8759405,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759658,"byte_end":8759663,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759786,"byte_end":8759794,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1311},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759831,"byte_end":8759840,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759877,"byte_end":8759885,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1311},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759922,"byte_end":8759931,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8759974,"byte_end":8759982,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1311},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/split.rs","byte_start":8760150,"byte_end":8760159,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/seek.rs","byte_start":8760849,"byte_end":8760853,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1319},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":8763915,"byte_end":8763927,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":186},"to":{"krate":0,"index":2053}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_buf_read_ext.rs","byte_start":8772948,"byte_end":8772949,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1343},"to":{"krate":0,"index":2053}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8774976,"byte_end":8774985,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":215},"to":{"krate":0,"index":2061}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_read_ext.rs","byte_start":8812381,"byte_end":8812382,"line_start":1118,"line_end":1118,"column_start":46,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1390},"to":{"krate":0,"index":2061}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8813261,"byte_end":8813270,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":246},"to":{"krate":0,"index":1398}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_seek_ext.rs","byte_start":8814140,"byte_end":8814141,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1401},"to":{"krate":0,"index":1398}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8816198,"byte_end":8816208,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":271},"to":{"krate":0,"index":2113}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/async_write_ext.rs","byte_start":8849488,"byte_end":8849489,"line_start":1006,"line_end":1006,"column_start":48,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1442},"to":{"krate":0,"index":2113}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8850905,"byte_end":8850914,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":10077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8853093,"byte_end":8853102,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":10077},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8854078,"byte_end":8854087,"line_start":135,"line_end":135,"column_start":37,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":10077},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8854918,"byte_end":8854927,"line_start":157,"line_end":157,"column_start":48,"column_end":57},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":10077},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_reader.rs","byte_start":8855643,"byte_end":8855652,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":10077},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8857159,"byte_end":8857168,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":10050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8859005,"byte_end":8859014,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":10050},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8859156,"byte_end":8859165,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":10050},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8859877,"byte_end":8859886,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":10050},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8860416,"byte_end":8860425,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":10050},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_stream.rs","byte_start":8860904,"byte_end":8860913,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":10050},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8862867,"byte_end":8862876,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":10000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8865154,"byte_end":8865163,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":10000},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8866053,"byte_end":8866062,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":10000},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8866544,"byte_end":8866553,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":10000},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/buf_writer.rs","byte_start":8866840,"byte_end":8866849,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":10000},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8868018,"byte_end":8868023,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":9951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8869163,"byte_end":8869168,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":9951},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8869447,"byte_end":8869452,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":9951},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/chain.rs","byte_start":8870275,"byte_end":8870280,"line_start":113,"line_end":113,"column_start":29,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":9951},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/copy.rs","byte_start":8873323,"byte_end":8873327,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2163},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":8876437,"byte_end":8876442,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2179},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":8876771,"byte_end":8876776,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2179},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/empty.rs","byte_start":8877009,"byte_end":8877014,"line_start":73,"line_end":73,"column_start":21,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2179},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/flush.rs","byte_start":8877835,"byte_end":8877840,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2182},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8879020,"byte_end":8879025,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":9912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8880277,"byte_end":8880282,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":9912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/lines.rs","byte_start":8881029,"byte_end":8881034,"line_start":113,"line_end":113,"column_start":49,"column_end":54},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":9912},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8884194,"byte_end":8884206,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2190},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8884755,"byte_end":8884767,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2190},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8885492,"byte_end":8885504,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2190},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8885664,"byte_end":8885668,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8886074,"byte_end":8886078,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2195},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/mem.rs","byte_start":8886904,"byte_end":8886908,"line_start":188,"line_end":188,"column_start":21,"column_end":25},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2195},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read.rs","byte_start":8888836,"byte_end":8888840,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2203},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_buf.rs","byte_start":8889901,"byte_end":8889908,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2212},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_exact.rs","byte_start":8891273,"byte_end":8891282,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2223},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_line.rs","byte_start":8899560,"byte_end":8899568,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2377},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_end.rs","byte_start":8905488,"byte_end":8905497,"line_start":147,"line_end":147,"column_start":20,"column_end":29},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2388},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_to_string.rs","byte_start":8908236,"byte_end":8908248,"line_start":66,"line_end":66,"column_start":20,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2398},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/read_until.rs","byte_start":8910688,"byte_end":8910697,"line_start":66,"line_end":66,"column_start":51,"column_end":60},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2409},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/repeat.rs","byte_start":8912531,"byte_end":8912537,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2421},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/shutdown.rs","byte_start":8913659,"byte_end":8913667,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":8915500,"byte_end":8915504,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2433},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/sink.rs","byte_start":8916014,"byte_end":8916018,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2433},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8916983,"byte_end":8916988,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":9078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8917727,"byte_end":8917732,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":9078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/split.rs","byte_start":8918511,"byte_end":8918516,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":9078},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8932055,"byte_end":8932067,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":9031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8932572,"byte_end":8932584,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":9031},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/stream_reader.rs","byte_start":8934123,"byte_end":8934135,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":9031},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/reader_stream.rs","byte_start":8937664,"byte_end":8937676,"line_start":75,"line_end":75,"column_start":20,"column_end":32},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":8989},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8919684,"byte_end":8919688,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":8949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8921316,"byte_end":8921320,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":8949},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/take.rs","byte_start":8921977,"byte_end":8921981,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":8949},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write.rs","byte_start":8923538,"byte_end":8923543,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2495},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_all.rs","byte_start":8924336,"byte_end":8924344,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2504},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/io/util/write_buf.rs","byte_start":8925852,"byte_end":8925860,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2513},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74102,"byte_end":74119,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":373},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74569,"byte_end":74579,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":1,"index":7250},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74619,"byte_end":74629,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":126}},"from":{"krate":1,"index":7250},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74910,"byte_end":74922,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":127}},"from":{"krate":1,"index":7278},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":74962,"byte_end":74974,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":128}},"from":{"krate":1,"index":7278},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":75234,"byte_end":75246,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":129}},"from":{"krate":1,"index":7281},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/addr.rs","byte_start":75286,"byte_end":75298,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":130}},"from":{"krate":1,"index":7281},"to":{"krate":0,"index":373}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8941359,"byte_end":8941370,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8952065,"byte_end":8952076,"line_start":398,"line_end":398,"column_start":32,"column_end":43},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2937},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8952391,"byte_end":8952402,"line_start":410,"line_end":410,"column_start":41,"column_end":52},"kind":{"Impl":{"id":133}},"from":{"krate":21,"index":1034},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8952842,"byte_end":8952853,"line_start":424,"line_end":424,"column_start":36,"column_end":47},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2937},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8953179,"byte_end":8953190,"line_start":436,"line_end":436,"column_start":21,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2937},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/listener.rs","byte_start":8953406,"byte_end":8953417,"line_start":447,"line_end":447,"column_start":22,"column_end":33},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2937},"to":{"krate":1,"index":8841}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":8954249,"byte_end":8954257,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/incoming.rs","byte_start":8954895,"byte_end":8954903,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2939},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8957066,"byte_end":8957074,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959529,"byte_end":8959537,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2945},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8959857,"byte_end":8959866,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2952},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8960679,"byte_end":8960687,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2945},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split.rs","byte_start":8960781,"byte_end":8960790,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2952},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8963878,"byte_end":8963890,"line_start":90,"line_end":90,"column_start":23,"column_end":35},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2968},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964093,"byte_end":8964105,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2968},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8964115,"byte_end":8964128,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8966962,"byte_end":8966975,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2959},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8967280,"byte_end":8967294,"line_start":202,"line_end":202,"column_start":6,"column_end":20},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8967977,"byte_end":8967991,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2963},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8968151,"byte_end":8968165,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2963},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8969104,"byte_end":8969117,"line_start":262,"line_end":262,"column_start":27,"column_end":40},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2959},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/split_owned.rs","byte_start":8969213,"byte_end":8969227,"line_start":268,"line_end":268,"column_start":27,"column_end":41},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2963},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8971362,"byte_end":8971371,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8996428,"byte_end":8996437,"line_start":838,"line_end":838,"column_start":39,"column_end":48},"kind":{"Impl":{"id":154}},"from":{"krate":21,"index":978},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8996873,"byte_end":8996882,"line_start":852,"line_end":852,"column_start":34,"column_end":43},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2974},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8997235,"byte_end":8997244,"line_start":866,"line_end":866,"column_start":20,"column_end":29},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2974},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8997558,"byte_end":8997567,"line_start":880,"line_end":880,"column_start":21,"column_end":30},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2974},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8998311,"byte_end":8998320,"line_start":909,"line_end":909,"column_start":21,"column_end":30},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2974},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/tcp/stream.rs","byte_start":8998534,"byte_end":8998543,"line_start":920,"line_end":920,"column_start":22,"column_end":31},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2974},"to":{"krate":1,"index":8841}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":8999549,"byte_end":8999558,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9014219,"byte_end":9014228,"line_start":398,"line_end":398,"column_start":39,"column_end":48},"kind":{"Impl":{"id":161}},"from":{"krate":21,"index":1092},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9014664,"byte_end":9014673,"line_start":412,"line_end":412,"column_start":34,"column_end":43},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3105},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9014993,"byte_end":9015002,"line_start":424,"line_end":424,"column_start":21,"column_end":30},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3105},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/socket.rs","byte_start":9015221,"byte_end":9015230,"line_start":435,"line_end":435,"column_start":22,"column_end":31},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3105},"to":{"krate":1,"index":8841}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9017316,"byte_end":9017328,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3117},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9017531,"byte_end":9017543,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3117},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9018070,"byte_end":9018078,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9019710,"byte_end":9019718,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9021038,"byte_end":9021046,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3107},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/udp/split.rs","byte_start":9021137,"byte_end":9021145,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3112},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9022403,"byte_end":9022415,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9032836,"byte_end":9032848,"line_start":314,"line_end":314,"column_start":41,"column_end":53},"kind":{"Impl":{"id":172}},"from":{"krate":30,"index":182},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9033290,"byte_end":9033302,"line_start":328,"line_end":328,"column_start":37,"column_end":49},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3513},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9033631,"byte_end":9033643,"line_start":340,"line_end":340,"column_start":21,"column_end":33},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3513},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/socket.rs","byte_start":9033768,"byte_end":9033780,"line_start":346,"line_end":346,"column_start":18,"column_end":30},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3513},"to":{"krate":1,"index":8841}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9034717,"byte_end":9034725,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9035117,"byte_end":9035125,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9035628,"byte_end":9035636,"line_start":58,"line_end":58,"column_start":30,"column_end":38},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3515},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split.rs","byte_start":9035736,"byte_end":9035744,"line_start":64,"line_end":64,"column_start":30,"column_end":38},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3522},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9037221,"byte_end":9037233,"line_start":53,"line_end":53,"column_start":23,"column_end":35},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3538},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9037436,"byte_end":9037448,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3538},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038012,"byte_end":9038025,"line_start":77,"line_end":77,"column_start":6,"column_end":19},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9038810,"byte_end":9038823,"line_start":98,"line_end":98,"column_start":6,"column_end":19},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9039993,"byte_end":9040006,"line_start":130,"line_end":130,"column_start":15,"column_end":28},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3529},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9040175,"byte_end":9040188,"line_start":138,"line_end":138,"column_start":30,"column_end":43},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3529},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/datagram/split_owned.rs","byte_start":9040289,"byte_end":9040302,"line_start":144,"line_end":144,"column_start":30,"column_end":43},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3534},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":9040647,"byte_end":9040655,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/incoming.rs","byte_start":9041387,"byte_end":9041395,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3544},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9043522,"byte_end":9043534,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9048238,"byte_end":9048250,"line_start":184,"line_end":184,"column_start":32,"column_end":44},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3550},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9048566,"byte_end":9048578,"line_start":196,"line_end":196,"column_start":41,"column_end":53},"kind":{"Impl":{"id":191}},"from":{"krate":30,"index":186},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9049020,"byte_end":9049032,"line_start":210,"line_end":210,"column_start":37,"column_end":49},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3550},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9049352,"byte_end":9049364,"line_start":222,"line_end":222,"column_start":21,"column_end":33},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3550},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/listener.rs","byte_start":9049489,"byte_end":9049501,"line_start":228,"line_end":228,"column_start":18,"column_end":30},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3550},"to":{"krate":1,"index":8841}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9051478,"byte_end":9051486,"line_start":53,"line_end":53,"column_start":20,"column_end":28},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3552},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9051806,"byte_end":9051815,"line_start":67,"line_end":67,"column_start":21,"column_end":30},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3559},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9052299,"byte_end":9052307,"line_start":85,"line_end":85,"column_start":28,"column_end":36},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3552},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split.rs","byte_start":9052403,"byte_end":9052412,"line_start":91,"line_end":91,"column_start":28,"column_end":37},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3559},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055517,"byte_end":9055529,"line_start":89,"line_end":89,"column_start":23,"column_end":35},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3575},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055732,"byte_end":9055744,"line_start":98,"line_end":98,"column_start":16,"column_end":28},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3575},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9055754,"byte_end":9055767,"line_start":100,"line_end":100,"column_start":6,"column_end":19},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9056183,"byte_end":9056196,"line_start":111,"line_end":111,"column_start":20,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3566},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9056501,"byte_end":9056515,"line_start":125,"line_end":125,"column_start":6,"column_end":20},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9057213,"byte_end":9057227,"line_start":144,"line_end":144,"column_start":15,"column_end":29},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3570},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9057387,"byte_end":9057401,"line_start":152,"line_end":152,"column_start":21,"column_end":35},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3570},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9058135,"byte_end":9058148,"line_start":177,"line_end":177,"column_start":28,"column_end":41},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3566},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/split_owned.rs","byte_start":9058246,"byte_end":9058260,"line_start":183,"line_end":183,"column_start":28,"column_end":42},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3570},"to":{"krate":2,"index":1954}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9059281,"byte_end":9059291,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9063638,"byte_end":9063648,"line_start":143,"line_end":143,"column_start":39,"column_end":49},"kind":{"Impl":{"id":209}},"from":{"krate":30,"index":190},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9064086,"byte_end":9064096,"line_start":157,"line_end":157,"column_start":35,"column_end":45},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3581},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9064409,"byte_end":9064419,"line_start":169,"line_end":169,"column_start":20,"column_end":30},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3581},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9064733,"byte_end":9064743,"line_start":183,"line_end":183,"column_start":21,"column_end":31},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3581},"to":{"krate":0,"index":271}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9065230,"byte_end":9065240,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9066757,"byte_end":9066767,"line_start":247,"line_end":247,"column_start":21,"column_end":31},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3581},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/net/unix/stream.rs","byte_start":9066892,"byte_end":9066902,"line_start":253,"line_end":253,"column_start":18,"column_end":28},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3581},"to":{"krate":1,"index":8841}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":84816,"byte_end":84825,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":84999,"byte_end":85008,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_ptr.rs","byte_start":85157,"byte_end":85166,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":383},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85510,"byte_end":85519,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85544,"byte_end":85553,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":85563,"byte_end":85572,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":86058,"byte_end":86067,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u16.rs","byte_start":86352,"byte_end":86361,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86702,"byte_end":86711,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86736,"byte_end":86745,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86755,"byte_end":86764,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":86943,"byte_end":86952,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u32.rs","byte_start":87237,"byte_end":87246,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89361,"byte_end":89369,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89394,"byte_end":89402,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89412,"byte_end":89420,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89595,"byte_end":89603,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_u8.rs","byte_start":89887,"byte_end":89895,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90235,"byte_end":90246,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90271,"byte_end":90282,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90292,"byte_end":90303,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":90986,"byte_end":90997,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":91287,"byte_end":91298,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/atomic_usize.rs","byte_start":91462,"byte_end":91473,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/loom/std/unsafe_cell.rs","byte_start":91661,"byte_end":91671,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":9071259,"byte_end":9071265,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3614},"to":{"krate":0,"index":551}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":9072222,"byte_end":9072228,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3614},"to":{"krate":0,"index":558}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/either.rs","byte_start":9072442,"byte_end":9072448,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3614},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":96885,"byte_end":96895,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":97160,"byte_end":97170,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3641},"to":{"krate":0,"index":551}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":97696,"byte_end":97701,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":102493,"byte_end":102503,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3641},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":102612,"byte_end":102624,"line_start":209,"line_end":209,"column_start":17,"column_end":29},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3645},"to":{"krate":0,"index":558}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":103011,"byte_end":103027,"line_start":228,"line_end":228,"column_start":10,"column_end":26},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":103874,"byte_end":103890,"line_start":253,"line_end":253,"column_start":19,"column_end":35},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3697},"to":{"krate":0,"index":551}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":104558,"byte_end":104570,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/thread.rs","byte_start":104782,"byte_end":104787,"line_start":286,"line_end":286,"column_start":10,"column_end":15},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":95507,"byte_end":95511,"line_start":97,"line_end":97,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":558}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":95514,"byte_end":95518,"line_start":97,"line_end":97,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":558}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":95987,"byte_end":95990,"line_start":111,"line_end":111,"column_start":17,"column_end":20},"kind":{"Impl":{"id":253}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":558}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/park/mod.rs","byte_start":96079,"byte_end":96082,"line_start":117,"line_end":117,"column_start":17,"column_end":20},"kind":{"Impl":{"id":254}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":558}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/context.rs","byte_start":127466,"byte_end":127475,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":579},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9074574,"byte_end":9074588,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9078127,"byte_end":9078132,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3777},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9078819,"byte_end":9078833,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3742},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9079720,"byte_end":9079734,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3742},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9079900,"byte_end":9079907,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9080365,"byte_end":9080372,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4248},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9080540,"byte_end":9080543,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":262}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":4212}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/basic_scheduler.rs","byte_start":9081641,"byte_end":9081647,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3751},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":9089330,"byte_end":9089336,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3842},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":9089361,"byte_end":9089367,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3842},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":9089726,"byte_end":9089730,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/core.rs","byte_start":9090508,"byte_end":9090512,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9096894,"byte_end":9096903,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9099982,"byte_end":9099991,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4257},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9100234,"byte_end":9100243,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":4257},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9100520,"byte_end":9100529,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4257},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/error.rs","byte_start":9100563,"byte_end":9100568,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":272}},"from":{"krate":1,"index":2704},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":9101246,"byte_end":9101253,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":9101730,"byte_end":9101737,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/harness.rs","byte_start":9103908,"byte_end":9103913,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3954},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9116217,"byte_end":9116227,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9116264,"byte_end":9116274,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9116290,"byte_end":9116300,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9116476,"byte_end":9116486,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9116513,"byte_end":9116523,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9117749,"byte_end":9117759,"line_start":137,"line_end":137,"column_start":18,"column_end":28},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/join.rs","byte_start":9118025,"byte_end":9118035,"line_start":149,"line_end":149,"column_start":24,"column_end":34},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":9119282,"byte_end":9119289,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":9120820,"byte_end":9120827,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4027},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/raw.rs","byte_start":9120917,"byte_end":9120924,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4027},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":9123606,"byte_end":9123611,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":9132467,"byte_end":9132475,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":9134352,"byte_end":9134357,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4076},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/state.rs","byte_start":9134516,"byte_end":9134524,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4263},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/waker.rs","byte_start":9136342,"byte_end":9136350,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4160},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9082660,"byte_end":9082664,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4194},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9082695,"byte_end":9082699,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4194},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9082836,"byte_end":9082844,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4202},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9082885,"byte_end":9082893,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4202},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9083018,"byte_end":9083022,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":4212}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9083025,"byte_end":9083030,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":4212}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9084817,"byte_end":9084821,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9085713,"byte_end":9085717,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9085886,"byte_end":9085894,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9086180,"byte_end":9086184,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4194},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9086424,"byte_end":9086428,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4194},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9086580,"byte_end":9086588,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4202},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/task/mod.rs","byte_start":9086804,"byte_end":9086808,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4194},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/blocking/mod.rs","byte_start":128705,"byte_end":128717,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":130892,"byte_end":130899,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":138819,"byte_end":138826,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139375,"byte_end":139382,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":139902,"byte_end":139909,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":143805,"byte_end":143812,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/builder.rs","byte_start":143891,"byte_end":143898,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":144693,"byte_end":144705,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":147583,"byte_end":147604,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4320},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":148434,"byte_end":148439,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":150547,"byte_end":150552,"line_start":212,"line_end":212,"column_start":21,"column_end":26},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/enter.rs","byte_start":150682,"byte_end":150687,"line_start":218,"line_end":218,"column_start":15,"column_end":20},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":151745,"byte_end":151751,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":154851,"byte_end":154857,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164217,"byte_end":164232,"line_start":359,"line_end":359,"column_start":21,"column_end":36},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164380,"byte_end":164395,"line_start":365,"line_end":365,"column_start":23,"column_end":38},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/handle.rs","byte_start":164553,"byte_end":164568,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":668},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/shell.rs","byte_start":166857,"byte_end":166862,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/shell.rs","byte_start":167468,"byte_end":167474,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4358},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/spawner.rs","byte_start":168071,"byte_end":168078,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/spawner.rs","byte_start":168321,"byte_end":168328,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/runtime/mod.rs","byte_start":116406,"byte_end":116413,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":172931,"byte_end":172937,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":174478,"byte_end":174488,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":757},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":175335,"byte_end":175351,"line_start":157,"line_end":157,"column_start":10,"column_end":26},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":175483,"byte_end":175499,"line_start":163,"line_end":163,"column_start":19,"column_end":35},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4410},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/coop.rs","byte_start":177239,"byte_end":177245,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":9141948,"byte_end":9141951,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":329}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":4445}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":9142673,"byte_end":9142681,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":9142771,"byte_end":9142779,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":9144932,"byte_end":9144939,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4468},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/registry.rs","byte_start":9145047,"byte_end":9145054,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9151126,"byte_end":9151135,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4513},"to":{"krate":0,"index":4455}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9151249,"byte_end":9151258,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4513},"to":{"krate":0,"index":4445}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9151646,"byte_end":9151657,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4579},"to":{"krate":0,"index":4455}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9151943,"byte_end":9151953,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9155749,"byte_end":9155759,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4540},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9158108,"byte_end":9158114,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9158399,"byte_end":9158405,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9164594,"byte_end":9164600,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/signal/unix.rs","byte_start":9166458,"byte_end":9166464,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4596},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":9201456,"byte_end":9201465,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":5192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":9201611,"byte_end":9201620,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":5192},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/all.rs","byte_start":9201659,"byte_end":9201668,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":5192},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":9202619,"byte_end":9202628,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":9202774,"byte_end":9202783,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5203},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/any.rs","byte_start":9202822,"byte_end":9202831,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5203},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":9203754,"byte_end":9203759,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":8090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/chain.rs","byte_start":9203939,"byte_end":9203944,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":8090},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205489,"byte_end":9205503,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":4753},"to":{"krate":0,"index":4682}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205522,"byte_end":9205529,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":8052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9205813,"byte_end":9205820,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":8052},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9206796,"byte_end":9206802,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":353}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":4682}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9206857,"byte_end":9206863,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":354}},"from":{"krate":5,"index":5501},"to":{"krate":0,"index":4753}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9207252,"byte_end":9207255,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":355}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":4682}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9207301,"byte_end":9207304,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":356}},"from":{"krate":5,"index":4754},"to":{"krate":0,"index":4753}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9207687,"byte_end":9207690,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":357}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":4682}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9207738,"byte_end":9207741,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":358}},"from":{"krate":5,"index":93},"to":{"krate":0,"index":4753}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9208256,"byte_end":9208262,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":359}},"from":{"krate":2,"index":32474},"to":{"krate":0,"index":4682}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9208351,"byte_end":9208357,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":360}},"from":{"krate":2,"index":32474},"to":{"krate":0,"index":4753}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9209435,"byte_end":9209440,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":361}},"from":{"krate":19,"index":341},"to":{"krate":0,"index":4682}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9209488,"byte_end":9209493,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":362}},"from":{"krate":19,"index":341},"to":{"krate":0,"index":4753}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9209893,"byte_end":9209901,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":363}},"from":{"krate":19,"index":535},"to":{"krate":0,"index":4682}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/collect.rs","byte_start":9209949,"byte_end":9209957,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":364}},"from":{"krate":19,"index":535},"to":{"krate":0,"index":4753}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211228,"byte_end":9211233,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5214},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211264,"byte_end":9211269,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5214},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211300,"byte_end":9211305,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5214},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/empty.rs","byte_start":9211848,"byte_end":9211853,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5214},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":9212467,"byte_end":9212473,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":7996},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":9212691,"byte_end":9212697,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":7996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter.rs","byte_start":9212816,"byte_end":9212822,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":7996},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":9213908,"byte_end":9213917,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":7951},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":9214138,"byte_end":9214147,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":7951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/filter_map.rs","byte_start":9214269,"byte_end":9214278,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":7951},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":9215350,"byte_end":9215360,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":7902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fold.rs","byte_start":9215556,"byte_end":9215566,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":7902},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":9216465,"byte_end":9216469,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":7862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/fuse.rs","byte_start":9216629,"byte_end":9216633,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":7862},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9217576,"byte_end":9217580,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5221},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/iter.rs","byte_start":9218242,"byte_end":9218246,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5221},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":9218992,"byte_end":9218995,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":7808},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":9219184,"byte_end":9219187,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":7808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/map.rs","byte_start":9219308,"byte_end":9219311,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":7808},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":9220156,"byte_end":9220161,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":7759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/merge.rs","byte_start":9220415,"byte_end":9220420,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":7759},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":9221932,"byte_end":9221936,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5227},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":9221970,"byte_end":9221974,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/next.rs","byte_start":9222115,"byte_end":9222119,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5227},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9222615,"byte_end":9222619,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5235},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/once.rs","byte_start":9223246,"byte_end":9223250,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5235},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9223797,"byte_end":9223804,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9223835,"byte_end":9223842,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9223873,"byte_end":9223880,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5241},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/pending.rs","byte_start":9224573,"byte_end":9224580,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5241},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9230245,"byte_end":9230254,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9237255,"byte_end":9237264,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/stream_map.rs","byte_start":9238803,"byte_end":9238812,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5248},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":9240028,"byte_end":9240032,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":7722},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":9240242,"byte_end":9240246,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":7722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip.rs","byte_start":9240379,"byte_end":9240383,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":7722},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":9241609,"byte_end":9241618,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":7677},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":9241839,"byte_end":9241848,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":7677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/skip_while.rs","byte_start":9242033,"byte_end":9242042,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":7677},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":9243391,"byte_end":9243398,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5260},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":9243432,"byte_end":9243439,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/try_next.rs","byte_start":9243646,"byte_end":9243653,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5260},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":9244263,"byte_end":9244267,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":7640},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":9244477,"byte_end":9244481,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":7640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take.rs","byte_start":9244614,"byte_end":9244618,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":7640},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":9246137,"byte_end":9246146,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":7591},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":9246406,"byte_end":9246415,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":7591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/take_while.rs","byte_start":9246608,"byte_end":9246617,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":7591},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":9278283,"byte_end":9278290,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":7552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/timeout.rs","byte_start":9278645,"byte_end":9278652,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":7552},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9176698,"byte_end":9176704,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":20,"index":68},"to":{"krate":0,"index":5155}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/stream/mod.rs","byte_start":9200686,"byte_end":9200688,"line_start":824,"line_end":824,"column_start":32,"column_end":34},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5190},"to":{"krate":0,"index":5155}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":9324713,"byte_end":9324724,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":9330651,"byte_end":9330662,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5425},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":9330748,"byte_end":9330759,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5425},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":9330892,"byte_end":9330903,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5425},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":9330928,"byte_end":9330939,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5425},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/task/atomic_waker.rs","byte_start":9331035,"byte_end":9331040,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":421}},"from":{"krate":2,"index":9316},"to":{"krate":0,"index":5448}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9297367,"byte_end":9297376,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5471},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9297538,"byte_end":9297547,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5471},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9297616,"byte_end":9297628,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5483},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9297927,"byte_end":9297939,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5483},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9299750,"byte_end":9299756,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9306057,"byte_end":9306063,"line_start":357,"line_end":357,"column_start":18,"column_end":24},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5459},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9306202,"byte_end":9306210,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9310601,"byte_end":9310609,"line_start":514,"line_end":514,"column_start":18,"column_end":26},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5465},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9310756,"byte_end":9310764,"line_start":522,"line_end":522,"column_start":20,"column_end":28},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5465},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9311227,"byte_end":9311232,"line_start":538,"line_end":538,"column_start":9,"column_end":14},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9315604,"byte_end":9315609,"line_start":684,"line_end":684,"column_start":31,"column_end":36},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5322},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9315646,"byte_end":9315651,"line_start":685,"line_end":685,"column_start":31,"column_end":36},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5322},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9315676,"byte_end":9315681,"line_start":687,"line_end":687,"column_start":18,"column_end":23},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5322},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9316050,"byte_end":9316055,"line_start":705,"line_end":705,"column_start":36,"column_end":41},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5322},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9316450,"byte_end":9316455,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/oneshot.rs","byte_start":9318168,"byte_end":9318173,"line_start":786,"line_end":786,"column_start":21,"column_end":26},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5496},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":9337569,"byte_end":9337574,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":9347556,"byte_end":9347562,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/block.rs","byte_start":9348044,"byte_end":9348050,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5534},"to":{"krate":2,"index":2323}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":9348688,"byte_end":9348694,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5588},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":9348826,"byte_end":9348832,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5588},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":9349239,"byte_end":9349247,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5597},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":9351019,"byte_end":9351027,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":9353455,"byte_end":9353463,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5597},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":9353523,"byte_end":9353531,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5597},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/bounded.rs","byte_start":9353719,"byte_end":9353725,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9365115,"byte_end":9365117,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5662},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9365518,"byte_end":9365520,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5671},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9365827,"byte_end":9365836,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6088},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9366098,"byte_end":9366110,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6095},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9367895,"byte_end":9367899,"line_start":124,"line_end":124,"column_start":27,"column_end":31},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5695},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9368532,"byte_end":9368540,"line_start":148,"line_end":148,"column_start":24,"column_end":32},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5707},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9368806,"byte_end":9368810,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5695},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9368859,"byte_end":9368863,"line_start":158,"line_end":158,"column_start":40,"column_end":44},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5695},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9369342,"byte_end":9369344,"line_start":182,"line_end":182,"column_start":12,"column_end":14},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9370043,"byte_end":9370045,"line_start":208,"line_end":208,"column_start":9,"column_end":11},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9370193,"byte_end":9370195,"line_start":214,"line_end":214,"column_start":9,"column_end":11},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9370373,"byte_end":9370375,"line_start":220,"line_end":220,"column_start":22,"column_end":24},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5662},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9370775,"byte_end":9370777,"line_start":236,"line_end":236,"column_start":21,"column_end":23},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5662},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9371304,"byte_end":9371306,"line_start":261,"line_end":261,"column_start":12,"column_end":14},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9374426,"byte_end":9374428,"line_start":352,"line_end":352,"column_start":21,"column_end":23},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5671},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9374864,"byte_end":9374868,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":5695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9375332,"byte_end":9375336,"line_start":395,"line_end":395,"column_start":21,"column_end":25},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":5695},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9375885,"byte_end":9375897,"line_start":412,"line_end":412,"column_start":32,"column_end":44},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6075},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/chan.rs","byte_start":9377557,"byte_end":9377568,"line_start":485,"line_end":485,"column_start":20,"column_end":31},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":450},"to":{"krate":0,"index":5685}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":9380312,"byte_end":9380314,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":5820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":9386018,"byte_end":9386020,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":5820},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":9386297,"byte_end":9386299,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":5824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/list.rs","byte_start":9389698,"byte_end":9389700,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":5824},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":9390374,"byte_end":9390389,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":5860},"to":{"krate":2,"index":1742}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":9390530,"byte_end":9390545,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":5860},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":9391003,"byte_end":9391020,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5869},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":9391998,"byte_end":9392015,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":9394487,"byte_end":9394504,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5869},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/unbounded.rs","byte_start":9394670,"byte_end":9394685,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9395795,"byte_end":9395804,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":6088},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9395964,"byte_end":9395973,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6088},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9396459,"byte_end":9396471,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6095},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9396504,"byte_end":9396516,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":6095},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9396856,"byte_end":9396868,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":6095},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9397097,"byte_end":9397106,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":6106},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9397236,"byte_end":9397245,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":6106},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9397731,"byte_end":9397743,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":6111},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9398049,"byte_end":9398061,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6111},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9398218,"byte_end":9398229,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9398328,"byte_end":9398339,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6121},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9398469,"byte_end":9398480,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6121},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9398984,"byte_end":9399000,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":6131},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/mpsc/error.rs","byte_start":9399037,"byte_end":9399053,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6131},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9403870,"byte_end":9403879,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":5954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9420073,"byte_end":9420082,"line_start":578,"line_end":578,"column_start":15,"column_end":24},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":5954},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9420161,"byte_end":9420170,"line_start":584,"line_end":584,"column_start":21,"column_end":30},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":5954},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9420548,"byte_end":9420557,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":5954},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9420582,"byte_end":9420591,"line_start":596,"line_end":596,"column_start":22,"column_end":31},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":5954},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9420629,"byte_end":9420635,"line_start":600,"line_end":600,"column_start":6,"column_end":12},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9427041,"byte_end":9427047,"line_start":793,"line_end":793,"column_start":18,"column_end":24},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":6142},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9427120,"byte_end":9427126,"line_start":799,"line_end":799,"column_start":15,"column_end":21},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6142},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9427548,"byte_end":9427560,"line_start":815,"line_end":815,"column_start":6,"column_end":18},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9427740,"byte_end":9427752,"line_start":825,"line_end":825,"column_start":23,"column_end":35},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":6147},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9427896,"byte_end":9427908,"line_start":831,"line_end":831,"column_start":28,"column_end":40},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6147},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9427955,"byte_end":9427970,"line_start":835,"line_end":835,"column_start":6,"column_end":21},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9428500,"byte_end":9428515,"line_start":854,"line_end":854,"column_start":23,"column_end":38},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6152},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9428801,"byte_end":9428816,"line_start":863,"line_end":863,"column_start":28,"column_end":43},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6152},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9428854,"byte_end":9428860,"line_start":867,"line_end":867,"column_start":6,"column_end":12},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9434347,"byte_end":9434355,"line_start":1038,"line_end":1038,"column_start":6,"column_end":14},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9438018,"byte_end":9438026,"line_start":1176,"line_end":1176,"column_start":21,"column_end":29},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6165},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/sync/semaphore_ll.rs","byte_start":9438379,"byte_end":9438390,"line_start":1192,"line_end":1192,"column_start":6,"column_end":17},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/yield_now.rs","byte_start":9452172,"byte_end":9452180,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6213},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9459312,"byte_end":9459320,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9467162,"byte_end":9467170,"line_start":446,"line_end":446,"column_start":21,"column_end":29},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6361},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9467309,"byte_end":9467317,"line_start":452,"line_end":452,"column_start":17,"column_end":25},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6361},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9468282,"byte_end":9468290,"line_start":476,"line_end":476,"column_start":18,"column_end":26},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6361},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9468371,"byte_end":9468379,"line_start":482,"line_end":482,"column_start":15,"column_end":23},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6361},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9469246,"byte_end":9469254,"line_start":512,"line_end":512,"column_start":28,"column_end":36},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7505},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9470139,"byte_end":9470145,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/local.rs","byte_start":9470708,"byte_end":9470711,"line_start":562,"line_end":562,"column_start":25,"column_end":28},"kind":{"Impl":{"id":517}},"from":{"krate":5,"index":4415},"to":{"krate":0,"index":4212}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9474280,"byte_end":9474288,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9476064,"byte_end":9476072,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9476280,"byte_end":9476288,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6313},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9476609,"byte_end":9476624,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":7445},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9476925,"byte_end":9476930,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6341},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9477548,"byte_end":9477549,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6354},"to":{"krate":0,"index":6352}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9477734,"byte_end":9477745,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9477889,"byte_end":9477900,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6373},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/task/task_local.rs","byte_start":9478047,"byte_end":9478058,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6373},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/clock.rs","byte_start":9482643,"byte_end":9482648,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9493246,"byte_end":9493256,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9511250,"byte_end":9511260,"line_start":759,"line_end":759,"column_start":19,"column_end":29},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6878},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9511288,"byte_end":9511298,"line_start":761,"line_end":761,"column_start":21,"column_end":31},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6878},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9511435,"byte_end":9511445,"line_start":768,"line_end":768,"column_start":34,"column_end":44},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6878},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9511827,"byte_end":9511832,"line_start":778,"line_end":778,"column_start":26,"column_end":31},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6903},"to":{"krate":0,"index":6822}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9513959,"byte_end":9513964,"line_start":860,"line_end":860,"column_start":21,"column_end":26},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6903},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9514094,"byte_end":9514097,"line_start":869,"line_end":869,"column_start":6,"column_end":9},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay_queue.rs","byte_start":9514184,"byte_end":9514191,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9516729,"byte_end":9516734,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/delay.rs","byte_start":9517712,"byte_end":9517717,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6920},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":9531387,"byte_end":9531398,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":9533376,"byte_end":9533394,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6928},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/atomic_stack.rs","byte_start":9533990,"byte_end":9534008,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6928},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":9538246,"byte_end":9538251,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":9544919,"byte_end":9544924,"line_start":341,"line_end":341,"column_start":15,"column_end":20},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6932},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":9545132,"byte_end":9545137,"line_start":352,"line_end":352,"column_start":22,"column_end":27},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6932},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/entry.rs","byte_start":9545162,"byte_end":9545167,"line_start":353,"line_end":353,"column_start":22,"column_end":27},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6932},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/handle.rs","byte_start":9545544,"byte_end":9545550,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/handle.rs","byte_start":9546213,"byte_end":9546219,"line_start":35,"line_end":35,"column_start":21,"column_end":27},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6957},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/registration.rs","byte_start":9546664,"byte_end":9546676,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/registration.rs","byte_start":9547586,"byte_end":9547598,"line_start":52,"line_end":52,"column_start":15,"column_end":27},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6961},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/stack.rs","byte_start":9547882,"byte_end":9547887,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6965},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/stack.rs","byte_start":9547978,"byte_end":9547983,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6965},"to":{"krate":0,"index":6822}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":9522682,"byte_end":9522688,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":9526385,"byte_end":9526391,"line_start":238,"line_end":238,"column_start":18,"column_end":24},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6969},"to":{"krate":0,"index":551}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":9528964,"byte_end":9528970,"line_start":335,"line_end":335,"column_start":18,"column_end":24},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6969},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":9529086,"byte_end":9529091,"line_start":346,"line_end":346,"column_start":6,"column_end":11},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/driver/mod.rs","byte_start":9530708,"byte_end":9530713,"line_start":408,"line_end":408,"column_start":21,"column_end":26},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6632},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9552305,"byte_end":9552310,"line_start":35,"line_end":35,"column_start":6,"column_end":11},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9553677,"byte_end":9553682,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6979},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/error.rs","byte_start":9553709,"byte_end":9553714,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6979},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9554486,"byte_end":9554493,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9558267,"byte_end":9558274,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6999},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9558403,"byte_end":9558410,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":561}},"from":{"krate":1,"index":8248},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9558525,"byte_end":9558532,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6999},"to":{"krate":2,"index":2110}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9558697,"byte_end":9558704,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6999},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9558809,"byte_end":9558816,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6999},"to":{"krate":2,"index":2115}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9558957,"byte_end":9558964,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6999},"to":{"krate":2,"index":2115}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9559125,"byte_end":9559132,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6999},"to":{"krate":2,"index":2145}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/instant.rs","byte_start":9559239,"byte_end":9559246,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6999},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9563128,"byte_end":9563136,"line_start":124,"line_end":124,"column_start":6,"column_end":14},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":7022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/interval.rs","byte_start":9564431,"byte_end":9564439,"line_start":169,"line_end":169,"column_start":32,"column_end":40},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":7022},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9567771,"byte_end":9567778,"line_start":119,"line_end":119,"column_start":6,"column_end":13},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":7027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9567907,"byte_end":9567914,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":7414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9568452,"byte_end":9568459,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":7414},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9569037,"byte_end":9569044,"line_start":172,"line_end":172,"column_start":23,"column_end":30},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":7027},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9569188,"byte_end":9569195,"line_start":178,"line_end":178,"column_start":28,"column_end":35},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":7027},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/timeout.rs","byte_start":9569232,"byte_end":9569237,"line_start":180,"line_end":180,"column_start":33,"column_end":38},"kind":{"Impl":{"id":575}},"from":{"krate":1,"index":2704},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9587377,"byte_end":9587385,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":7366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/throttle.rs","byte_start":9588200,"byte_end":9588208,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7366},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/level.rs","byte_start":9579141,"byte_end":9579146,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":6795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/level.rs","byte_start":9583898,"byte_end":9583903,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":6795},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/stack.rs","byte_start":9585019,"byte_end":9585026,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2033},"to":{"krate":0,"index":6822}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/mod.rs","byte_start":9570962,"byte_end":9570967,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":7069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/time/wheel/mod.rs","byte_start":9576675,"byte_end":9576679,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/bit.rs","byte_start":9589041,"byte_end":9589045,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/bit.rs","byte_start":9590519,"byte_end":9590523,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7277},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/addr.rs","byte_start":9597742,"byte_end":9597749,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/entry.rs","byte_start":9600384,"byte_end":9600391,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2033},"to":{"krate":0,"index":7132}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/generation.rs","byte_start":9600778,"byte_end":9600788,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":9601927,"byte_end":9601932,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":9602274,"byte_end":9602280,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":7157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":9606232,"byte_end":9606237,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":7155},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/page.rs","byte_start":9606543,"byte_end":9606549,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":7157},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/shard.rs","byte_start":9608692,"byte_end":9608697,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/shard.rs","byte_start":9610376,"byte_end":9610381,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7201},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/slot.rs","byte_start":9610758,"byte_end":9610762,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/stack.rs","byte_start":9611733,"byte_end":9611746,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/stack.rs","byte_start":9612574,"byte_end":9612587,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":7245},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":9592121,"byte_end":9592125,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":7260},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":9592162,"byte_end":9592166,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":7260},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":9592189,"byte_end":9592193,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":7260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/slab/mod.rs","byte_start":9593708,"byte_end":9593712,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7260},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":181552,"byte_end":181562,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":181621,"byte_end":181631,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182920,"byte_end":182928,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":182965,"byte_end":182973,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":2057}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":183027,"byte_end":183037,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":186041,"byte_end":186051,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":187389,"byte_end":187397,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/linked_list.rs","byte_start":187596,"byte_end":187604,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":784},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/rand.rs","byte_start":197676,"byte_end":197684,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/wake.rs","byte_start":199224,"byte_end":199228,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/wake.rs","byte_start":199231,"byte_end":199235,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":825}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/wake.rs","byte_start":199546,"byte_end":199554,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7332},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203520,"byte_end":203528,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203778,"byte_end":203786,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7341},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":203891,"byte_end":203899,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7341},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.25/src/util/intrusive_double_linked_list.rs","byte_start":204208,"byte_end":204218,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7350},"to":{"krate":4294967295,"index":4294967295}}]}