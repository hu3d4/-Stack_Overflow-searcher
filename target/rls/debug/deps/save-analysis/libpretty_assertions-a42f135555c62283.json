{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1","program":"/home/haruka/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","pretty_assertions","--edition=2018","/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=a42f135555c62283","-C","extra-filename=-a42f135555c62283","--out-dir","/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps","-L","dependency=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps","--extern","ansi_term=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/libansi_term-781a87e84f83f2ac.rmeta","--extern","difference=/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/libdifference-862206e29cdf9d87.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/haruka/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/haruka/Dev/Projects/Rust/stack_overflow_searcher/target/rls/debug/deps/libpretty_assertions-a42f135555c62283.rmeta"},"prelude":{"crate_id":{"name":"pretty_assertions","disambiguator":[3189084264601315049,11966395813590242234]},"crate_root":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src","external_crates":[{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":18,"id":{"name":"ansi_term","disambiguator":[806012763832588367,910302264380224465]}},{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","num":19,"id":{"name":"difference","disambiguator":[5525483906230134234,13813710855884066565]}}],"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":0,"byte_end":6387,"line_start":1,"line_end":194,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":209},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2733,"byte_end":2738,"line_start":82,"line_end":82,"column_start":20,"column_end":25},"alias_span":null,"name":"Style","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":0,"byte_end":6387,"line_start":1,"line_end":194,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":59},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":37}],"decl_id":null,"docs":" # Pretty Assertions","sig":null,"attributes":[{"value":"/ # Pretty Assertions","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":0,"byte_end":23,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":24,"byte_end":27,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ When writing tests in Rust, you'll probably use `assert_eq!(a, b)` _a lot_.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":28,"byte_end":107,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":108,"byte_end":111,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ If such a test fails, it will present all the details of `a` and `b`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":112,"byte_end":185,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ But you have to spot the differences yourself, which is not always straightforward,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":186,"byte_end":273,"line_start":6,"line_end":6,"column_start":1,"column_end":88}},{"value":"/ like here:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":274,"byte_end":288,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":289,"byte_end":292,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ![standard assertion](https://raw.githubusercontent.com/colin-kiegel/rust-pretty-assertions/1a7feb17e1dfbeabfac91b0d5a9cb78dfb1bc065/examples/standard_assertion.png)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":293,"byte_end":462,"line_start":9,"line_end":9,"column_start":1,"column_end":170}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":463,"byte_end":466,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Wouldn't that task be _much_ easier with a colorful diff?","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":467,"byte_end":528,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":529,"byte_end":532,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ![pretty assertion](https://raw.githubusercontent.com/colin-kiegel/rust-pretty-assertions/1a7feb17e1dfbeabfac91b0d5a9cb78dfb1bc065/examples/pretty_assertion.png)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":533,"byte_end":698,"line_start":13,"line_end":13,"column_start":1,"column_end":166}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":699,"byte_end":702,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Yep — and you only need **one line of code** to make it happen:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":703,"byte_end":772,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":773,"byte_end":776,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":777,"byte_end":795,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/ use pretty_assertions::{assert_eq, assert_ne};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":796,"byte_end":846,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":847,"byte_end":854,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":855,"byte_end":858,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ <details>","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":859,"byte_end":872,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ <summary>Show the example behind the screenshots above.</summary>","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":873,"byte_end":942,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":943,"byte_end":946,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":947,"byte_end":965,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ // 1. add the `pretty_assertions` dependency to `Cargo.toml`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":966,"byte_end":1031,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ // 2. insert this line at the top of each module, as needed","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1032,"byte_end":1095,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/ use pretty_assertions::{assert_eq, assert_ne};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1096,"byte_end":1146,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1147,"byte_end":1150,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1151,"byte_end":1166,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/     #[derive(Debug, PartialEq)]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1167,"byte_end":1202,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/     struct Foo {","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1203,"byte_end":1223,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/         lorem: &'static str,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1224,"byte_end":1256,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/         ipsum: u32,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1257,"byte_end":1280,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/         dolor: Result<String, String>,","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1281,"byte_end":1323,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/     }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1324,"byte_end":1333,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1334,"byte_end":1337,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     let x = Some(Foo { lorem: \"Hello World!\", ipsum: 42, dolor: Ok(\"hey\".to_string())});","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1338,"byte_end":1430,"line_start":37,"line_end":37,"column_start":1,"column_end":93}},{"value":"/     let y = Some(Foo { lorem: \"Hello Wrold!\", ipsum: 42, dolor: Ok(\"hey ho!\".to_string())});","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1431,"byte_end":1527,"line_start":38,"line_end":38,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1528,"byte_end":1531,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(x, y);","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1532,"byte_end":1557,"line_start":40,"line_end":40,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1558,"byte_end":1563,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1564,"byte_end":1571,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ </details>","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1572,"byte_end":1586,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1587,"byte_end":1590,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Tip","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1591,"byte_end":1601,"line_start":45,"line_end":45,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1602,"byte_end":1605,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Specify it as [`[dev-dependencies]`](http://doc.crates.io/specifying-dependencies.html#development-dependencies)","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1606,"byte_end":1722,"line_start":47,"line_end":47,"column_start":1,"column_end":117}},{"value":"/ and it will only be used for compiling tests, examples, and benchmarks.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1723,"byte_end":1798,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"/ This way the compile time of `cargo build` won't be affected!","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1799,"byte_end":1864,"line_start":49,"line_end":49,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1865,"byte_end":1868,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Also add `#[cfg(test)]` to your `use` statements, like this:","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1869,"byte_end":1933,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1934,"byte_end":1937,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1938,"byte_end":1956,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/ #[cfg(test)]","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1957,"byte_end":1973,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/ use pretty_assertions::{assert_eq, assert_ne};","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":1974,"byte_end":2024,"line_start":55,"line_end":55,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2025,"byte_end":2032,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2033,"byte_end":2036,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2037,"byte_end":2048,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2049,"byte_end":2052,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ * Since `Rust 2018` edition, you need to declare","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2053,"byte_end":2105,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/   `use pretty_assertions::{assert_eq, assert_ne};` per module.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2106,"byte_end":2172,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/   Before you would write `#[macro_use] extern crate pretty_assertions;`.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2173,"byte_end":2249,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ * The replacement is only effective in your own crate, not in other libraries","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2250,"byte_end":2331,"line_start":63,"line_end":63,"column_start":1,"column_end":82}},{"value":"/   you include.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2332,"byte_end":2350,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ * `assert_ne` is also switched to multi-line presentation, but does _not_ show","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2351,"byte_end":2433,"line_start":65,"line_end":65,"column_start":1,"column_end":83}},{"value":"/   a diff.","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2434,"byte_end":2447,"line_start":66,"line_end":66,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2894,"byte_end":2904,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"Comparison","qualname":"::Comparison","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2947,"byte_end":2950,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"new","qualname":"<Comparison>::new","value":"pub fn new<TLeft: Debug, TRight: Debug>(&TLeft, &TRight) -> Comparison","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2923,"byte_end":2933,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":3250,"byte_end":3260,"line_start":105,"line_end":105,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":2923,"byte_end":2933,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/haruka/.cargo/registry/src/github.com-1ecc6299db9ec823/pretty_assertions-0.6.1/src/lib.rs","byte_start":3250,"byte_end":3260,"line_start":105,"line_end":105,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":6604}}]}